00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 8/14/2020 2:21:38 PM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      :  I/O
00000000                             3  * Written by :  Sesario Imanputra, Zachary Liong, Micha Rice, Marci Ma
00000000                             4  * Date       :  
00000000                             5  * Description: Starts at 4000. For testing purposes, theres a bunch of ML codes to disassemble at 4000. Currently, the first ML code at 4000 is NOP.
00000000                             6  * afterwards, it will include ML of whatever we wrote after NOP.
00000000                             7  * current I/O should be able to detext values exceeding the 32 bit unsigned range (FFFFFFFF) and recognize invalid input.
00000000                             8  * if you input a lower case letter, it will automatically convert into uppercase. 
00000000                             9  *-----------------------------------------------------------    
00004000                            10          ORG    $4000   
00004000                            11  ****************************************************        
00004000                            12  pro              
00004000  4E71                      13                   NOP
00004002                            14                   
00004002                            15                   ;OPCODEGROUP8 TEST
00004002                            16                   ;MOVE.B  D2,D3          
00004002                            17                   ;MOVEA #$00000047,A0 ;should be data
00004002  E622                      18                   ASR.B  D3,D2
00004004                            19                   ;OPCODEGROUP1.1 TEST 
00004004  48A5 8000                 20                   MOVEM.W D0,-(A5)
00004008  48A5 4000                 21                   MOVEM.W D1,-(A5)
0000400C  48A5 2000                 22                   MOVEM.W D2,-(A5) 
00004010  48A5 0100                 23                   MOVEM.W D7,-(A5)
00004014                            24                   
00004014  48A5 0080                 25                   MOVEM.W A0,-(A5) 
00004018  48A5 0040                 26                   MOVEM.W A1,-(A5) 
0000401C  48A5 0020                 27                   MOVEM.W A2,-(A5) 
00004020  48A5 0001                 28                   MOVEM.W A7,-(A5)
00004024  48A5 FFFF                 29                   MOVEM.W D0-D7/A0-A7,-(A5)    
00004028  48A5 783C                 30                   MOVEM.W D1-D4/A2-A5,-(A5) 
0000402C                            31  
0000402C  4C9D 0001                 32                   MOVEM.W (A5)+,D0
00004030  4C9D 0002                 33                   MOVEM.W (A5)+,D1
00004034  4C9D 0004                 34                   MOVEM.W (A5)+,D2
00004038  4C9D 0080                 35                   MOVEM.W (A5)+,D7
0000403C  4C9D 0100                 36                   MOVEM.W (A5)+,A0
00004040  4C9D 0200                 37                   MOVEM.W (A5)+,A1 
00004044  4C9D 0400                 38                   MOVEM.W (A5)+,A2
00004048  4C9D 8000                 39                   MOVEM.W (A5)+,A7  
0000404C  4C9D FFFF                 40                   MOVEM.W (A5)+,D0-D7/A0-A7 ;D7 not printing
00004050  4C9D 3C1E                 41                   MOVEM.W (A5)+,D1-D4/A2-A5
00004054                            42  
00004054                            43                   
00004054                            44                   ;JMP    pa      ;should be data (not wokring)
00004054                            45                   
00004054                            46                   ;OPCODEGROUP6 TEST
00004054                            47                   ;ADD.B   D2,D3 
00004054                            48                   ;ADDX   -(A2),-(A3)    ;should be data (not working)
00004054                            49                   ;ADDA   D3,A3          ;should be data
00004054                            50                   
00004054                            51                   ;OPCODEGROUP4 TEST
00004054                            52                   ;SUB.B    D2,D3 
00004054                            53                   ;SUBX   -(A2),-(A3)    ;should be data (not working)
00004054                            54                   ;SUBA   D3,A3          ;should be data
00004054                            55                   
00004054                            56                   ;OPCODEGROUP5 TEST
00004054  C7C2                      57                   MULS  D2,D3 
00004056                            58                   ;MULU  D2,D3           ;should be data (not working)
00004056                            59                   
00004056                            60                   ;OPCODEGROUP3 TEST
00004056  86C2                      61                   DIVU  D2,D3 
00004058                            62                   ;DIVS  D2,D3           ;should be data
00004058                            63                   
00004058                            64                   ;OPCODEGROUP1.5 TEST
00004058  45F8 2000                 65                   LEA   $2000,A2  
0000405C                            66                   
0000405C                            67                   ;OPCODEGROUP5 TEST
0000405C                            68                   ;AND   #3,D3            
0000405C                            69                   ;EXG   D2,D3           ;should be data (not working)
0000405C                            70                   
0000405C                            71                   ;OPCODEGROUP1.3 TEST
0000405C  4603                      72                   NOT.B   D3
0000405E  465B                      73                   NOT.W   (A3)+
00004060  46A3                      74                   NOT.L   -(A3)
00004062  4678 1234                 75                   NOT.W   $1234
00004066  46B9 12345678             76                   NOT.L   $12345678
0000406C                            77                   ;MOVE  D3,SR           ;should be data (not working)
0000406C                            78  
0000406C                            79                   
0000406C                            80                   ;OPCODEGROUP7.1.1 TEST  REG SHIFT
0000406C                            81                   ;LSL.B   #2,D3 
0000406C  E1AD                      82                   LSL.L   D0,D5 
0000406E                            83                   
0000406E                            84                   ;OPCODEGROUP7.1.2 TEST   REG SHIFT
0000406E  E503                      85                   ASL.B   #2,D3 
00004070                            86                   
00004070                            87                   ;OPCODEGROUP7.3.2 TEST     MEM SHIFT
00004070  E3D8                      88                   LSL   (A0)+ 
00004072                            89                  
00004072                            90                   ;OPCODEGROUP7.3.1 TEST       MEM SHIFT           
00004072  E1D8                      91                   ASL   (A0)+ 
00004074                            92                   
00004074                            93                  ;OPCODEGROUP2.3 TEST
00004074  6E00 0002                 94                   BGT   pa
00004078                            95                  
00004078                            96  pa              ;OPCODEGROUP2.4 TEST
00004078  6F00 0002                 97                   BLE   pi
0000407C                            98                  
0000407C                            99  pi              ;OPCODEGROUP2.2 TEST
0000407C  6700 0002                100                   BEQ   pu
00004080                           101                  
00004080                           102  pu              ;OPCODEGROUP2.1 TEST
00004080  6000 0002                103                   BRA.W    po 
00004084                           104       
00004084                           105  po
00004084  4E75                     106                   RTS
00004086                           107  
00004086                           108  pe               ;OPCODEGROUP1.4 TEST
00004086  4E91                     109                  JSR   (A1)
00004088                           110  
00004088                           111                  
00004088                           112                  
00004088                           113  ****************************************************   
00001000                           114          ORG    $1000   
00001000                           115  START:                  ; first instruction of program   
00001000                           116  
00001000                           117  ;inputs for testing are  here:    
00001000                           118  
00001000  43F9 0000205A            119                  LEA     WELMSG,A1   ;Display intro message
00001006  103C 000E                120                  MOVE.B  #14,D0 
0000100A  4E4F                     121                  TRAP    #15
0000100C                           122                  
0000100C                           123  STARTMENU
0000100C  48E7 FF7E                124                  MOVEM.L     D0-D7/A1-A6,-(sp)   
00001010                           125  
00001010                           126  INPUT1                                   
00001010  43F9 00002270            127                  LEA     MSGINPUT ,A1     ;Ask for first input
00001016  103C 000E                128                  MOVE.B  #14,D0          
0000101A  4E4F                     129                  TRAP    #15       
0000101C                           130                  
0000101C  43F9 0000265E            131                  LEA     IOVariable,A1
00001022                           132                  
00001022  303C 0002                133                  MOVE.W  #2,D0           ;had to specify or it wont work properly
00001026  4E4F                     134                  TRAP    #15
00001028  6000 001E                135                  BRA     FOR_LOOP 
0000102C                           136                  
0000102C  43F9 000022A4            137  INPUT2          LEA     MSGINPUT2,A1    ;Ask for second input
00001032  103C 000E                138                  MOVE.B  #14,D0
00001036  4E4F                     139                  TRAP    #15
00001038  43F9 0000265E            140                  LEA     IOVariable,A1
0000103E                           141                  
0000103E  303C 0002                142                  MOVE.W  #2,D0
00001042  4E4F                     143                  TRAP    #15
00001044  6000 0002                144                  BRA     FOR_LOOP
00001048                           145                  
00001048                           146                                
00001048  B601                     147  FOR_LOOP        CMP.B   D1,D3
0000104A  6700 0116                148                  BEQ     CHECKNEG
0000104E  4246                     149                  CLR.W   D6               
00001050  DC19                     150                  ADD.B  (A1)+,D6
00001052  BC3C 0051                151                  CMP.B   #$51,D6
00001056  6700 0FEC                152                  BEQ     ENDPROGRAM
0000105A  BC3C 0071                153                  CMP.B   #$71,D6
0000105E  6700 0FE4                154                  BEQ     ENDPROGRAM
00001062  BC3C 0030                155                  CMP.B   #$30,D6
00001066  6D00 00BE                156                  BLT     BADINPUT
0000106A  BC3C 0039                157                  CMP.B   #$39,D6
0000106E  6E00 0024                158                  BGT     CHECKINPUTAGAIN 
00001072                           159  CONTLOOP
00001072  4EB9 00001150            160                  JSR     AtoH
00001078  0C03 0000                161                  CMPI.B  #0,D3
0000107C  6600 003E                162                  BNE     OTHERVAL
00001080  0C07 0000                163                  CMPI.B  #0,D7   
00001084  6D00 000A                164                  BLT     SUBSTRACTVAL                 
00001088  D806                     165                  ADD.B   D6,D4 ;first value
0000108A                           166  RETLOOP                
0000108A  5243                     167                  ADD.W   #1,D3
0000108C  60BA                     168                  BRA     FOR_LOOP
0000108E                           169                  
0000108E                           170  RETLOOPNEG                
0000108E                           171                  ;ADD.W   #1,D3
0000108E                           172                  ;ADD.W   #1,D7
0000108E  60B8                     173                  BRA     FOR_LOOP
00001090                           174  
00001090                           175  
00001090                           176  SUBSTRACTVAL                 
00001090  9846                     177                  SUB.W   D6,D4
00001092  60F6                     178                  BRA     RETLOOP
00001094                           179                  
00001094                           180  CHECKINPUTAGAIN 
00001094  BC3C 0046                181                  CMP.B   #$46,D6
00001098  6E00 000C                182                  BGT     LOWERCASE
0000109C  BC3C 0041                183                  CMP.B   #$41,D6
000010A0  6D00 0084                184                  BLT     BADINPUT
000010A4  60CC                     185                  BRA     CONTLOOP
000010A6                           186                  
000010A6                           187  LOWERCASE
000010A6  BC3C 0061                188                  CMP.B   #$61,D6
000010AA  6D00 007A                189                  BLT     BADINPUT
000010AE  BC3C 0066                190                  CMP.B   #$66,D6
000010B2  6E00 0072                191                  BGT     BADINPUT
000010B6  0406 0020                192                  SUBI.B  #$20,D6
000010BA  60B6                     193                  BRA     CONTLOOP
000010BC                           194  
000010BC                           195                  
000010BC                           196  OTHERVAL
000010BC  E984                     197                  ASL.L   #4,D4 ;u r overflowing, this is the last digit u can add
000010BE  6900 002A                198                  BVS     OVERFLOWINPUTCHECK ;u r overflowing, this is the last digit u can add
000010C2  0C07 0000                199                  CMPI.B  #0,D7
000010C6  6600 0034                200                  BNE     OVERFLOWINPUT
000010CA  D846                     201                  ADD.W   D6,D4           
000010CC  5243                     202                  ADD.W   #1,D3
000010CE  6000 FF78                203                  BRA     FOR_LOOP
000010D2                           204                  
000010D2                           205  SUBSTRACTVALOTHER
000010D2  9846                     206                  SUB.W   D6,D4
000010D4  6A00 0008                207                  BPL     OVERFLOWDETECT  
000010D8  5243                     208                  ADD.W   #1,D3
000010DA  6000 FF6C                209                  BRA     FOR_LOOP
000010DE                           210    
000010DE                           211  OVERFLOWDETECT
000010DE  2A7C 00000001            212                  MOVE.L  #1,A5    
000010E4  5243                     213                  ADD.W   #1,D3
000010E6  6000 FF60                214                  BRA     FOR_LOOP
000010EA                           215  
000010EA                           216  OVERFLOWINPUTCHECK
000010EA  0C07 0000                217                  CMPI.B  #0,D7
000010EE  6600 000C                218                  BNE     OVERFLOWINPUT
000010F2  5207                     219                  ADDI.B  #1,D7
000010F4  D846                     220                  ADD.W   D6,D4                
000010F6  5243                     221                  ADD.W   #1,D3
000010F8  6000 FF4E                222                  BRA     FOR_LOOP
000010FC                           223  
000010FC                           224  OVERFLOWINPUT                
000010FC  43F9 000022D8            225                  LEA     BADVALUE,A1     
00001102  303C 000D                226                  MOVE.W  #13,D0          
00001106  4E4F                     227                  TRAP    #15 
00001108  4287                     228                  CLR.L   D7
0000110A  4286                     229                  CLR.L   D6
0000110C  4285                     230                  CLR.L   D5
0000110E  4284                     231                  CLR.L   D4
00001110  4283                     232                  CLR.L   D3
00001112  4282                     233                  CLR.L   D2
00001114  4281                     234                  CLR.L   D1
00001116  4280                     235                  CLR.L   D0
00001118  B5FC 00000000            236                  CMP.L   #$0,A2
0000111E  6700 FEF0                237                  BEQ     INPUT1 
00001122  6000 FF08                238                  BRA     INPUT2    
00001126                           239  
00001126                           240  BADINPUT                
00001126  43F9 00002308            241                  LEA     BADCHARACTER,A1     
0000112C  303C 000D                242                  MOVE.W  #13,D0          
00001130  4E4F                     243                  TRAP    #15 
00001132  4287                     244                  CLR.L   D7
00001134  4286                     245                  CLR.L   D6
00001136  4285                     246                  CLR.L   D5
00001138  4284                     247                  CLR.L   D4
0000113A  4283                     248                  CLR.L   D3
0000113C  4282                     249                  CLR.L   D2
0000113E  4281                     250                  CLR.L   D1
00001140  4280                     251                  CLR.L   D0
00001142  B5FC 00000000            252                  CMP.L   #$0,A2
00001148  6700 FEC6                253                  BEQ     INPUT1 
0000114C  6000 FEDE                254                  BRA     INPUT2                                 
00001150                           255              
00001150                           256  AtoH
00001150  0C06 0030                257                  CMPI.B  #$30,D6
00001154  6D60                     258                  BLT.B   ERR
00001156  BC3C 0039                259                  CMP.B   #$39,D6
0000115A  6E68                     260                  BGT.B   ALPHA
0000115C  0406 0030                261                  SUBI.B  #$30,D6
00001160  4E75                     262                  RTS
00001162                           263                  
00001162                           264  CHECKNEG                
00001162  0C05 0001                265                  CMPI.B  #1,D5
00001166  6D00 0002                266                  BLT     RESET
0000116A                           267                          
0000116A                           268  RESET
0000116A  4246                     269                  CLR.W   D6
0000116C  4245                     270                  CLR.W   D5
0000116E  4243                     271                  CLR.W   D3
00001170  4247                     272                  CLR.W   D7
00001172                           273                  
00001172  0C44 0000                274                  CMPI    #0,D4
00001176  6700 0014                275                  BEQ     INVALIDLOWVALUE 
0000117A                           276                  
0000117A  5242                     277                  ADD.W   #1,D2
0000117C  0C02 0000                278                  CMPI.B  #0,D2
00001180  0C02 0002                279                  CMPI.B  #2,D2
00001184  6700 0050                280                  BEQ     SAVESECOND
00001188                           281                  ;MOVE.W  D4,(A4)+
00001188  6000 004C                282                  BRA     SAVESECOND
0000118C                           283                  
0000118C                           284  INVALIDLOWVALUE 
0000118C  43F9 00002378            285                  LEA     VALUETOOLOW,A1     
00001192  303C 000D                286                  MOVE.W  #13,D0          
00001196  4E4F                     287                  TRAP    #15 
00001198  4287                     288                  CLR.L   D7
0000119A  4286                     289                  CLR.L   D6
0000119C  4285                     290                  CLR.L   D5
0000119E  4284                     291                  CLR.L   D4
000011A0  4283                     292                  CLR.L   D3
000011A2  4282                     293                  CLR.L   D2
000011A4  4281                     294                  CLR.L   D1
000011A6  4280                     295                  CLR.L   D0
000011A8  B5FC 00000000            296                  CMP.L   #$0,A2
000011AE  6700 FE60                297                  BEQ     INPUT1 
000011B2  6000 FE78                298                  BRA     INPUT2             
000011B6                           299                  
000011B6                           300                  
000011B6                           301  ERR             
000011B6  0C06 002D                302                  CMPI.B #$2D,D6
000011BA  6700 0004                303                  BEQ    NEGVALUE
000011BE  4E75                     304                  RTS
000011C0                           305                  
000011C0                           306  NEGVALUE
000011C0  5245                     307                  ADD.W   #1,D5
000011C2  4E75                     308                  RTS
000011C4                           309  
000011C4                           310  
000011C4                           311                  
000011C4                           312  ALPHA
000011C4  0C06 0041                313                  CMPI.B #$41,D6
000011C8  6DEC                     314                  BLT.B  ERR
000011CA  0C06 0046                315                  CMPI.B #$46,D6
000011CE  6EE6                     316                  BGT.B  ERR
000011D0  0406 0037                317                  SUBI.B #$37,D6
000011D4  4E75                     318                  RTS
000011D6                           319                  
000011D6                           320  SAVESECOND
000011D6  4241                     321                  CLR.W   D1
000011D8  4243                     322                  CLR.W   D3
000011DA  2404                     323                  MOVE.L  D4,D2
000011DC  4284                     324                  CLR.L   D4
000011DE  4240                     325                  CLR.W   D0
000011E0                           326                  ;CLR.W   D4
000011E0  4246                     327                  CLR.W   D6
000011E2                           328                  ;BRA     CHECKODD
000011E2  0802 0000                329                  BTST.L  #0,D2
000011E6  6700 002C                330                  BEQ     CHECKLOW ;even values will always have their first bit 0. 
000011EA                           331                  
000011EA                           332                  ;if not report error to higher ups. 
000011EA  43F9 000024A8            333                  LEA     EVENINPUTMSG,A1     
000011F0  303C 000D                334                  MOVE.W  #13,D0          
000011F4  4E4F                     335                  TRAP    #15 
000011F6  4287                     336                  CLR.L   D7
000011F8  4286                     337                  CLR.L   D6
000011FA  4285                     338                  CLR.L   D5
000011FC  4284                     339                  CLR.L   D4
000011FE  4283                     340                  CLR.L   D3
00001200  4282                     341                  CLR.L   D2
00001202  4281                     342                  CLR.L   D1
00001204  4280                     343                  CLR.L   D0
00001206  B5FC 00000000            344                  CMP.L   #$0,A2
0000120C  6700 FE02                345                  BEQ     INPUT1 
00001210  6000 FE1A                346                  BRA     INPUT2                
00001214                           347                  
00001214                           348  CHECKLOW
00001214  B5FC 00000000            349                  CMP.L   #$0,A2
0000121A  6600 0034                350                  BNE     FINISHSAVING
0000121E  2442                     351                  MOVE.L  D2,A2
00001220  6000 FE0A                352                  BRA     INPUT2 
00001224                           353                  
00001224                           354  BADADDRESSORDER
00001224  43F9 00002330            355                  LEA     BADADDRESS,A1     
0000122A  303C 000D                356                  MOVE.W  #13,D0          
0000122E  4E4F                     357                  TRAP    #15 
00001230  4287                     358                  CLR.L   D7
00001232  4286                     359                  CLR.L   D6
00001234  4285                     360                  CLR.L   D5
00001236  4284                     361                  CLR.L   D4
00001238  4283                     362                  CLR.L   D3
0000123A  4282                     363                  CLR.L   D2
0000123C  4281                     364                  CLR.L   D1
0000123E  4280                     365                  CLR.L   D0
00001240  247C 00000000            366                  MOVE.L  #$0,A2
00001246  267C 00000000            367                  MOVE.L  #$0,A3
0000124C  6700 FDC2                368                  BEQ     INPUT1            
00001250                           369                  
00001250                           370   
00001250                           371  FINISHSAVING
00001250  2642                     372                  MOVE.L  D2,A3
00001252  4282                     373                  CLR.L   D2
00001254  B5CB                     374                  CMP.L   A3, A2 ;A2 > A3, then an error should appear
00001256  6ECC                     375                  BGT     BADADDRESSORDER
00001258                           376  ;by this point we have A3 holding destinationa and A2 holding origin. all data registers should be cleared at this point. the following address registers
00001258                           377  ;are not clear: A1, A2 (src), A3 (dest), A7 (stack pointer), A5 && A4 (output stack), D5 && D4i(page counter), D1 && D3 && D6 address output, D2 original value,
00001258                           378  ;D1 (temp used),
00001258                           379  
00001258                           380  ;send assembly language to D2
00001258                           381  FEEDOPCODE                
00001258  49F9 000024CE            382                  LEA         tempresult, A4      ; load the address of variable "tempresult" into A1
0000125E  18FC 000A                383                  MOVE.B     #$A,(A4)+
00001262  4282                     384                  CLR.L       D2
00001264  341A                     385                  MOVE.W      (A2)+,D2                                
00001266                           386                  ;movem everything except D2, bcs u need it. 
00001266  5241                     387                  ADDI.W      #1,D1
00001268  48E7 5F7E                388                  MOVEM.L     D1/D3-D7/A1-A6,-(sp) 
0000126C  6000 00CA                389                  BRA         OPCODETIME
00001270                           390                  
00001270                           391  OUTPUTADDRESS               
00001270                           392                  ;now do the first half
00001270  2801                     393                  MOVE.L      D1,D4
00001272  220A                     394                  MOVE.L      A2,D1
00001274  5581                     395                  SUB.L       #$2,D1
00001276  C2BC 0000FFFF            396                  AND.L       #$0000FFFF,D1
0000127C  48E7 3F72                397                  MOVEM.L     D2-D7/A1-A3/A6,-(sp)   
00001280  7804                     398                  MOVE.L      #$4,D4 ;10
00001282  4EB9 000012AC            399                  JSR         HEXOUTPUT
00001288  4CDF 4EFC                400                  MOVEM.L    (sp)+,D2-D7/A1-A3/A6 ;I/O gets his stuff back
0000128C                           401                  
0000128C  4281                     402                  CLR.L       D1
0000128E  220A                     403                  MOVE.L      A2,D1
00001290  5581                     404                  SUB.L       #$2,D1
00001292  4241                     405                  CLR.W       D1
00001294  4841                     406                  SWAP        D1
00001296  48E7 3F72                407                  MOVEM.L     D2-D7/A1-A3/A6,-(sp)   
0000129A  7804                     408                  MOVE.L      #$4,D4 ;10
0000129C  4EB9 000012AC            409                  JSR         HEXOUTPUT
000012A2  4CDF 4EFC                410                  MOVEM.L    (sp)+,D2-D7/A1-A3/A6 ;I/O gets his stuff back
000012A6                           411  
000012A6  2204                     412                  MOVE.L      D4,D1
000012A8  4244                     413                  CLR.W       D4   
000012AA  4E75                     414                  RTS
000012AC                           415  
000012AC                           416                  
000012AC                           417  HEXOUTPUT      ;used D1(value being outpueed), D3 (D1 temp), D6 (char counter), A1(string buffer), A2 (string buffer), D4(0 size).
000012AC  4282                     418                  CLR.L   D2
000012AE  4283                     419                  CLR.L   D3
000012B0  4285                     420                  CLR.L   D5
000012B2  4286                     421                  CLR.L   D6
000012B4  4287                     422                  CLR.L   D7
000012B6  4286                     423                  CLR.L   D6                ; use D6 to count the total number of digits after conversion
000012B8                           424  
000012B8                           425                  
000012B8                           426                      
000012B8                           427  * your code should start here
000012B8                           428  
000012B8  B2BC 00000010            429  CHEAPLOOP       CMP.L      #16,D1
000012BE  6D00 0018                430                  BLT        DIRECTCONV
000012C2  83FC 0010                431                  DIVS.W     #16,D1           ;find remainder 17
000012C6  2601                     432                  MOVE.L     D1,D3            ;set up to isolate remainder
000012C8  E083                     433                  ASR.L      #8,D3            ;remainder isolated 
000012CA  E083                     434                  ASR.L      #8,D3            ;NOW
000012CC  E189                     435                  LSL.L      #8,D1
000012CE  E189                     436                  LSL.L      #8,D1
000012D0  E089                     437                  LSR.L      #8,D1
000012D2  E089                     438                  LSR.L      #8,D1            ;Clunkyway to clear left hand side
000012D4  6000 0012                439                  BRA        CONVERTIT                
000012D8                           440                     
000012D8  B27C 0000                441  DIRECTCONV      CMP        #0,D1            ;IF it is zero
000012DC  6700 0026                442                  BEQ        DONE             ;we are done
000012E0  1601                     443                  MOVE.B     D1,D3
000012E2  4241                     444                  CLR        D1
000012E4  6000 0002                445                  BRA        CONVERTIT
000012E8                           446    
000012E8  B67C 0009                447  CONVERTIT       CMP        #9,D3            ;If over 9
000012EC  6E00 000C                448                  BGT        SPECCASE         ;go to adding 55
000012F0  0603 0030                449                  ADD.B      #48,D3           ;otherwise add 48 for ascii 0-9
000012F4  5206                     450                  ADD.B      #1,D6            ;increment #of characters
000012F6  18C3                     451                  MOVE.B     D3,(A4)+         ;add ascii value
000012F8  60BE                     452                  BRA        CHEAPLOOP              
000012FA                           453  
000012FA  0603 0037                454  SPECCASE        ADD.B      #55,D3           ;for ascii A-G
000012FE  5206                     455                  ADD.B      #1,D6           ;increment #of characters
00001300  18C3                     456                  MOVE.B     D3,(A4)+        ;add ascii value
00001302  60B4                     457                  BRA        CHEAPLOOP
00001304                           458  DONE  
00001304  1A06                     459                  MOVE.B     D6,D5
00001306                           460  *                MOVE.W     #$8,D6
00001306  9A44                     461                  SUB.W      D4,D5
00001308  0C45 0000                462                  CMPI.W     #0,D5
0000130C  6700 000A                463                  BEQ        TOREVERSEIT
00001310  CBFC FFFF                464                  MULS.W     #-1,D5
00001314  CA7C 000F                465                  AND.W      #$000F,D5
00001318                           466                  
00001318                           467  *ZeroLoop           
00001318                           468  *                MOVE.B     #$0,(A5)+
00001318                           469  *                SUBI.W     #1,D5
00001318                           470  *                CMPI.B     #0,D5              
00001318                           471  *                BNE        ZeroLoop
00001318                           472  TOREVERSEIT  
00001318  0C44 0000                473                  CMPI.W      #0,D4           ;if its zero or less skip (D4 <= 0)
0000131C  6F00 0018                474                  BLE         SKIPZEROLOOP
00001320  0C05 0000                475                  CMPI.B      #0,D5 
00001324  6700 0010                476                  BEQ         SKIPZEROLOOP
00001328                           477                  
00001328  4281                     478  ZEROLOOP        CLR.L       D1
0000132A  18FC 0030                479                  MOVE.B     #$30,(A4)+
0000132E  5345                     480                  SUBI.W     #1,D5
00001330  0C05 0000                481                  CMPI.B     #0,D5 
00001334  66F2                     482                  BNE        ZEROLOOP    
00001336                           483                     
00001336                           484                  
00001336                           485  SKIPZEROLOOP
00001336  4E75                     486                  RTS             
00001338                           487   
00001338                           488  
00001338                           489  ;OPCODE, with output shoved in A5
00001338                           490  ******************************************************************************************************************
00001338                           491  
00001338  3602                     492  OPCODETIME      MOVE.W      D2,D3                 ;this wasnt here. had to add it other wise there will be nothing in D3
0000133A                           493                  *^unclear what this does, it just clears D3 - Rio
0000133A                           494                  
0000133A  0C42 4E71                495                  CMPI.W      #$4E71,D2        ;SPECIAL CASE FOR NOOP
0000133E  6700 0660                496                  BEQ         NOOPBRANCH
00001342  0C42 4E75                497                  CMPI.W      #$4E75,D2        ;SPECIAL CASE FOR RTS
00001346  6700 0682                498                  BEQ         RTSBRANCH
0000134A                           499                  
0000134A                           500                  ;then we use D3 to get the first four hex values
0000134A  E04B                     501                  LSR.W       #8,D3
0000134C  E84B                     502                  LSR.W       #4,D3       ;AAAA xxxx xxxx xxxx
0000134E                           503                  
0000134E                           504                  ;OPCODE GENERAL GROUP
0000134E  0C43 0004                505                  CMPI.W      #%0100,D3
00001352  6700 003E                506                  BEQ         OPCODEGROUP1
00001356  0C43 0006                507                  CMPI.W      #%0110,D3
0000135A  6700 0206                508                  BEQ         OPCODEGROUP2
0000135E  0C43 0008                509                  CMPI.W      #%1000,D3
00001362  6700 02F0                510                  BEQ         OPCODEGROUP3
00001366  0C43 0009                511                  CMPI.W      #%1001,D3
0000136A  6700 0336                512                  BEQ         OPCODEGROUP4
0000136E  0C43 000C                513                  CMPI.W      #%1100,D3
00001372  6700 039C                514                  BEQ         OPCODEGROUP5
00001376  0C43 000D                515                  CMPI.W      #%1101,D3
0000137A  6700 044E                516                  BEQ         OPCODEGROUP6
0000137E  0C43 000E                517                  CMPI.W      #%1110,D3
00001382  6700 04A8                518                  BEQ         OPCODEGROUP7
00001386  0C43 0003                519                  CMPI.W      #3,D3
0000138A  6F00 05C6                520                  BLE         OPCODEGROUP8
0000138E  6000 0664                521                  BRA         INVALIDBRANCH
00001392                           522                  
00001392  4EB9 00001A28            523  OPCODEGROUP1    JSR         NEXTFOURHEX
00001398  0C43 0008                524                  CMPI.W      #%1000,D3
0000139C  6700 0026                525                  BEQ         MOVEMBRANCH 
000013A0  0C43 000C                526                  CMPI.W      #%1100,D3
000013A4  6700 001E                527                  BEQ         MOVEMBRANCH 
000013A8  0C43 0006                528                  CMPI.W      #%0110,D3
000013AC  6700 0060                529                  BEQ         NOTBRANCH   
000013B0  0C43 000E                530                  CMPI.W      #%1110,D3
000013B4  6700 012E                531                  BEQ         JSRMBRANCH  ;got to double check for this branch. too much unncertainty
000013B8  0803 0000                532                  BTST.L      #0,D3 ;OOGABOOGA
000013BC  6600 0164                533                  BNE         LEABRANCH       ;z == 0 if bit is 1 AND got to double check for this branch. too much unncertainty
000013C0  6000 0632                534                  BRA         INVALIDBRANCH
000013C4                           535                  
000013C4  4283                     536  MOVEMBRANCH     CLR.L   D3
000013C6  4EB9 00001BE0            537                  JSR     EAGROUP7
000013CC  18FC 0020                538                  MOVE.B  #' ',(A4)+
000013D0  4EB9 00001492            539                  JSR     getSizeFormat2
000013D6  18C3                     540                  MOVE.B  D3,(A4)+
000013D8  18FC 002E                541                  MOVE.B  #'.',(A4)+
000013DC  18FC 004D                542                  MOVE.B  #'M',(A4)+
000013E0  18FC 0045                543                  MOVE.B  #'E',(A4)+
000013E4  18FC 0056                544                  MOVE.B  #'V',(A4)+
000013E8  18FC 004F                545                  MOVE.B  #'O',(A4)+
000013EC  18FC 004D                546                  MOVE.B  #'M',(A4)+
000013F0  18FC 0020                547                  MOVE.B  #' ',(A4)+
000013F4  18FC 0020                548                  MOVE.B  #' ',(A4)+
000013F8  18FC 0020                549                  MOVE.B  #' ',(A4)+
000013FC  18FC 0020                550                  MOVE.B  #' ',(A4)+
00001400  4EB8 1270                551                  JSR     OUTPUTADDRESS
00001404  4EB9 00001F5A            552                  JSR     EAOUTPUT 
0000140A  6000 0B90                553                  BRA     NEXTIO
0000140E                           554                                  
0000140E                           555  NOTBRANCH       ;check 7 and 8 and make sure they are  not 11 from 7 and 8
0000140E  4283                     556                  CLR.L   D3
00001410  3602                     557                  MOVE.W  D2,D3
00001412  ED4B                     558                  LSL     #6,D3
00001414  0C43 011B                559                  CMPI.W  #%0100011011,D3
00001418  6700 05DA                560                  BEQ     INVALIDBRANCH
0000141C  4283                     561                  CLR.L   D3 ;this is now going to hold size branch value
0000141E                           562                  ;should also check size bits
0000141E                           563  *                LEA     NOTMSG,A1
0000141E                           564  *                MOVE.B  #14,D0
0000141E                           565  *                TRAP    #15
0000141E  48E7 2000                566                  MOVEM.L D2,-(SP)
00001422  4EB9 00001BD6            567                  JSR     EAGROUP9
00001428  4CDF 0004                568                  MOVEM.L (SP)+,D2
0000142C                           569                  ;check if A4 is empty
0000142C                           570                  ;if so, then an invalid mustve occured. thus go directly to NEXTIO
0000142C  0C39 00FF 000024CE       571                  CMP.B   #$FF,(tempresult)
00001434  6700 0B66                572                  BEQ     NEXTIO
00001438  4EB9 0000146E            573                  JSR     getSizeFormat1
0000143E                           574                  ;compare size value here if needed
0000143E  18C3                     575                  MOVE.B  D3,(A4)+
00001440  18FC 002E                576                  MOVE.B  #'.',(A4)+
00001444  18FC 0054                577                  MOVE.B  #'T',(A4)+
00001448  18FC 004F                578                  MOVE.B  #'O',(A4)+
0000144C  18FC 004E                579                  MOVE.B  #'N',(A4)+
00001450  18FC 0020                580                  MOVE.B  #' ',(A4)+
00001454  18FC 0020                581                  MOVE.B  #' ',(A4)+
00001458  18FC 0020                582                  MOVE.B  #' ',(A4)+
0000145C  18FC 0020                583                  MOVE.B  #' ',(A4)+
00001460  4EB8 1270                584                  JSR     OUTPUTADDRESS
00001464                           585                  ;get size
00001464  4EB9 00001F5A            586                  JSR     EAOUTPUT
0000146A  6000 0B30                587                  BRA     NEXTIO
0000146E                           588                  
0000146E                           589  getSizeFormat1
0000146E  4283                     590                  CLR.L   D3  
00001470  2602                     591                  MOVE.L  D2,D3
00001472  EC8B                     592                  LSR.L   #6,D3
00001474  C6BC 00000003            593                  AND.L   #%0000000011,D3 ;saves last two digits
0000147A  B63C 0002                594                  CMP.B   #2,D3
0000147E  6700 0054                595                  BEQ     PRINTLONGSIZE
00001482  B63C 0001                596                  CMP.B   #1,D3
00001486  6700 0054                597                  BEQ     PRINTWORDSIZE
0000148A                           598  *                LEA     BYTESIZE,A1
0000148A                           599  *                MOVE.B  #14,D0
0000148A                           600  *                TRAP    #15
0000148A  4283                     601                  CLR.L    D3
0000148C  163C 0042                602                  MOVE.B   #'B',D3
00001490                           603                  ;MOVE.B  #'B',(A4)+
00001490  4E75                     604                  RTS
00001492                           605                  
00001492                           606  getSizeFormat2  ;MOVEM
00001492  4283                     607                  CLR.L   D3  
00001494  2602                     608                  MOVE.L  D2,D3
00001496  EC8B                     609                  LSR.L   #6,D3
00001498  C6BC 00000001            610                  AND.L   #%0000000001,D3 ;saves last two digits
0000149E  B63C 0000                611                  CMP.B   #0,D3
000014A2  6700 0038                612                  BEQ     PRINTWORDSIZE
000014A6                           613  *                LEA     BYTESIZE,A1
000014A6                           614  *                MOVE.B  #14,D0
000014A6                           615  *                TRAP    #15
000014A6  4283                     616                  CLR.L    D3
000014A8  163C 004C                617                  MOVE.B   #'L',D3
000014AC                           618                  ;MOVE.B  #'W',(A4)+
000014AC  4E75                     619                  RTS   
000014AE                           620  
000014AE                           621  getSizeFormat3  ;MOVE
000014AE  4283                     622                  CLR.L   D3  
000014B0  2602                     623                  MOVE.L  D2,D3
000014B2  E08B                     624                  LSR.L   #8,D3
000014B4  E88B                     625                  LSR.L   #4,D3
000014B6  C6BC 00000003            626                  AND.L   #%0011,D3 ;saves last two digits
000014BC  B63C 0002                627                  CMP.B   #2,D3
000014C0  6700 0012                628                  BEQ     PRINTLONGSIZE
000014C4  B63C 0003                629                  CMP.B   #3,D3
000014C8  6700 0012                630                  BEQ     PRINTWORDSIZE
000014CC                           631  *                LEA     BYTESIZE,A1
000014CC                           632  *                MOVE.B  #14,D0
000014CC                           633  *                TRAP    #15
000014CC  4283                     634                  CLR.L    D3
000014CE  163C 0042                635                  MOVE.B   #'B',D3
000014D2                           636                  ;MOVE.B  #'B',(A4)+
000014D2  4E75                     637                  RTS             
000014D4                           638      
000014D4                           639  PRINTLONGSIZE
000014D4                           640  *                LEA     WORDSIZE,A1
000014D4                           641  *                MOVE.B  #14,D0
000014D4                           642  *                TRAP    #15
000014D4  4283                     643                  CLR.L    D3
000014D6  163C 004C                644                  MOVE.B   #'L',D3
000014DA                           645                  ;MOVE.B  #'L',(A4)+
000014DA  4E75                     646                  RTS  
000014DC                           647  
000014DC                           648  PRINTWORDSIZE
000014DC                           649  *                LEA     LONGSIZE,A1
000014DC                           650  *                MOVE.B  #14,D0
000014DC                           651  *                TRAP    #15
000014DC  4283                     652                  CLR.L    D3
000014DE  163C 0057                653                  MOVE.B   #'W',D3
000014E2                           654                  ;MOVE.B  #'W',(A4)+
000014E2  4E75                     655                  RTS
000014E4                           656                  
000014E4                           657  JSRMBRANCH      ;check 7 and 8 and make sure they are  not 11 from 7 and 8
000014E4  4283                     658                  CLR.L   D3
000014E6  3602                     659                  MOVE.W  D2,D3
000014E8  ED4B                     660                  LSL     #6,D3
000014EA  0C43 013A                661                  CMPI.W  #%0100111010,D3
000014EE  6700 0504                662                  BEQ     INVALIDBRANCH
000014F2  4EB9 00001BD6            663                  JSR     EAGROUP9
000014F8  18FC 0052                664                  MOVE.B  #'R',(A4)+
000014FC  18FC 0053                665                  MOVE.B  #'S',(A4)+
00001500  18FC 004A                666                  MOVE.B  #'J',(A4)+
00001504  18FC 0020                667                  MOVE.B  #' ',(A4)+
00001508  18FC 0020                668                  MOVE.B  #' ',(A4)+
0000150C  18FC 0020                669                  MOVE.B  #' ',(A4)+
00001510  18FC 0020                670                  MOVE.B  #' ',(A4)+
00001514  4EB8 1270                671                  JSR     OUTPUTADDRESS
00001518  4EB9 00001F5A            672                  JSR     EAOUTPUT 
0000151E  6000 0A7C                673                  BRA     NEXTIO
00001522                           674  
00001522                           675  LEABRANCH      ;check 7 and make sure its set to 1
00001522  0802 0007                676                  BTST.L  #7,D2
00001526  6700 04CC                677                  BEQ     INVALIDBRANCH   ;z == 1 if bit is 0
0000152A  4EB9 00001D26            678                  JSR     EAGROUP4LEA
00001530  18FC 0020                679                  MOVE.B  #' ',(A4)+
00001534  18FC 0020                680                  MOVE.B  #' ',(A4)+
00001538  18FC 0041                681                  MOVE.B  #'A',(A4)+
0000153C  18FC 0045                682                  MOVE.B  #'E',(A4)+
00001540  18FC 004C                683                  MOVE.B  #'L',(A4)+
00001544  18FC 0020                684                  MOVE.B  #' ',(A4)+
00001548  18FC 0020                685                  MOVE.B  #' ',(A4)+
0000154C  18FC 0020                686                  MOVE.B  #' ',(A4)+
00001550  18FC 0020                687                  MOVE.B  #' ',(A4)+
00001554  4EB8 1270                688                  JSR     OUTPUTADDRESS
00001558  4EB9 00001F5A            689                  JSR     EAOUTPUT 
0000155E  6000 0A3C                690                  BRA     NEXTIO
00001562                           691                  
00001562  4EB9 00001A28            692  OPCODEGROUP2    JSR         NEXTFOURHEX  
00001568  0C43 0000                693                  CMPI.W      #%0000,D3
0000156C  6700 001E                694                  BEQ         BRABRANCH   
00001570  0C43 0007                695                  CMPI.W      #%0111,D3
00001574  6700 004E                696                  BEQ         BEQBRANCH   
00001578  0C43 000E                697                  CMPI.W      #%1110,D3
0000157C  6700 0076                698                  BEQ         BGTBRANCH
00001580  0C43 000F                699                  CMPI.W      #%1111,D3
00001584  6700 009E                700                  BEQ         BLEBRANCH
00001588  6000 046A                701                  BRA         INVALIDBRANCH
0000158C                           702                  
0000158C                           703  BRABRANCH      ;check 9 and make sure its set to 0
0000158C  0802 0009                704                  BTST.L  #9,D2
00001590  6600 0462                705                  BNE     INVALIDBRANCH   ;z == 0 if bit is 1
00001594                           706  *                LEA     BRAMSG,A1
00001594                           707  *                MOVE.B  #14,D0
00001594                           708  *                TRAP    #15
00001594  4EB9 00001AF2            709                  JSR     EAGROUP5
0000159A  18FC 0041                710                  MOVE.B  #'A',(A4)+
0000159E  18FC 0052                711                  MOVE.B  #'R',(A4)+
000015A2  18FC 0042                712                  MOVE.B  #'B',(A4)+
000015A6  18FC 0020                713                  MOVE.B  #' ',(A4)+
000015AA  18FC 0020                714                  MOVE.B  #' ',(A4)+
000015AE  18FC 0020                715                  MOVE.B  #' ',(A4)+
000015B2  18FC 0020                716                  MOVE.B  #' ',(A4)+
000015B6  4EB8 1270                717                  JSR     OUTPUTADDRESS
000015BA  4EB9 00001F5A            718                  JSR     EAOUTPUT
000015C0  6000 09DA                719                  BRA     NEXTIO
000015C4                           720                  
000015C4                           721  BEQBRANCH
000015C4                           722  *                LEA     BEQMSG,A1
000015C4                           723  *                MOVE.B  #14,D0
000015C4                           724  *                TRAP    #15
000015C4  4EB9 00001AF2            725                  JSR     EAGROUP5
000015CA  18FC 0051                726                  MOVE.B  #'Q',(A4)+
000015CE  18FC 0045                727                  MOVE.B  #'E',(A4)+
000015D2  18FC 0042                728                  MOVE.B  #'B',(A4)+
000015D6  18FC 0020                729                  MOVE.B  #' ',(A4)+
000015DA  18FC 0020                730                  MOVE.B  #' ',(A4)+
000015DE  18FC 0020                731                  MOVE.B  #' ',(A4)+
000015E2  18FC 0020                732                  MOVE.B  #' ',(A4)+
000015E6  4EB8 1270                733                  JSR     OUTPUTADDRESS
000015EA  4EB9 00001F5A            734                  JSR     EAOUTPUT
000015F0  6000 09AA                735                  BRA     NEXTIO
000015F4                           736                  
000015F4                           737  BGTBRANCH
000015F4                           738  *                LEA     BGTMSG,A1
000015F4                           739  *                MOVE.B  #14,D0
000015F4                           740  *                TRAP    #15
000015F4  4EB9 00001AF2            741                  JSR     EAGROUP5
000015FA  18FC 0054                742                  MOVE.B  #'T',(A4)+
000015FE  18FC 0047                743                  MOVE.B  #'G',(A4)+
00001602  18FC 0042                744                  MOVE.B  #'B',(A4)+
00001606  18FC 0020                745                  MOVE.B  #' ',(A4)+
0000160A  18FC 0020                746                  MOVE.B  #' ',(A4)+
0000160E  18FC 0020                747                  MOVE.B  #' ',(A4)+
00001612  18FC 0020                748                  MOVE.B  #' ',(A4)+
00001616  4EB8 1270                749                  JSR     OUTPUTADDRESS
0000161A  4EB9 00001F5A            750                  JSR     EAOUTPUT
00001620  6000 097A                751                  BRA     NEXTIO
00001624                           752  BLEBRANCH
00001624                           753  *                LEA     BLEMSG,A1
00001624                           754  *                MOVE.B  #14,D0
00001624                           755  *                TRAP    #15
00001624  4EB9 00001AF2            756                  JSR     EAGROUP5
0000162A  18FC 0045                757                  MOVE.B  #'E',(A4)+
0000162E  18FC 004C                758                  MOVE.B  #'L',(A4)+
00001632  18FC 0042                759                  MOVE.B  #'B',(A4)+
00001636  18FC 0020                760                  MOVE.B  #' ',(A4)+
0000163A  18FC 0020                761                  MOVE.B  #' ',(A4)+
0000163E  18FC 0020                762                  MOVE.B  #' ',(A4)+
00001642  18FC 0020                763                  MOVE.B  #' ',(A4)+
00001646  4EB8 1270                764                  JSR     OUTPUTADDRESS
0000164A  4EB9 00001F5A            765                  JSR     EAOUTPUT
00001650  6000 094A                766                  BRA     NEXTIO
00001654                           767                  
00001654                           768  OPCODEGROUP3    
00001654  4283                     769                  CLR.L   D3
00001656  3602                     770                  MOVE.W  D2,D3
00001658  EC4B                     771                  LSR.W   #6,D3
0000165A  C67C 0007                772                  AND.W   #%0000000111,D3
0000165E  0C43 0007                773                  CMPI.W  #7,D3
00001662  6700 0390                774                  BEQ     INVALIDBRANCH
00001666  4EB9 00001D12            775                  JSR     EAGROUP4ALL
0000166C  18FC 0020                776                  MOVE.B  #' ',(A4)+
00001670  18FC 0020                777                  MOVE.B  #' ',(A4)+
00001674  18FC 0055                778                  MOVE.B  #'U',(A4)+
00001678  18FC 0056                779                  MOVE.B  #'V',(A4)+
0000167C  18FC 0049                780                  MOVE.B  #'I',(A4)+
00001680  18FC 0044                781                  MOVE.B  #'D',(A4)+
00001684  18FC 0020                782                  MOVE.B  #' ',(A4)+
00001688  18FC 0020                783                  MOVE.B  #' ',(A4)+
0000168C  18FC 0020                784                  MOVE.B  #' ',(A4)+
00001690  18FC 0020                785                  MOVE.B  #' ',(A4)+
00001694  4EB8 1270                786                  JSR     OUTPUTADDRESS
00001698  4EB9 00001F5A            787                  JSR     EAOUTPUT 
0000169E                           788                  
0000169E  6000 08FC                789                  BRA     NEXTIO
000016A2                           790                  
000016A2                           791  OPCODEGROUP4    ;check 7 to 8 (size) cannot be 11 AND if direction is 1 (8th bit), then 4th and 5th bit cannot be 0
000016A2  4283                     792                  CLR.L   D3
000016A4  0802 0006                793                  BTST    #6,D2 ;if set to 1, not sub
000016A8  6600 000E                794                  BNE     TESTSUBBRANCH   ;z == 0 if bit is 1
000016AC  0802 0008                795                  BTST    #8,D2
000016B0  6600 0006                796                  BNE     TESTSUBBRANCH   
000016B4  6000 000E                797                  BRA     TESTSUBBRANCH2  
000016B8                           798     
000016B8                           799  TESTSUBBRANCH
000016B8  0802 0007                800                  BTST    #7,D2 ;if set to 1, not sub
000016BC  6600 0336                801                  BNE     INVALIDBRANCH   ;z == 0 if bit is 1
000016C0  6000 0002                802                  BRA     TESTSUBBRANCH2  
000016C4                           803  
000016C4                           804               
000016C4                           805  TESTSUBBRANCH2  ;check if 5th and 4th bit is equal to zero. if so, it is invalid
000016C4  0802 0005                806                  BTST    #5,D2 ;if set to 1, not sub
000016C8  6600 0006                807                  BNE     SUBBRANCH3 ;z == 0 if bit is 1
000016CC  6000 000E                808                  BRA     SUBBRANCH
000016D0                           809                  
000016D0                           810  SUBBRANCH3 
000016D0  0802 0004                811                  BTST    #4,D2 ;if set to 1, not sub
000016D4  6700 031E                812                  BEQ     INVALIDBRANCH   ;z == 1 if bit is 0 
000016D8  6000 0002                813                  BRA     SUBBRANCH
000016DC                           814  
000016DC  4EB8 146E                815  SUBBRANCH       JSR     getSizeFormat1
000016E0  18C3                     816                  MOVE.B  D3,(A4)+
000016E2  18FC 002E                817                  MOVE.B  #'.',(A4)+
000016E6  18FC 0042                818                  MOVE.B  #'B',(A4)+
000016EA  18FC 0055                819                  MOVE.B  #'U',(A4)+
000016EE  18FC 0053                820                  MOVE.B  #'S',(A4)+
000016F2  18FC 0020                821                  MOVE.B  #' ',(A4)+
000016F6  18FC 0020                822                  MOVE.B  #' ',(A4)+
000016FA  18FC 0020                823                  MOVE.B  #' ',(A4)+
000016FE  18FC 0020                824                  MOVE.B  #' ',(A4)+
00001702  4EB8 1270                825                  JSR     OUTPUTADDRESS
00001706  4EB9 00001F5A            826                  JSR     EAOUTPUT 
0000170C  6000 088E                827                  BRA     NEXTIO
00001710                           828  
00001710  4EB9 00001A28            829  OPCODEGROUP5    JSR     NEXTFOURHEX
00001716                           830                  ;JSR     NEXTNEXTFOURHEX 
00001716                           831                  
00001716  4283                     832                  CLR.L   D3  
00001718  3602                     833                  MOVE.W  D2,D3  
0000171A  C67C 01FF                834                  AND.W   #%0000000111111111,D3  
0000171E  EC4B                     835                  LSR.W   #6,D3  
00001720                           836                  
00001720  0C43 0007                837                  CMPI.W  #7,D3          
00001724  6700 0006                838                  BEQ     MULSTEST      ;got to double check for this branch. too much unncertainty. MAKE SURE ITS NOT ABCD AND EXG.6,7,8 must be 111
00001728  6000 005A                839                  BRA     ANDBRANCH       ;MUST CHECK (S cannot be 11) AND IF(D is one, must be Dn. MAKE SURE ITS NOT MULU
0000172C                           840  
0000172C                           841  MULSTEST      
0000172C  4283                     842                  CLR.L   D3
0000172E  3602                     843                  MOVE.W  D2,D3
00001730  EC4B                     844                  LSR.W   #6,D3
00001732                           845  MULSLOOP
00001732  0C04 0003                846                  CMPI.B  #3,D4
00001736  6700 0010                847                  BEQ     MULSBRANCH
0000173A  E34B                     848                  LSL     #1,D3
0000173C  0803 0000                849                  BTST    #0,D3
00001740  6600 02B2                850                  BNE     INVALIDBRANCH   ;z == 1 if bit is 0. if bit is 0, then it cnnot be MULS. 
00001744  5244                     851                  ADDI    #1,D4
00001746  60EA                     852                  BRA     MULSLOOP
00001748                           853                  
00001748  4EB9 00001D12            854  MULSBRANCH      JSR     EAGROUP4ALL
0000174E  18FC 0020                855                  MOVE.B  #' ',(A4)+
00001752  18FC 0020                856                  MOVE.B  #' ',(A4)+
00001756  18FC 0053                857                  MOVE.B  #'S',(A4)+
0000175A  18FC 004C                858                  MOVE.B  #'L',(A4)+
0000175E  18FC 0055                859                  MOVE.B  #'U',(A4)+
00001762  18FC 004D                860                  MOVE.B  #'M',(A4)+
00001766  18FC 0020                861                  MOVE.B  #' ',(A4)+
0000176A  18FC 0020                862                  MOVE.B  #' ',(A4)+
0000176E  18FC 0020                863                  MOVE.B  #' ',(A4)+
00001772  18FC 0020                864                  MOVE.B  #' ',(A4)+
00001776  4EB8 1270                865                  JSR     OUTPUTADDRESS
0000177A  4EB9 00001F5A            866                  JSR     EAOUTPUT 
00001780  6000 081A                867                  BRA     NEXTIO
00001784                           868  
00001784                           869  ANDBRANCH                 
00001784                           870                  ;8,7,6 cannot be 011
00001784  4283                     871                  CLR.L   D3
00001786  3602                     872                  MOVE.W  D2,D3
00001788  EC4B                     873                  LSR.W   #6,D3
0000178A  C67C 0111                874                  AND.W   #$0000000111,D3
0000178E  B67C 0007                875                  CMP.W   #%111,D3
00001792  6700 0260                876                  BEQ     INVALIDBRANCH
00001796  4EB8 146E                877                  JSR     getSizeFormat1
0000179A  18C3                     878                  MOVE.B  D3,(A4)+
0000179C  18FC 002E                879                  MOVE.B  #'.',(A4)+
000017A0  18FC 0044                880                  MOVE.B  #'D',(A4)+
000017A4  18FC 004E                881                  MOVE.B  #'N',(A4)+
000017A8  18FC 0041                882                  MOVE.B  #'A',(A4)+
000017AC  18FC 0020                883                  MOVE.B  #' ',(A4)+
000017B0  18FC 0020                884                  MOVE.B  #' ',(A4)+
000017B4  18FC 0020                885                  MOVE.B  #' ',(A4)+
000017B8  18FC 0020                886                  MOVE.B  #' ',(A4)+
000017BC  4EB8 1270                887                  JSR     OUTPUTADDRESS
000017C0  4EB9 00001F5A            888                  JSR     EAOUTPUT 
000017C6  6000 07D4                889                  BRA     NEXTIO 
000017CA                           890                  
000017CA                           891  
000017CA                           892  OPCODEGROUP6    ;first check size
000017CA  4243                     893                  CLR.W   D3
000017CC  3602                     894                  MOVE.W  D2,D3
000017CE  EC4B                     895                  LSR.W   #6,D3
000017D0  C67C 0003                896                  AND.W   #%0000000011,D3
000017D4  B67C 0003                897                  CMP.W   #3,D3
000017D8  6700 021A                898                  BEQ     INVALIDBRANCH
000017DC  4243                     899                  CLR.W   D3
000017DE  3602                     900                  MOVE.W  D2,D3                ;then check direction. if 1, check 4th and 5th bit. if they are both 0, its invalid
000017E0  0803 0008                901                  BTST    #8,D3
000017E4                           902                  
000017E4                           903  PRINTADD
000017E4  6700 0036                904                  BEQ     TESTADD   ;z == 0 if bit is 1. if bit is 1, then may be invalid    
000017E8  4EB8 146E                905                  JSR     getSizeFormat1 
000017EC  18C3                     906                  MOVE.B  D3,(A4)+           
000017EE  18FC 002E                907                  MOVE.B  #'.',(A4)+
000017F2  18FC 0044                908                  MOVE.B  #'D',(A4)+
000017F6  18FC 0044                909                  MOVE.B  #'D',(A4)+
000017FA  18FC 0041                910                  MOVE.B  #'A',(A4)+
000017FE  18FC 0020                911                  MOVE.B  #' ',(A4)+
00001802  18FC 0020                912                  MOVE.B  #' ',(A4)+
00001806  18FC 0020                913                  MOVE.B  #' ',(A4)+
0000180A  18FC 0020                914                  MOVE.B  #' ',(A4)+
0000180E  4EB8 1270                915                  JSR     OUTPUTADDRESS
00001812  4EB9 00001F5A            916                  JSR     EAOUTPUT 
00001818  6000 0782                917                  BRA     NEXTIO
0000181C                           918                  
0000181C  E94B                     919  TESTADD         LSL.W   #4,D3
0000181E  C67C 0030                920                  AND.W   #%00000000000110000,D3
00001822  B67C 0000                921                  CMP.W   #0,D3
00001826  6700 01CC                922                  BEQ     INVALIDBRANCH
0000182A  60B8                     923                  BRA     PRINTADD
0000182C                           924                  
0000182C                           925  
0000182C                           926  
0000182C  4EB9 00001A34            927  OPCODEGROUP7    JSR     NEXTNEXTFOURHEX 
00001832                           928                  ;by this point we cleared D3 and have have the next four hex value in D3 
00001832  E483                     929                  ASR.L   #2,D3
00001834  0C43 0003                930                  CMPI.W  #3,D3
00001838  6700 0016                931                  BEQ     ASLMEMBRANCH
0000183C                           932                  
0000183C  4283                     933                  CLR.L   D3
0000183E  3602                     934                  MOVE.W  D2,D3
00001840  0803 0003                935                  BTST    #3,D3
00001844  6700 007C                936                  BEQ     ASLREGBRANCH            ;z == 1 if bit is 0
00001848  6600 00C0                937                  BNE     LSLREGBRANCH            ;z == 0 if bit is 1 
0000184C  6000 01A6                938                  BRA     INVALIDBRANCH
00001850                           939                  
00001850                           940  ASLMEMBRANCH
00001850  4283                     941                  CLR.L   D3
00001852  4EB9 00001A28            942                  JSR     NEXTFOURHEX
00001858  E283                     943                  ASR.L   #1,D3
0000185A  0C43 0000                944                  CMPI.W  #0,D3
0000185E  6600 0032                945                  BNE     LSLMEMBRANCH
00001862                           946                  
00001862  4EB9 00001BD6            947                  JSR     EAGROUP9
00001868  18FC 004C                948                  MOVE.B  #'L',(A4)+
0000186C  18FC 0053                949                  MOVE.B  #'S',(A4)+
00001870  18FC 0041                950                  MOVE.B  #'A',(A4)+
00001874  18FC 0020                951                  MOVE.B  #' ',(A4)+
00001878  18FC 0020                952                  MOVE.B  #' ',(A4)+
0000187C  18FC 0020                953                  MOVE.B  #' ',(A4)+
00001880  18FC 0020                954                  MOVE.B  #' ',(A4)+
00001884  4EB8 1270                955                  JSR     OUTPUTADDRESS
00001888  4EB9 00001F5A            956                  JSR     EAOUTPUT 
0000188E  6000 070C                957                  BRA     NEXTIO                
00001892                           958  
00001892                           959  LSLMEMBRANCH
00001892  4EB9 00001BD6            960                  JSR     EAGROUP9
00001898  18FC 004C                961                  MOVE.B  #'L',(A4)+
0000189C  18FC 0053                962                  MOVE.B  #'S',(A4)+
000018A0  18FC 004C                963                  MOVE.B  #'L',(A4)+
000018A4  18FC 0020                964                  MOVE.B  #' ',(A4)+
000018A8  18FC 0020                965                  MOVE.B  #' ',(A4)+
000018AC  18FC 0020                966                  MOVE.B  #' ',(A4)+
000018B0  18FC 0020                967                  MOVE.B  #' ',(A4)+
000018B4  4EB8 1270                968                  JSR     OUTPUTADDRESS
000018B8  4EB9 00001F5A            969                  JSR     EAOUTPUT 
000018BE  6000 06DC                970                  BRA     NEXTIO 
000018C2                           971  
000018C2                           972  ASLREGBRANCH    ;have to check size
000018C2  ED4B                     973                  LSL.W   #6,D3
000018C4  C67C 0011                974                  AND.W   #$0000000011,D3
000018C8  0C43 0003                975                  CMPI.W  #3,D3
000018CC  6700 0126                976                  BEQ     INVALIDBRANCH
000018D0  4EB9 00001A6C            977                  JSR     EAGROUP2
000018D6  4EB8 146E                978                  JSR     getSizeFormat1
000018DA  18C3                     979                  MOVE.B  D3,(A4)+
000018DC  18FC 002E                980                  MOVE.B  #'.',(A4)+
000018E0  18FC 004C                981                  MOVE.B  #'L',(A4)+
000018E4  18FC 0053                982                  MOVE.B  #'S',(A4)+
000018E8  18FC 0041                983                  MOVE.B  #'A',(A4)+
000018EC  18FC 0020                984                  MOVE.B  #' ',(A4)+
000018F0  18FC 0020                985                  MOVE.B  #' ',(A4)+
000018F4  18FC 0020                986                  MOVE.B  #' ',(A4)+
000018F8  18FC 0020                987                  MOVE.B  #' ',(A4)+
000018FC  4EB8 1270                988                  JSR     OUTPUTADDRESS
00001900  4EB9 00001F5A            989                  JSR     EAOUTPUT 
00001906  6000 0694                990                  BRA     NEXTIO 
0000190A                           991  
0000190A                           992  LSLREGBRANCH    ;have to check size
0000190A  ED4B                     993                  LSL.W   #6,D3
0000190C  C67C 0011                994                  AND.W   #$0000000011,D3
00001910  0C43 0003                995                  CMPI.W  #3,D3
00001914  6700 00DE                996                  BEQ     INVALIDBRANCH
00001918  4EB9 00001A6C            997                  JSR     EAGROUP2
0000191E  4EB8 146E                998                  JSR     getSizeFormat1
00001922  18C3                     999                  MOVE.B  D3,(A4)+
00001924  18FC 002E               1000                  MOVE.B  #'.',(A4)+
00001928  18FC 004C               1001                  MOVE.B  #'L',(A4)+
0000192C  18FC 0053               1002                  MOVE.B  #'S',(A4)+
00001930  18FC 004C               1003                  MOVE.B  #'L',(A4)+
00001934  18FC 0020               1004                  MOVE.B  #' ',(A4)+
00001938  18FC 0020               1005                  MOVE.B  #' ',(A4)+
0000193C  18FC 0020               1006                  MOVE.B  #' ',(A4)+
00001940  18FC 0020               1007                  MOVE.B  #' ',(A4)+
00001944  4EB8 1270               1008                  JSR     OUTPUTADDRESS
00001948  4EB9 00001F5A           1009                  JSR     EAOUTPUT 
0000194E  6000 064C               1010                  BRA     NEXTIO      
00001952                          1011  
00001952                          1012  OPCODEGROUP8    ;check dest mode does not equal to 001
00001952  4283                    1013                  CLR.L   D3
00001954  3602                    1014                  MOVE.W  D2,D3
00001956  EC4B                    1015                  LSR.W   #6,D3
00001958  C67C 000F               1016                  AND.W   #$00F,D3
0000195C  C63C 0007               1017                  AND.B   #%0111,D3
00001960  B67C 0001               1018                  CMP.W   #%001,D3
00001964  6700 008E               1019                  BEQ     INVALIDBRANCH
00001968  4EB8 14AE               1020                  JSR     getSizeFormat3
0000196C  18C3                    1021                  MOVE.B  D3,(A4)+
0000196E  18FC 002E               1022                  MOVE.B  #'.',(A4)+
00001972  18FC 0045               1023                  MOVE.B  #'E',(A4)+
00001976  18FC 0056               1024                  MOVE.B  #'V',(A4)+
0000197A  18FC 004F               1025                  MOVE.B  #'O',(A4)+
0000197E  18FC 004D               1026                  MOVE.B  #'M',(A4)+
00001982  18FC 0020               1027                  MOVE.B  #' ',(A4)+
00001986  18FC 0020               1028                  MOVE.B  #' ',(A4)+                
0000198A  18FC 0020               1029                  MOVE.B  #' ',(A4)+
0000198E  18FC 0020               1030                  MOVE.B  #' ',(A4)+ 
00001992  4EB8 1270               1031                  JSR     OUTPUTADDRESS
00001996  4EB9 00001F5A           1032                  JSR     EAOUTPUT 
0000199C  6000 05FE               1033                  BRA     NEXTIO                
000019A0                          1034  
000019A0                          1035  NOOPBRANCH
000019A0  18FC 0050               1036                  MOVE.B  #'P',(A4)+
000019A4  18FC 004F               1037                  MOVE.B  #'O',(A4)+
000019A8  18FC 004E               1038                  MOVE.B  #'N',(A4)+
000019AC  18FC 0020               1039                  MOVE.B  #' ',(A4)+ 
000019B0  18FC 0020               1040                  MOVE.B  #' ',(A4)+
000019B4  18FC 0020               1041                  MOVE.B  #' ',(A4)+
000019B8  18FC 0020               1042                  MOVE.B  #' ',(A4)+
000019BC  4EB8 1270               1043                  JSR     OUTPUTADDRESS
000019C0  4EB9 00001F5A           1044                  JSR     EAOUTPUT                
000019C6  6000 05D4               1045                  BRA     NEXTIO
000019CA                          1046  
000019CA                          1047  RTSBRANCH
000019CA  18FC 0053               1048                  MOVE.B  #'S',(A4)+
000019CE  18FC 0054               1049                  MOVE.B  #'T',(A4)+
000019D2  18FC 0052               1050                  MOVE.B  #'R',(A4)+
000019D6  18FC 0020               1051                  MOVE.B  #' ',(A4)+ 
000019DA  18FC 0020               1052                  MOVE.B  #' ',(A4)+
000019DE  18FC 0020               1053                  MOVE.B  #' ',(A4)+
000019E2  18FC 0020               1054                  MOVE.B  #' ',(A4)+
000019E6  4EB8 1270               1055                  JSR     OUTPUTADDRESS
000019EA  4EB9 00001F5A           1056                  JSR     EAOUTPUT                
000019F0  6000 05AA               1057                  BRA     NEXTIO
000019F4                          1058                  
000019F4                          1059  INVALIDBRANCH   *LEA     INVALIDMSG,A1
000019F4                          1060  *                MOVE.B  #14,D0
000019F4                          1061  *                TRAP    #15
000019F4  4EB9 00001A40           1062                  JSR     EAGROUPINVALID
000019FA  18FC 0041               1063                  MOVE.B  #'A',(A4)+
000019FE  18FC 0054               1064                  MOVE.B  #'T',(A4)+
00001A02  18FC 0041               1065                  MOVE.B  #'A',(A4)+
00001A06  18FC 0044               1066                  MOVE.B  #'D',(A4)+
00001A0A  18FC 0020               1067                  MOVE.B  #' ',(A4)+
00001A0E  18FC 0020               1068                  MOVE.B  #' ',(A4)+
00001A12  18FC 0020               1069                  MOVE.B  #' ',(A4)+
00001A16  18FC 0020               1070                  MOVE.B  #' ',(A4)+
00001A1A  4EB8 1270               1071                  JSR     OUTPUTADDRESS
00001A1E  4EB9 00001F5A           1072                  JSR     EAOUTPUT
00001A24  6000 0576               1073                  BRA     NEXTIO
00001A28                          1074                  
00001A28  4283                    1075  NEXTFOURHEX     CLR.L   D3
00001A2A  3602                    1076                  MOVE.W  D2,D3
00001A2C  E04B                    1077                  LSR.W   #8,D3
00001A2E  C67C 000F               1078                  AND.W   #%00001111,D3 ;0000 AAAA [XXXX XXXX]
00001A32  4E75                    1079                  RTS    
00001A34                          1080  
00001A34  4283                    1081  NEXTNEXTFOURHEX CLR.L   D3  
00001A36  3602                    1082                  MOVE.W  D2,D3  
00001A38  C67C 00F0               1083                  AND.W   #$00F0,D3  
00001A3C  E84B                    1084                  LSR.W   #4,D3   ;0000 0000 AAAA [XXXX]
00001A3E  4E75                    1085                  RTS      
00001A40                          1086  
00001A40                          1087  ;EA                
00001A40                          1088  ******************************************************************************************************************
00001A40                          1089  EAGROUPINVALID
00001A40                          1090  *                MOVE.B      #$23,D1
00001A40                          1091  *                MOVE.L      #6,D0
00001A40                          1092  *                TRAP        #15
00001A40                          1093  *                MOVE.B      #$24,D1
00001A40                          1094  *                MOVE.L      #6,D0
00001A40                          1095  *                TRAP        #15
00001A40  2202                    1096                  MOVE.L      D2,D1
00001A42  78FF                    1097                  MOVE.L      #-1,D4
00001A44  48E7 3F72               1098                  MOVEM.L     D2-D7/A1-A3/A6,-(sp)   
00001A48  7804                    1099                  MOVE.L      #$4,D4
00001A4A  4EB8 12AC               1100                  JSR         HEXOUTPUT
00001A4E  4CDF 4EFC               1101                  MOVEM.L  (sp)+,D2-D7/A1-A3/A6
00001A52  18FC 0024               1102                  MOVE.B      #'$',(A4)+
00001A56  18FC 0023               1103                  MOVE.B      #'#',(A4)+
00001A5A  18FC 0020               1104                  MOVE.B      #' ',(A4)+
00001A5E  18FC 0020               1105                  MOVE.B      #' ',(A4)+
00001A62  18FC 0020               1106                  MOVE.B      #' ',(A4)+
00001A66  18FC 0020               1107                  MOVE.B      #' ',(A4)+
00001A6A  4E75                    1108                  RTS
00001A6C                          1109                  
00001A6C                          1110  
00001A6C                          1111  
00001A6C                          1112  EAGROUP2
00001A6C  3602                    1113                  MOVE.W     D2,D3
00001A6E  EA83                    1114                  ASR.L      #5,D3 ;shifting bits to get to I/R bit
00001A70  C6BC 00000001           1115                  AND.L      #%00000000001,D3
00001A76  0C43 0001               1116                  CMPI.W     #1,D3
00001A7A  6600 003C               1117                  BNE        INTDATABRANCH
00001A7E                          1118                  
00001A7E  3602                    1119                  MOVE.W     D2,D3
00001A80  C6BC 00000007           1120                  AND.L      #%0000000000000111,D3
00001A86  0603 0030               1121                  ADDI.B     #$30,D3
00001A8A  18C3                    1122                  MOVE.B     D3,(A4)+
00001A8C  18FC 0044               1123                  MOVE.B     #'D',(A4)+
00001A90  18FC 002C               1124                  MOVE.B     #',',(A4)+
00001A94                          1125  
00001A94  3602                    1126                  MOVE.W     D2,D3
00001A96  E083                    1127                   ASR.L     #8,D3
00001A98  E283                    1128                  ASR.L      #1,D3
00001A9A  C6BC 00000007           1129                  AND.L      #%0000111,D3
00001AA0  0603 0030               1130                  ADDI.B     #$30,D3
00001AA4  18C3                    1131                  MOVE.B     D3,(A4)+
00001AA6  18FC 0044               1132                  MOVE.B     #'D',(A4)+
00001AAA  18FC 0020               1133                  MOVE.B     #' ',(A4)+
00001AAE  18FC 0020               1134                  MOVE.B     #' ',(A4)+
00001AB2  18FC 0020               1135                  MOVE.B     #' ',(A4)+
00001AB6  4E75                    1136                  RTS
00001AB8                          1137  
00001AB8                          1138                  
00001AB8  3602                    1139  INTDATABRANCH   MOVE.W     D2,D3
00001ABA  C6BC 00000007           1140                  AND.L      #%0000000000000111,D3
00001AC0  0603 0030               1141                  ADDI.B     #$30,D3
00001AC4  18C3                    1142                  MOVE.B     D3,(A4)+
00001AC6  18FC 0044               1143                  MOVE.B     #'D',(A4)+
00001ACA  18FC 002C               1144                  MOVE.B     #',',(A4)+
00001ACE                          1145  
00001ACE  3602                    1146                  MOVE.W     D2,D3
00001AD0  E083                    1147                  ASR.L     #8,D3
00001AD2  E283                    1148                  ASR.L      #1,D3
00001AD4  C6BC 00000007           1149                  AND.L      #%0000111,D3
00001ADA  0603 0030               1150                  ADDI.B     #$30,D3
00001ADE  18C3                    1151                  MOVE.B     D3,(A4)+
00001AE0  18FC 0023               1152                  MOVE.B     #'#',(A4)+
00001AE4  18FC 0020               1153                  MOVE.B     #' ',(A4)+
00001AE8  18FC 0020               1154                  MOVE.B     #' ',(A4)+
00001AEC  18FC 0020               1155                  MOVE.B     #' ',(A4)+
00001AF0                          1156  
00001AF0  4E75                    1157                  RTS
00001AF2                          1158  
00001AF2                          1159                  
00001AF2                          1160                   
00001AF2                          1161  
00001AF2                          1162  EAGROUP5
00001AF2                          1163  ;d1 stores address and d2 holds displacement value. 
00001AF2                          1164                      
00001AF2                          1165  ;6000
00001AF2  B47C 6000               1166                      CMP.W       #$6000,D2 
00001AF6  6700 00A4               1167                      BEQ         EAGROUP5_SIZEW  
00001AFA  B47C 6E00               1168                      CMP.W       #$6E00,D2 
00001AFE  6700 009C               1169                      BEQ         EAGROUP5_SIZEW 
00001B02  B47C 6F00               1170                      CMP.W       #$6F00,D2 
00001B06  6700 0094               1171                      BEQ         EAGROUP5_SIZEW  
00001B0A  B47C 6700               1172                      CMP.W       #$6700,D2 
00001B0E  6700 008C               1173                      BEQ         EAGROUP5_SIZEW   
00001B12                          1174                      
00001B12                          1175                      ;byte size instruction
00001B12  220A                    1176                      MOVE.L  A2,D1
00001B14                          1177  *                    SUBI.L  #2,D1
00001B14  C47C 00FF               1178                      AND.W   #$00FF,D2
00001B18  0802 0007               1179                      BTST    #$7,D2
00001B1C  6700 0032               1180                      BEQ     EAGROUP5_ADD      ;z == 0 if bit is 1 AND got to double check for this branch. too much unncertainty   
00001B20  C5FC FFFF               1181                      MULS.W  #-1,D2
00001B24  C47C 00FF               1182                      AND.W   #$00FF,D2
00001B28  9242                    1183                      SUB.W   D2,D1
00001B2A  7808                    1184                      MOVE.L  #8,D4
00001B2C  48E7 3F72               1185                      MOVEM.L D2-D7/A1-A3/A6,-(sp)
00001B30  7808                    1186                      MOVE.L  #8,D4
00001B32  4EB8 12AC               1187                      JSR     HEXOUTPUT
00001B36  4CDF 4EFC               1188                      MOVEM.L  (sp)+,D2-D7/A1-A3/A6
00001B3A  18FC 0024               1189                      MOVE.B      #'$',(A4)+
00001B3E                          1190  *                    MOVE.L      #6,D0
00001B3E                          1191  *                    TRAP        #15
00001B3E                          1192  
00001B3E                          1193                  
00001B3E  18FC 0020               1194                      MOVE.B      #' ',(A4)+
00001B42                          1195  *                    MOVE.L      #6,D0
00001B42                          1196  *                    TRAP        #15
00001B42                          1197                      
00001B42  18FC 0020               1198                      MOVE.B      #' ',(A4)+
00001B46                          1199  *                    MOVE.L      #6,D0
00001B46                          1200  *                    TRAP        #15
00001B46                          1201  
00001B46  18FC 0042               1202                      MOVE.B      #'B',(A4)+
00001B4A                          1203  *                    MOVE.L      #6,D0
00001B4A                          1204  *                    TRAP        #15
00001B4A                          1205                      
00001B4A                          1206                                                              
00001B4A  18FC 002E               1207                      MOVE.B      #'.',(A4)+
00001B4E                          1208  *                    MOVE.L      #6,D0
00001B4E                          1209  *                    TRAP        #15
00001B4E                          1210                      
00001B4E  4E75                    1211                      RTS
00001B50                          1212  EAGROUP5_ADD
00001B50  D242                    1213                      ADD.W   D2,D1
00001B52  48E7 3F72               1214                      MOVEM.L D2-D7/A1-A3/A6,-(sp)
00001B56  7808                    1215                      MOVE.L  #8,D4
00001B58  4EB8 12AC               1216                      JSR     HEXOUTPUT
00001B5C  4CDF 4EFC               1217                      MOVEM.L  (sp)+,D2-D7/A1-A3/A6
00001B60  18FC 0024               1218                      MOVE.B      #'$',(A4)+
00001B64                          1219  *                    MOVE.L      #6,D0
00001B64                          1220  *                    TRAP        #15
00001B64                          1221  
00001B64                          1222                  
00001B64  18FC 0020               1223                      MOVE.B      #' ',(A4)+
00001B68                          1224  *                    MOVE.L      #6,D0
00001B68                          1225  *                    TRAP        #15
00001B68                          1226                      
00001B68  18FC 0020               1227                      MOVE.B      #' ',(A4)+
00001B6C                          1228  *                    MOVE.L      #6,D0
00001B6C                          1229  *                    TRAP        #15
00001B6C                          1230  
00001B6C  18FC 0042               1231                      MOVE.B      #'B',(A4)+
00001B70                          1232  *                    MOVE.L      #6,D0
00001B70                          1233  *                    TRAP        #15
00001B70                          1234                      
00001B70                          1235                                                              
00001B70  18FC 002E               1236                      MOVE.B      #'.',(A4)+
00001B74                          1237  *                    MOVE.L      #6,D0
00001B74                          1238  *                    TRAP        #15
00001B74                          1239                      
00001B74  4E75                    1240                      RTS
00001B76                          1241  
00001B76                          1242  EAGROUP5_ADDWORD
00001B76  D242                    1243                      ADD.W   D2,D1
00001B78  48E7 3F72               1244                      MOVEM.L D2-D7/A1-A3/A6,-(sp)
00001B7C  7808                    1245                      MOVE.L  #8,D4
00001B7E  4EB8 12AC               1246                      JSR     HEXOUTPUT
00001B82  4CDF 4EFC               1247                      MOVEM.L  (sp)+,D2-D7/A1-A3/A6
00001B86  18FC 0024               1248                      MOVE.B      #'$',(A4)+
00001B8A                          1249  *                    MOVE.L      #6,D0
00001B8A                          1250  *                    TRAP        #15
00001B8A                          1251  
00001B8A                          1252                  
00001B8A  18FC 0020               1253                      MOVE.B      #' ',(A4)+
00001B8E                          1254  *                    MOVE.L      #6,D0
00001B8E                          1255  *                    TRAP        #15
00001B8E                          1256                      
00001B8E  18FC 0020               1257                      MOVE.B      #' ',(A4)+
00001B92                          1258  *                    MOVE.L      #6,D0
00001B92                          1259  *                    TRAP        #15
00001B92                          1260  
00001B92  18FC 0057               1261                      MOVE.B      #'W',(A4)+
00001B96                          1262  *                    MOVE.L      #6,D0
00001B96                          1263  *                    TRAP        #15
00001B96                          1264                      
00001B96                          1265                                                              
00001B96  18FC 002E               1266                      MOVE.B      #'.',(A4)+
00001B9A                          1267  *                    MOVE.L      #6,D0
00001B9A                          1268  *                    TRAP        #15
00001B9A                          1269                      
00001B9A  4E75                    1270                      RTS
00001B9C                          1271        
00001B9C                          1272  EAGROUP5_SIZEW
00001B9C                          1273                      
00001B9C  4242                    1274                      CLR.W    D2
00001B9E  220A                    1275                      MOVE.L   A2,D1
00001BA0                          1276  *                   SUBI.L  #2,D1
00001BA0  341A                    1277                      MOVE.W  (A2)+,D2
00001BA2  0802 0015               1278                      BTST    #$15,D2
00001BA6  0803 0000               1279                      BTST.L  #0,D3          ;z == 0 if bit is 1 AND got to double check for this branch. too much unncertainty  
00001BAA  67CA                    1280                      BEQ     EAGROUP5_ADDWORD
00001BAC  C5FC FFFF               1281                      MULS.W  #-1,D2
00001BB0  9242                    1282                      SUB.W   D2,D1
00001BB2  48E7 3F72               1283                      MOVEM.L D2-D7/A1-A3/A6,-(sp)
00001BB6  7808                    1284                      MOVE.L  #8,D4
00001BB8  4EB8 12AC               1285                      JSR     HEXOUTPUT
00001BBC  4CDF 4EFC               1286                      MOVEM.L  (sp)+,D2-D7/A1-A3/A6
00001BC0  18FC 0024               1287                      MOVE.B      #'$',(A4)+
00001BC4                          1288  *                    MOVE.L      #6,D0
00001BC4                          1289  *                    TRAP        #15
00001BC4                          1290  
00001BC4                          1291                  
00001BC4  18FC 0020               1292                      MOVE.B      #' ',(A4)+
00001BC8                          1293  *                    MOVE.L      #6,D0
00001BC8                          1294  *                    TRAP        #15
00001BC8                          1295                      
00001BC8  18FC 0020               1296                      MOVE.B      #' ',(A4)+
00001BCC                          1297  *                    MOVE.L      #6,D0
00001BCC                          1298  *                    TRAP        #15
00001BCC                          1299  
00001BCC  18FC 0057               1300                      MOVE.B      #'W',(A4)+
00001BD0                          1301  *                    MOVE.L      #6,D0
00001BD0                          1302  *                    TRAP        #15
00001BD0                          1303                      
00001BD0                          1304                                                              
00001BD0  18FC 002E               1305                      MOVE.B      #'.',(A4)+
00001BD4                          1306  *                    MOVE.L      #6,D0
00001BD4                          1307  *                    TRAP        #15
00001BD4                          1308                      
00001BD4  4E75                    1309                      RTS
00001BD6                          1310                      
00001BD6                          1311  EAGROUP9
00001BD6  4281                    1312                      CLR.L   D1
00001BD8  4EB9 00001D4E           1313                      JSR     EALASTVALUE
00001BDE  4E75                    1314                      RTS
00001BE0                          1315                      
00001BE0                          1316  EAGROUP7
00001BE0  4281                    1317                      CLR.L   D1  ;byte holder               CLR.L   D1  ;byte holder
00001BE2  4286                    1318                      CLR.L   D6  ;loop counter
00001BE4  7C0F                    1319                      MOVE.L  #15,D6   ;max 15
00001BE6  0802 000A               1320                      BTST.L  #10,D2
00001BEA  6700 0078               1321                      BEQ     EAGROUP7POST ;z == 0 if bit is 1, which is memory to register (post increment). do reg scan last, which is done first
00001BEE  3212                    1322                      MOVE.W  (A2),D1
00001BF0                          1323                      ;else do src first
00001BF0                          1324  REVERSELOOP1
00001BF0  0D01                    1325                     BTST     D6,D1
00001BF2  6700 001C               1326                     BEQ      SKIPRVRSLOOP
00001BF6  5106                    1327                     SUBI.B   #8,D6
00001BF8  CC3C 000F               1328                     AND.B    #$0F,D6
00001BFC  0606 0030               1329                     ADDI.B   #$30,D6
00001C00  18C6                    1330                     MOVE.B   D6,(A4)+
00001C02  0406 0030               1331                     SUBI.B   #$30,D6
00001C06  5046                    1332                     ADDI     #8,D6
00001C08  18FC 0041               1333                     MOVE.B   #'A',(A4)+
00001C0C  18FC 002F               1334                     MOVE.B   #'/',(A4)+
00001C10                          1335  SKIPRVRSLOOP
00001C10  5306                    1336                     SUBI.B   #1,D6
00001C12  CC3C 000F               1337                     AND.B    #$0F,D6
00001C16  0C46 0008               1338                     CMPI     #8,D6
00001C1A  66D4                    1339                     BNE      REVERSELOOP1
00001C1C  6700 0002               1340                     BEQ      REVERSELOOPSPC
00001C20                          1341                     
00001C20  5306                    1342  REVERSELOOPSPC     SUBI.B   #1,D6
00001C22  0801 0008               1343                     BTST     #8,D1
00001C26  6700 000E               1344                     BEQ      REVERSELOOP2
00001C2A  18FC 0030               1345                     MOVE.B   #$30,(A4)+
00001C2E  18FC 0041               1346                     MOVE.B   #'A',(A4)+
00001C32  18FC 002F               1347                     MOVE.B   #'/',(A4)+
00001C36                          1348                     ;SUBI.B   #1,D6
00001C36                          1349                     
00001C36                          1350  
00001C36                          1351  REVERSELOOP2       
00001C36  0D01                    1352                     BTST     D6,D1
00001C38  6700 0014               1353                     BEQ      SKIPFRVRSLOOP2
00001C3C  0606 0030               1354                     ADDI.B   #$30,D6
00001C40  18C6                    1355                     MOVE.B   D6,(A4)+
00001C42  0406 0030               1356                     SUBI.B   #$30,D6
00001C46  18FC 0044               1357                     MOVE.B   #'D',(A4)+
00001C4A  18FC 002F               1358                     MOVE.B   #'/',(A4)+
00001C4E                          1359  SKIPFRVRSLOOP2
00001C4E  5346                    1360                     SUBI     #1,D6
00001C50  0C46 0000               1361                     CMPI     #0,D6
00001C54  6CE0                    1362                     BGE      REVERSELOOP2
00001C56  1C24                    1363                     MOVE.B   -(A4),D6
00001C58  4286                    1364                     CLR.L    D6
00001C5A  18FC 002C               1365                     MOVE.B   #',',(A4)+
00001C5E  4EB8 1BD6               1366                     JSR     EAGROUP9
00001C62  4E75                    1367                     RTS
00001C64                          1368  
00001C64                          1369                      
00001C64                          1370                      
00001C64                          1371  EAGROUP7POST                             
00001C64  4EB8 1BD6               1372                     JSR     EAGROUP9
00001C68  3212                    1373                     MOVE.W  (A2),D1
00001C6A  18FC 002C               1374                     MOVE.B   #',',(A4)+
00001C6E  7C0F                    1375                     MOVE.L  #15,D6   ;max 15
00001C70                          1376  
00001C70                          1377  
00001C70                          1378  
00001C70                          1379  FRWRDLOOP1         
00001C70  0C46 000F               1380                     CMPI     #15,D6
00001C74  6700 0038               1381                     BEQ      FORWARDLOOP2SPC
00001C78  0D01                    1382                     BTST     D6,D1
00001C7A  6700 0026               1383                     BEQ      SKIPFRWRDSLOOP
00001C7E  2606                    1384                     MOVE.L   D6,D3
00001C80  0406 000F               1385                     SUBI.B   #15,D6
00001C84  CDFC FFFF               1386                     MULS     #-1,D6
00001C88  CCBC 0000000F           1387                     AND.L    #$0000000F,D6
00001C8E  0606 0030               1388                     ADDI.B   #$30,D6
00001C92  18C6                    1389                     MOVE.B   D6,(A4)+
00001C94  0406 0030               1390                     SUBI.B   #$30,D6
00001C98  18FC 0044               1391                     MOVE.B   #'D',(A4)+
00001C9C  18FC 002F               1392                     MOVE.B   #'/',(A4)+
00001CA0  2C03                    1393                     MOVE.L   D3,D6
00001CA2                          1394  SKIPFRWRDSLOOP
00001CA2  5306                    1395                     SUB.B    #1,D6
00001CA4  0C46 0007               1396                     CMPI     #7,D6
00001CA8  66C6                    1397                     BNE      FRWRDLOOP1
00001CAA  6700 0016               1398                     BEQ      FORWARDLOOP2SET
00001CAE                          1399                     
00001CAE                          1400  FORWARDLOOP2SPC
00001CAE  0801 000F               1401                     BTST     #15,D1
00001CB2  67EE                    1402                     BEQ      SKIPFRWRDSLOOP
00001CB4  18FC 0030               1403                     MOVE.B   #$30,(A4)+
00001CB8  18FC 0044               1404                     MOVE.B   #'D',(A4)+
00001CBC  18FC 002F               1405                     MOVE.B   #'/',(A4)+  
00001CC0  60E0                    1406                     BRA      SKIPFRWRDSLOOP
00001CC2                          1407  
00001CC2                          1408  FORWARDLOOP2SET     
00001CC2  4283                    1409                     CLR.L    D3
00001CC4                          1410                     
00001CC4                          1411  FORWARDLOOP2
00001CC4  0D01                    1412                     BTST     D6,D1
00001CC6  6700 002E               1413                     BEQ      SKIPFRWRDSLOOP2
00001CCA  BCBC 00000000           1414                     CMP.L    #0,D6
00001CD0  6700 0032               1415                     BEQ      SKIPFRWRDSLOOP2SPC
00001CD4  2606                    1416                     MOVE.L   D6,D3
00001CD6                          1417                     
00001CD6  5F06                    1418                     SUBI.B   #7,D6
00001CD8  CDFC FFFF               1419                     MULS     #-1,D6
00001CDC  CCBC 0000000F           1420                     AND.L    #$0000000F,D6                
00001CE2                          1421  
00001CE2  0606 0030               1422                     ADDI.B   #$30,D6
00001CE6  18C6                    1423                     MOVE.B   D6,(A4)+
00001CE8  0406 0030               1424                     SUBI.B   #$30,D6
00001CEC  18FC 0041               1425                     MOVE.B   #'A',(A4)+
00001CF0  18FC 002F               1426                     MOVE.B   #'/',(A4)+
00001CF4  2C03                    1427                     MOVE.L   D3,D6
00001CF6                          1428  SKIPFRWRDSLOOP2
00001CF6  5306                    1429                     SUBI.B   #1,D6
00001CF8  0C46 00FF               1430                     CMPI     #$FF,D6
00001CFC  66C6                    1431                     BNE      FORWARDLOOP2
00001CFE  1C24                    1432                     MOVE.B   -(A4),D6
00001D00  4286                    1433                     CLR.L    D6
00001D02  4E75                    1434                     RTS
00001D04                          1435  
00001D04  18FC 0037               1436  SKIPFRWRDSLOOP2SPC  MOVE.B   #$37,(A4)+
00001D08  18FC 0041               1437                      MOVE.B   #'A',(A4)+
00001D0C  18FC 002F               1438                      MOVE.B   #'/',(A4)+
00001D10  60E4                    1439                      BRA     SKIPFRWRDSLOOP2
00001D12                          1440  
00001D12                          1441  
00001D12                          1442  EAGROUP4ALL          ;everything except LEA
00001D12  4281                    1443                      CLR.L   D1
00001D14  4EB9 00001D3A           1444                      JSR     CONSTANTREG
00001D1A  18FC 0044               1445                      MOVE.B  #'D',(A4)+
00001D1E  18FC 002C               1446                      MOVE.B  #',',(A4)+
00001D22  6000 FEB2               1447                      BRA     EAGROUP9
00001D26                          1448                      
00001D26                          1449  EAGROUP4LEA          ;ONLY FOR LEA
00001D26  4281                    1450                      CLR.L   D1
00001D28  4EB9 00001D3A           1451                      JSR     CONSTANTREG
00001D2E  18FC 0041               1452                      MOVE.B  #'A',(A4)+
00001D32  18FC 002C               1453                      MOVE.B  #',',(A4)+
00001D36  6000 FE9E               1454                      BRA     EAGROUP9
00001D3A                          1455                      
00001D3A                          1456  CONSTANTREG
00001D3A  2202                    1457                     MOVE.L   D2,D1
00001D3C                          1458                     ;we just want the 11th - 9th bit
00001D3C  C2BC 00000E00           1459                     AND.L    #%0000111000000000,D1
00001D42  E089                    1460                     LSR.L    #8,D1
00001D44  E289                    1461                     LSR.L    #1,D1
00001D46  0601 0030               1462                     ADDI.B  #$30,D1
00001D4A  18C1                    1463                     MOVE.B  D1,(A4)+
00001D4C  4E75                    1464                     RTS
00001D4E                          1465                      
00001D4E                          1466  EALASTVALUE
00001D4E                          1467                      *check if mode respects register value
00001D4E                          1468                      *if not branch out to immediate data
00001D4E  2202                    1469                      MOVE.L  D2,D1
00001D50  E689                    1470                      LSR.L   #3,D1
00001D52  C2BC 00000007           1471                      AND.L   #%0000000000111,D1
00001D58  B2BC 00000007           1472                      CMP.L   #7,D1
00001D5E  6700 009A               1473                      BEQ     IMMEDIATEDATA
00001D62  B2BC 00000004           1474                      CMP.L   #4,D1
00001D68  6700 018C               1475                      BEQ     ADDRESSDECREMENT
00001D6C  6E00 01BC               1476                      BGT     INVALIDEAMODE
00001D70  B2BC 00000003           1477                      CMP.L   #3,D1
00001D76  6700 014A               1478                      BEQ     ADDRESSINCREMENT
00001D7A  B2BC 00000002           1479                      CMP.L   #2,D1
00001D80  6700 002E               1480                      BEQ     INDIRECTADDRESS
00001D84  B2BC 00000001           1481                      CMP.L   #1,D1
00001D8A  6700 004C               1482                      BEQ     DIRECTADDRESS
00001D8E                          1483                      ;data reg
00001D8E                          1484  
00001D8E                          1485                      
00001D8E  4281                    1486                      CLR.L   D1
00001D90  2202                    1487                      MOVE.L  D2,D1
00001D92  C2BC 00000007           1488                      AND.L   #%0000000000000111,D1
00001D98                          1489                      
00001D98  0601 0030               1490                      ADDI.B  #$30,D1
00001D9C                          1491                      
00001D9C  18C1                    1492                      MOVE.B  D1,(A4)+
00001D9E                          1493  *                    MOVE.L  #6,D0
00001D9E                          1494  *                    TRAP    #15
00001D9E                          1495  
00001D9E  18FC 0044               1496                      MOVE.B  #'D',(A4)+
00001DA2                          1497  *                    MOVE.L  #6,D0
00001DA2                          1498  *                    TRAP    #15
00001DA2  18FC 0020               1499                  MOVE.B  #' ',(A4)+
00001DA6  18FC 0020               1500                  MOVE.B  #' ',(A4)+
00001DAA  18FC 0020               1501                  MOVE.B  #' ',(A4)+
00001DAE  4E75                    1502                      RTS
00001DB0                          1503                      
00001DB0                          1504  INDIRECTADDRESS  
00001DB0                          1505  
00001DB0                          1506  *                    MOVE.L  #6,D0
00001DB0                          1507  *                    TRAP    #15
00001DB0                          1508                      
00001DB0  18FC 0029               1509                      MOVE.B  #')',(A4)+
00001DB4                          1510  *                    MOVE.L  #6,D0
00001DB4                          1511  *                    TRAP    #15
00001DB4                          1512  
00001DB4  2202                    1513                      MOVE.L  D2,D1
00001DB6  C2BC 00000007           1514                      AND.L   #%0000000000000111,D1
00001DBC  0601 0030               1515                      ADDI.B  #$30,D1
00001DC0  18C1                    1516                      MOVE.B  D1,(A4)+
00001DC2                          1517                      
00001DC2  18FC 0041               1518                      MOVE.B  #'A',(A4)+
00001DC6  18FC 0028               1519                      MOVE.B  #'(',(A4)+
00001DCA                          1520  *                    MOVE.L  #6,D0
00001DCA                          1521  *                    TRAP    #15
00001DCA                          1522                      
00001DCA  18FC 0020               1523                      MOVE.B  #' ',(A4)+
00001DCE  18FC 0020               1524                      MOVE.B  #' ',(A4)+
00001DD2  18FC 0020               1525                      MOVE.B  #' ',(A4)+                    
00001DD6  4E75                    1526                      RTS                  
00001DD8                          1527        
00001DD8                          1528  DIRECTADDRESS
00001DD8  4281                    1529                      CLR.L   D1
00001DDA  2202                    1530                      MOVE.L  D2,D1
00001DDC                          1531                      
00001DDC                          1532                      
00001DDC  C2BC 00000007           1533                      AND.L   #%0000000000000111,D1
00001DE2                          1534                      
00001DE2                          1535                      
00001DE2  0601 0030               1536                      ADDI.B  #$30,D1
00001DE6  18C1                    1537                      MOVE.B  D1,(A4)+
00001DE8                          1538  *                    MOVE.L  #6,D0
00001DE8                          1539  *                    TRAP    #15
00001DE8                          1540                      
00001DE8  18FC 0041               1541                      MOVE.B  #'A',(A4)+
00001DEC                          1542  *                    MOVE.L  #6,D0
00001DEC                          1543  *                    TRAP    #15
00001DEC                          1544  
00001DEC  18FC 0020               1545                      MOVE.B  #' ',(A4)+
00001DF0  18FC 0020               1546                      MOVE.B  #' ',(A4)+
00001DF4  18FC 0020               1547                      MOVE.B  #' ',(A4)+  
00001DF8  4E75                    1548                      RTS
00001DFA                          1549  
00001DFA                          1550                
00001DFA                          1551  IMMEDIATEDATA
00001DFA                          1552                      ;need to decide whether print long, word, or byte sized. 
00001DFA                          1553                      ;decide size of output, 0(word), 1(long), 4(immediate)
00001DFA                          1554  *                    MOVE.L      #$23,D1
00001DFA                          1555  *                    MOVE.L      #6,D0
00001DFA                          1556  *                    TRAP        #15
00001DFA                          1557                      
00001DFA  4281                    1558                      CLR.L   D1
00001DFC  2202                    1559                      MOVE.L  D2,D1
00001DFE  C4BC 00000007           1560                      AND.L   #%0000000000000111,D2
00001E04                          1561                      ;let d1 have the next value
00001E04  4281                    1562                      CLR.L   D1
00001E06  0C82 00000000           1563                      CMPI.L  #0,D2
00001E0C  6700 001A               1564                      BEQ     PRINTWORDDATA
00001E10  0C82 00000001           1565                      CMPI.L  #1,D2
00001E16  6700 003A               1566                      BEQ     PRINTLONGDATA
00001E1A  0C82 00000004           1567                      CMPI.L  #4,D2
00001E20  6700 0072               1568                      BEQ     PRINTIMMEDIATEDATA
00001E24  6000 0104               1569                      BRA     INVALIDEAMODE
00001E28                          1570                      ;RTS         ;it should never reach here
00001E28                          1571                      
00001E28                          1572                          
00001E28                          1573  PRINTWORDDATA
00001E28  321A                    1574                      MOVE.W  (A2)+,D1
00001E2A  48E7 3F72               1575                      MOVEM.L D2-D7/A1-A3/A6,-(sp)
00001E2E  7804                    1576                      MOVE.L  #$4,D4
00001E30  4EB8 12AC               1577                      JSR     HEXOUTPUT
00001E34  4CDF 4EFC               1578                      MOVEM.L  (sp)+,D2-D7/A1-A3/A6
00001E38  18FC 0024               1579                      MOVE.B  #'$',(A4)+
00001E3C  18FC 0020               1580                      MOVE.B  #' ',(A4)+
00001E40  18FC 0020               1581                      MOVE.B  #' ',(A4)+  
00001E44  18FC 0020               1582                      MOVE.B  #' ',(A4)+
00001E48  18FC 0020               1583                      MOVE.B  #' ',(A4)+
00001E4C  18FC 0020               1584                      MOVE.B  #' ',(A4)+  
00001E50  4E75                    1585                      RTS
00001E52                          1586  
00001E52                          1587  PRINTLONGDATA
00001E52  321A                    1588                      MOVE.W  (A2)+,D1     
00001E54  4286                    1589                      CLR.L   D6
00001E56  3C01                    1590                      MOVE.W  D1,D6
00001E58  321A                    1591                      MOVE.W  (A2)+,D1     
00001E5A                          1592                 
00001E5A  48E7 3F72               1593                      MOVEM.L D2-D7/A1-A3/A6,-(sp)
00001E5E  7804                    1594                      MOVE.L   #$4,D4
00001E60  4EB8 12AC               1595                      JSR      HEXOUTPUT
00001E64  4CDF 4EFC               1596                      MOVEM.L  (sp)+,D2-D7/A1-A3/A6
00001E68                          1597                      
00001E68                          1598                      
00001E68  3206                    1599                      MOVE.W  D6,D1
00001E6A  4286                    1600                      CLR.L   D6
00001E6C                          1601                      
00001E6C  48E7 3F72               1602                      MOVEM.L D2-D7/A1-A3/A6,-(sp)
00001E70  7804                    1603                      MOVE.L   #$4,D4
00001E72  4EB8 12AC               1604                      JSR      HEXOUTPUT
00001E76  4CDF 4EFC               1605                      MOVEM.L  (sp)+,D2-D7/A1-A3/A6
00001E7A                          1606                      
00001E7A  18FC 0024               1607                      MOVE.B  #'$',(A4)+
00001E7E  18FC 0020               1608                      MOVE.B  #' ',(A4)+
00001E82  18FC 0020               1609                      MOVE.B  #' ',(A4)+  
00001E86  18FC 0020               1610                      MOVE.B  #' ',(A4)+
00001E8A  18FC 0020               1611                      MOVE.B  #' ',(A4)+
00001E8E  18FC 0020               1612                      MOVE.B  #' ',(A4)+  
00001E92  4E75                    1613                      RTS
00001E94                          1614    
00001E94                          1615  PRINTIMMEDIATEDATA
00001E94  221A                    1616                      MOVE.L  (A2)+,D1
00001E96  48E7 3F72               1617                      MOVEM.L D2-D7/A1-A3/A6,-(sp)
00001E9A  7804                    1618                      MOVE.L  #4,D4
00001E9C  4EB8 12AC               1619                      JSR     HEXOUTPUT
00001EA0  4CDF 4EFC               1620                      MOVEM.L  (sp)+,D2-D7/A1-A3/A6
00001EA4  18FC 0023               1621                      MOVE.B  #'#',(A4)+
00001EA8  18FC 0024               1622                      MOVE.B  #'$',(A4)+
00001EAC  18FC 0020               1623                      MOVE.B  #' ',(A4)+
00001EB0  18FC 0020               1624                      MOVE.B  #' ',(A4)+  
00001EB4  18FC 0020               1625                      MOVE.B  #' ',(A4)+
00001EB8  18FC 0020               1626                      MOVE.B  #' ',(A4)+
00001EBC  18FC 0020               1627                      MOVE.B  #' ',(A4)+  
00001EC0  4E75                    1628                      RTS                  
00001EC2                          1629                          
00001EC2                          1630  ADDRESSINCREMENT    
00001EC2  18FC 002B               1631                      MOVE.B  #'+',(A4)+
00001EC6                          1632  *                    MOVE.L  #6,D0
00001EC6                          1633  *                    TRAP    #15
00001EC6                          1634  
00001EC6  18FC 0029               1635                      MOVE.B  #')',(A4)+
00001ECA                          1636  *                    MOVE.L  #6,D0
00001ECA                          1637  *                    TRAP    #15
00001ECA                          1638                      
00001ECA                          1639  
00001ECA                          1640     
00001ECA  2202                    1641                      MOVE.L  D2,D1
00001ECC  C2BC 00000007           1642                      AND.L   #%0000000000000111,D1
00001ED2  0601 0030               1643                      ADDI.B  #$30,D1
00001ED6  18C1                    1644                      MOVE.B  D1,(A4)+
00001ED8                          1645  *                    MOVE.L  #6,D0
00001ED8                          1646  *                    TRAP    #15
00001ED8                          1647  
00001ED8  18FC 0041               1648                      MOVE.B  #'A',(A4)+             
00001EDC                          1649  *                    MOVE.L  #6,D0
00001EDC                          1650  *                    TRAP    #15
00001EDC                          1651  
00001EDC  18FC 0028               1652                      MOVE.B  #'(',(A4)+
00001EE0                          1653  *                    MOVE.L  #6,D0
00001EE0                          1654  *                    TRAP    #15
00001EE0                          1655  
00001EE0                          1656  
00001EE0  18FC 0020               1657                      MOVE.B  #' ',(A4)+
00001EE4  18FC 0020               1658                      MOVE.B  #' ',(A4)+  
00001EE8  18FC 0020               1659                      MOVE.B  #' ',(A4)+
00001EEC  18FC 0020               1660                      MOVE.B  #' ',(A4)+
00001EF0  18FC 0020               1661                      MOVE.B  #' ',(A4)+                      
00001EF4  4E75                    1662                      RTS
00001EF6                          1663                      
00001EF6                          1664  
00001EF6                          1665  ADDRESSDECREMENT 
00001EF6  18FC 0029               1666                      MOVE.B  #')',(A4)+
00001EFA                          1667  *                    MOVE.L  #6,D0
00001EFA                          1668  *                    TRAP    #15
00001EFA                          1669                      
00001EFA  2202                    1670                      MOVE.L  D2,D1
00001EFC  C2BC 00000007           1671                      AND.L   #%0000000000000111,D1
00001F02  0601 0030               1672                      ADDI.B  #$30,D1
00001F06  18C1                    1673                      MOVE.B  D1,(A4)+
00001F08                          1674  *                    MOVE.L  #6,D0
00001F08                          1675  *                    TRAP    #15
00001F08                          1676                      
00001F08  18FC 0041               1677                      MOVE.B  #'A',(A4)+
00001F0C                          1678  *                    MOVE.L  #6,D0
00001F0C                          1679  *                    TRAP    #15
00001F0C                          1680                      
00001F0C  18FC 0028               1681                      MOVE.B  #'(',(A4)+
00001F10                          1682  *                    MOVE.L  #6,D0
00001F10                          1683  *                    TRAP    #15
00001F10                          1684                      
00001F10  18FC 002D               1685                      MOVE.B  #'-',(A4)+
00001F14                          1686  *                    MOVE.L  #6,D0
00001F14                          1687  *                    TRAP    #15
00001F14                          1688  
00001F14  18FC 0020               1689                      MOVE.B  #' ',(A4)+
00001F18  18FC 0020               1690                      MOVE.B  #' ',(A4)+  
00001F1C  18FC 0020               1691                      MOVE.B  #' ',(A4)+
00001F20  18FC 0020               1692                      MOVE.B  #' ',(A4)+
00001F24  18FC 0020               1693                      MOVE.B  #' ',(A4)+                      
00001F28  4E75                    1694                      RTS
00001F2A                          1695  
00001F2A                          1696  
00001F2A                          1697  INVALIDEAMODE
00001F2A  4EB8 1A40               1698                  JSR     EAGROUPINVALID
00001F2E  18FC 0041               1699                  MOVE.B  #'A',(A4)+
00001F32  18FC 0054               1700                  MOVE.B  #'T',(A4)+
00001F36  18FC 0041               1701                  MOVE.B  #'A',(A4)+
00001F3A  18FC 0044               1702                  MOVE.B  #'D',(A4)+
00001F3E  18FC 0020               1703                  MOVE.B  #' ',(A4)+
00001F42  18FC 0020               1704                  MOVE.B  #' ',(A4)+
00001F46  18FC 0020               1705                  MOVE.B  #' ',(A4)+
00001F4A  18FC 0020               1706                  MOVE.B  #' ',(A4)+
00001F4E  4EB8 1270               1707                  JSR     OUTPUTADDRESS
00001F52  4EB9 00001F5A           1708                  JSR     EAOUTPUT
00001F58  4E75                    1709                  RTS
00001F5A                          1710                  ;we need       one rts. this rts will return to its original branch
00001F5A                          1711                  ;so if we go to this branch and print data and hten rts, it will print that opcode as well
00001F5A                          1712                  ; need a mechanism which willl till original branch that an invalid has occured
00001F5A                          1713                  ; maybe use D4?     we can do this by checking if A4 is empty. in good case, A4 will be filled.
00001F5A                          1714                  ; in bad case it will be cleared. this works well since EA is being put into string stack initially.
00001F5A                          1715                  ; thus for every branch, we need to check if A4 is empty AFRTER being called 
00001F5A                          1716  *FORMAT1         
00001F5A                          1717  *FORMAT2
00001F5A                          1718  *FORMAT3
00001F5A                          1719  *FORMAT4
00001F5A                          1720  *FORMAT5
00001F5A                          1721  *FORMAT6
00001F5A                          1722  *FORMAT7
00001F5A                          1723  *FORMAT8
00001F5A                          1724  *FORMAT9
00001F5A                          1725  *FORMAT10
00001F5A                          1726  *FORMAT11
00001F5A                          1727  *FORMAT12
00001F5A                          1728  *FORMAT13
00001F5A                          1729  *FORMAT14
00001F5A                          1730  *FORMAT15
00001F5A                          1731  *EAGRP1
00001F5A                          1732  *EAGRP2
00001F5A                          1733  *EAGRP3
00001F5A                          1734  *EAGRP4
00001F5A                          1735  *EAGRP5
00001F5A                          1736  *EAGRP6
00001F5A                          1737  *EAGRP7
00001F5A                          1738  *EAGRP8
00001F5A                          1739  *EAGRP9
00001F5A                          1740  *EAGRP10
00001F5A                          1741  ;I/O         
00001F5A                          1742  ******************************************************************************************************************
00001F5A                          1743  EAOUTPUT
00001F5A                          1744                  ;LEA        $900,A5
00001F5A  4BF9 00002596           1745                  LEA        base16value,A5
00001F60  4281                    1746                  CLR.L      D1
00001F62  6000 0002               1747                  BRA        REVERSEIT
00001F66                          1748  
00001F66                          1749  
00001F66                          1750                  
00001F66                          1751  REVERSEIT
00001F66  1224                    1752                  MOVE.B     -(A4),D1        ;code to reverse string
00001F68  B27C 000A               1753                  CMP        #$A,D1        
00001F6C  6700 0008               1754                  BEQ        FINAL
00001F70  1AC1                    1755                  MOVE.B     D1,(A5)+
00001F72  5204                    1756                  ADD.B      #1,D4
00001F74  60F0                    1757                  BRA        REVERSEIT   
00001F76                          1758                  
00001F76                          1759                  
00001F76                          1760  FINAL           
00001F76                          1761  
00001F76  1AFC 0000               1762                  MOVE.B      #0,(A5)+        ;add NULL ASCII CHAR
00001F7A                          1763  
00001F7A                          1764  *                LEA $900, A1 ; display the string stored at "base16value"
00001F7A  43F9 00002596           1765                  LEA  base16value,A1
00001F80  700E                    1766                  MOVE.L #14,D0       ; task number #13
00001F82  4E4F                    1767                  TRAP #15            ; call TRAP #15 function        
00001F84                          1768                  
00001F84                          1769                  ;CLEARBUFFER
00001F84                          1770  CLEANIT
00001F84  1B3C 00FF               1771                  MOVE.B     #$FF,-(A5)
00001F88  18FC 00FF               1772                  MOVE.B     #$FF,(A4)+
00001F8C  B87C 0000               1773                  CMP        #$0,D4        
00001F90  6700 0008               1774                  BEQ        FINALRTS               
00001F94  0604 00FF               1775                  ADD.B      #-1,D4
00001F98  60EA                    1776                  BRA        CLEANIT
00001F9A                          1777                  
00001F9A                          1778  FINALRTS               
00001F9A  4E75                    1779                  RTS
00001F9C                          1780              
00001F9C  4283                    1781  NEXTIO          CLR.L     D3
00001F9E  4284                    1782                  CLR.L     D4 
00001FA0                          1783                  
00001FA0  43F9 0000242E           1784                  LEA     CLR,A1   ;Display intro message
00001FA6  103C 000E               1785                  MOVE.B  #14,D0 
00001FAA  4E4F                    1786                  TRAP    #15
00001FAC                          1787                                
00001FAC  4CDF 7EFA               1788                  MOVEM.L  (sp)+,D1/D3-D7/A1-A6 ;I/O gets his stuff back
00001FB0  B5CB                    1789                  CMP.L    A3,A2  ;we dont need more machine language once we have reached the the destination
00001FB2  6E00 0088               1790                  BGT      ENDPAGE ;so when equal, we are done
00001FB6  0C05 0001               1791                  CMPI.B   #1,D5 ;hard cded page limit for first page
00001FBA  6700 0010               1792                  BEQ      SECONDPAGE
00001FBE  B2BC 00000001           1793                  CMP.L    #1,D1
00001FC4  6700 0010               1794                  BEQ      NEWPAGELOOP
00001FC8  6600 F28E               1795                  BNE      FEEDOPCODE
00001FCC                          1796  
00001FCC                          1797                  
00001FCC                          1798  SECONDPAGE
00001FCC  B2BC 00000001           1799                  CMP.L    #1,D1       ;hardcoded limit for other pages page. can be and expected to change
00001FD2  6600 F284               1800                  BNE      FEEDOPCODE
00001FD6                          1801                  ;check if user wants new page. if no exit. if yes continue to feedopcode.
00001FD6                          1802  NEWPAGELOOP
00001FD6  1A3C 0001               1803                  MOVE.B   #1,D5
00001FDA  43F9 0000265E           1804                  LEA     IOVariable,A1          ;had to specify or it wont work properly                 
00001FE0  43F9 00002394           1805                  LEA     NEWPAGEMSG,A1     
00001FE6  303C 000E               1806                  MOVE.W  #14,D0          
00001FEA  4E4F                    1807                  TRAP    #15 
00001FEC                          1808                  
00001FEC  43F9 0000265E           1809                  LEA     IOVariable,A1          ;had to specify or it wont work properly                 
00001FF2  303C 0002               1810                  MOVE.W  #2,D0           ;had to specify or it wont work properly
00001FF6  4E4F                    1811                  TRAP    #15  
00001FF8                          1812                  
00001FF8  1611                    1813                  MOVE.B  (A1),D3
00001FFA                          1814                  
00001FFA  43F9 0000265E           1815                  LEA     IOVariable,A1          ;had to specify or it wont work properly
00002000  B63C 0059               1816                  CMP.B   #$59,D3
00002004  6700 F252               1817                  BEQ     FEEDOPCODE
00002008  B63C 0079               1818                  CMP.B   #$79,D3
0000200C  6700 F24A               1819                  BEQ     FEEDOPCODE
00002010  B63C 0000               1820                  CMP.B   #$0,D3
00002014  6700 F242               1821                  BEQ     FEEDOPCODE
00002018  B63C 004E               1822                  CMP.B   #$4E,D3
0000201C  6700 001E               1823                  BEQ     ENDPAGE 
00002020  B63C 006E               1824                  CMP.B   #$6E,D3
00002024  6700 0016               1825                  BEQ     ENDPAGE 
00002028                          1826                  
00002028  43F9 0000265E           1827                  LEA     IOVariable,A1          ;had to specify or it wont work properly
0000202E  43F9 00002308           1828                  LEA     BADCHARACTER,A1     
00002034  303C 000D               1829                  MOVE.W  #13,D0          
00002038  4E4F                    1830                  TRAP    #15
0000203A                          1831                  
0000203A  609A                    1832                  BRA     NEWPAGELOOP  
0000203C                          1833                  ******************************************************************************************************************
0000203C                          1834  ENDPAGE                 
0000203C  4CDF 7EFF               1835                  MOVEM.L     (SP)+,D0-D7/A1-A6 ;start from scratch, all 0s
00002040  6000 EFCA               1836                  BRA         STARTMENU
00002044                          1837   
00002044                          1838                  
00002044                          1839  ENDPROGRAM              
00002044  43F9 000023D8           1840                  LEA     ENDMSG,A1     
0000204A  303C 000D               1841                  MOVE.W  #13,D0          
0000204E  4E4F                    1842                  TRAP    #15
00002050                          1843                  
00002050  303C 0009               1844                  MOVE.W  #9,D0          
00002054  4E4F                    1845                  TRAP    #15    
00002056                          1846                           
00002056  FFFF FFFF               1847                  SIMHALT             ; halt simulator
0000205A                          1848      
0000205A  =0000000A               1849  CR                  EQU     $0A
0000205A  =0000000D               1850  LF                  EQU     $0D
0000205A                          1851  
0000205A= 58 58 58 58 58 58 ...   1852  WELMSG              DC.B    'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX',CR,LF
0000208F= 58 20 20 20 20 20 ...   1853                      DC.B    'X                                                 X',CR,LF
000020C4= 58 20 20 20 57 65 ...   1854                      DC.B    'X   Welcome to the Disassembler of Motorola 68k   X',CR,LF
000020F9= 58 20 20 20 20 20 ...   1855                      DC.B    'X                                                 X',CR,LF
0000212E= 58 20 20 20 20 20 ...   1856                      DC.B    'X           By:    Sesario Imanputra              X',CR,LF
00002163= 58 20 20 20 20 20 ...   1857                      DC.B    'X                  Zachary Liong                  X',CR,LF
00002198= 58 20 20 20 20 20 ...   1858                      DC.B    'X                  Micah Rice                     X',CR,LF
000021CD= 58 20 20 20 20 20 ...   1859                      DC.B    'X                  Marcia Ma                      X',CR,LF
00002202= 58 20 20 20 20 20 ...   1860                      DC.B    'X                                                 X',CR,LF
00002237= 58 58 58 58 58 58 ...   1861                      DC.B    'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX',CR,LF,CR,LF, 0
0000226F                          1862  LINE_COUNT          DS.B    1
00002270                          1863  
00002270= 50 6C 65 61 73 65 ...   1864  MSGINPUT            DC.B    'Please enter first memory address  (''Q'' to quit): $',0
000022A4= 50 6C 65 61 73 65 ...   1865  MSGINPUT2           DC.B    'Please enter second memory address (''Q'' to quit): $',0
000022D8= 494E5055 54205641 ...   1866  BADVALUE            DC.L    'INPUT VALUE EXCEEDS 32 BIT RANGE!',CR,LF,0
00002308= 494E5055 54204841 ...   1867  BADCHARACTER        DC.L    'INPUT HAS ILLEGAL CHARACTER!',CR,LF,0
00002330= 534F5552 43452041 ...   1868  BADADDRESS          DC.L    'SOURCE ADDRESS CANNOT BE BIGGER THEN DESTINATION ADDRESS!',CR,LF,0
00002378= 56414C55 4520544F ...   1869  VALUETOOLOW         DC.L    'VALUE TOO LOW!',CR,LF,0
00002394= 454E5445 5220544F ...   1870  NEWPAGEMSG          DC.L    'ENTER TO CONTINUE... ',CR,LF,0
000023B8                          1871  
000023B8= 53544152 544F5645 ...   1872  NEWPROGMSG          DC.L    'STARTOVER? [Y|N]: ',CR,LF,0
000023D8                          1873  
000023D8= 58 58 58 58 58 58 ...   1874  ENDMSG              DC.B    'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX    END    XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX',0
0000242A                          1875  
0000242A= 2B 00                   1876  PLUSMSG             DC.B    '+',0
0000242C= 2D 00                   1877  NEGMSG              DC.B    '-',0
0000242E= 0A 0D 00                1878  CLR                 DC.B    CR,LF,0
00002431= 20 4E 4F 50 00          1879  NOOPMSG             DC.B    ' NOP',0
00002436= 20 52 54 53 00          1880  RTSMSG              DC.B    ' RTS',0
0000243B                          1881  
0000243B= 20 4D 4F 56 45 4D ...   1882  MOVEMMSG            DC.B    ' MOVEM.',0
00002443= 20 4D 4F 56 45 2E 00    1883  MOVEMSG             DC.B    ' MOVE.',0
0000244A= 20 4C 45 41 2E 00       1884  LEAMSG              DC.B    ' LEA.',0
00002450= 20 4E 4F 54 2E 00       1885  NOTMSG              DC.B    ' NOT.',0
00002456= 20 4A 53 52 2E 00       1886  JSRMSG              DC.B    ' JSR.',0
0000245C= 20 42 47 54 2E 00       1887  BGTMSG              DC.B    ' BGT.',0
00002462= 20 42 4C 45 2E 00       1888  BLEMSG              DC.B    ' BLE.',0
00002468= 20 42 45 51 2E 00       1889  BEQMSG              DC.B    ' BEQ.',0
0000246E= 20 42 52 41 2E 00       1890  BRAMSG              DC.B    ' BRA.',0
00002474= 20 44 49 56 55 2E 00    1891  DIVUMSG             DC.B    ' DIVU.',0
0000247B= 20 53 55 42 2E 00       1892  SUBMSG              DC.B    ' SUB.',0
00002481= 20 4D 55 4C 53 2E 00    1893  MULSMSG             DC.B    ' MULS.',0
00002488= 20 41 4E 44 2E 00       1894  ANDMSG              DC.B    ' AND.',0
0000248E= 20 41 44 44 2E 00       1895  ADDMSG              DC.B    ' ADD.',0
00002494= 20 4C 53 4C 2E 00       1896  LSLMSG              DC.B    ' LSL.',0
0000249A= 20 41 53 4C 2E 00       1897  ASLMSG              DC.B    ' ASL.',0
000024A0= 20 44 41 54 41 20 ...   1898  INVALIDMSG          DC.B    ' DATA  ',0
000024A8= 20 49 4E 50 55 54 ...   1899  EVENINPUTMSG        DC.B    ' INPUT VALUE IS EVEN!',0
000024BE= 20 20 20 00             1900  SPACEMSG            DC.B    '   ',0
000024C2= 57 20 20 00             1901  WORDSIZE            DC.B    'W  ',0
000024C6= 42 20 20 00             1902  BYTESIZE            DC.B    'B  ',0
000024CA= 4C 20 20 00             1903  LONGSIZE            DC.B    'L  ',0
000024CE                          1904  tempresult          DS.L    50      ; variable to save temporary result
00002596                          1905  base16value         DS.L    50     ; variable to save the final result
0000265E                          1906  IOVariable          DS.L    10     ; variable to save the final result
00002686                          1907  
00002686                          1908  * Put variables and constants here
00002686                          1909  
00002686                          1910      END    START        ; last line of source

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ADDMSG              248E
ADDRESSDECREMENT    1EF6
ADDRESSINCREMENT    1EC2
ALPHA               11C4
ANDBRANCH           1784
ANDMSG              2488
ASLMEMBRANCH        1850
ASLMSG              249A
ASLREGBRANCH        18C2
ATOH                1150
BADADDRESS          2330
BADADDRESSORDER     1224
BADCHARACTER        2308
BADINPUT            1126
BADVALUE            22D8
BASE16VALUE         2596
BEQBRANCH           15C4
BEQMSG              2468
BGTBRANCH           15F4
BGTMSG              245C
BLEBRANCH           1624
BLEMSG              2462
BRABRANCH           158C
BRAMSG              246E
BYTESIZE            24C6
CHEAPLOOP           12B8
CHECKINPUTAGAIN     1094
CHECKLOW            1214
CHECKNEG            1162
CLEANIT             1F84
CLR                 242E
CONSTANTREG         1D3A
CONTLOOP            1072
CONVERTIT           12E8
CR                  A
DIRECTADDRESS       1DD8
DIRECTCONV          12D8
DIVUMSG             2474
DONE                1304
EAGROUP2            1A6C
EAGROUP4ALL         1D12
EAGROUP4LEA         1D26
EAGROUP5            1AF2
EAGROUP5_ADD        1B50
EAGROUP5_ADDWORD    1B76
EAGROUP5_SIZEW      1B9C
EAGROUP7            1BE0
EAGROUP7POST        1C64
EAGROUP9            1BD6
EAGROUPINVALID      1A40
EALASTVALUE         1D4E
EAOUTPUT            1F5A
ENDMSG              23D8
ENDPAGE             203C
ENDPROGRAM          2044
ERR                 11B6
EVENINPUTMSG        24A8
FEEDOPCODE          1258
FINAL               1F76
FINALRTS            1F9A
FINISHSAVING        1250
FORWARDLOOP2        1CC4
FORWARDLOOP2SET     1CC2
FORWARDLOOP2SPC     1CAE
FOR_LOOP            1048
FRWRDLOOP1          1C70
GETSIZEFORMAT1      146E
GETSIZEFORMAT2      1492
GETSIZEFORMAT3      14AE
HEXOUTPUT           12AC
IMMEDIATEDATA       1DFA
INDIRECTADDRESS     1DB0
INPUT1              1010
INPUT2              102C
INTDATABRANCH       1AB8
INVALIDBRANCH       19F4
INVALIDEAMODE       1F2A
INVALIDLOWVALUE     118C
INVALIDMSG          24A0
IOVARIABLE          265E
JSRMBRANCH          14E4
JSRMSG              2456
LEABRANCH           1522
LEAMSG              244A
LF                  D
LINE_COUNT          226F
LONGSIZE            24CA
LOWERCASE           10A6
LSLMEMBRANCH        1892
LSLMSG              2494
LSLREGBRANCH        190A
MOVEMBRANCH         13C4
MOVEMMSG            243B
MOVEMSG             2443
MSGINPUT            2270
MSGINPUT2           22A4
MULSBRANCH          1748
MULSLOOP            1732
MULSMSG             2481
MULSTEST            172C
NEGMSG              242C
NEGVALUE            11C0
NEWPAGELOOP         1FD6
NEWPAGEMSG          2394
NEWPROGMSG          23B8
NEXTFOURHEX         1A28
NEXTIO              1F9C
NEXTNEXTFOURHEX     1A34
NOOPBRANCH          19A0
NOOPMSG             2431
NOTBRANCH           140E
NOTMSG              2450
OPCODEGROUP1        1392
OPCODEGROUP2        1562
OPCODEGROUP3        1654
OPCODEGROUP4        16A2
OPCODEGROUP5        1710
OPCODEGROUP6        17CA
OPCODEGROUP7        182C
OPCODEGROUP8        1952
OPCODETIME          1338
OTHERVAL            10BC
OUTPUTADDRESS       1270
OVERFLOWDETECT      10DE
OVERFLOWINPUT       10FC
OVERFLOWINPUTCHECK  10EA
PA                  4078
PE                  4086
PI                  407C
PLUSMSG             242A
PO                  4084
PRINTADD            17E4
PRINTIMMEDIATEDATA  1E94
PRINTLONGDATA       1E52
PRINTLONGSIZE       14D4
PRINTWORDDATA       1E28
PRINTWORDSIZE       14DC
PRO                 4000
PU                  4080
RESET               116A
RETLOOP             108A
RETLOOPNEG          108E
REVERSEIT           1F66
REVERSELOOP1        1BF0
REVERSELOOP2        1C36
REVERSELOOPSPC      1C20
RTSBRANCH           19CA
RTSMSG              2436
SAVESECOND          11D6
SECONDPAGE          1FCC
SKIPFRVRSLOOP2      1C4E
SKIPFRWRDSLOOP      1CA2
SKIPFRWRDSLOOP2     1CF6
SKIPFRWRDSLOOP2SPC  1D04
SKIPRVRSLOOP        1C10
SKIPZEROLOOP        1336
SPACEMSG            24BE
SPECCASE            12FA
START               1000
STARTMENU           100C
SUBBRANCH           16DC
SUBBRANCH3          16D0
SUBMSG              247B
SUBSTRACTVAL        1090
SUBSTRACTVALOTHER   10D2
TEMPRESULT          24CE
TESTADD             181C
TESTSUBBRANCH       16B8
TESTSUBBRANCH2      16C4
TOREVERSEIT         1318
VALUETOOLOW         2378
WELMSG              205A
WORDSIZE            24C2
ZEROLOOP            1328
