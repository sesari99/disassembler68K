00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 8/3/2020 2:11:55 AM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      :  I/O
00000000                             3  * Written by :  Sesario Imanputra, Zachary Liong, Micha Rice, 
00000000                             4  * Date       :  
00000000                             5  * Description: Starts at 4000. For testing purposes, theres a bunch of ML codes to disassemble at 4000. Currently, the first ML code at 4000 is NOP.
00000000                             6  * afterwards, it will include ML of whatever we wrote after NOP.
00000000                             7  * current I/O should be able to detext values exceeding the 32 bit unsigned range (FFFFFFFF) and recognize invalid input.
00000000                             8  * if you input a lower case letter, it will automatically convert into uppercase. 
00000000                             9  *-----------------------------------------------------------    
00004000                            10          ORG    $4000   
00004000                            11  ****************************************************                 
00004000                            12                   ;NOP
00004000                            13                   
00004000                            14                   ;MOVE  #3,D3
00004000                            15                   ;MOVEA #$00000047,A0 ;should be data
00004000                            16                   
00004000                            17                   
00004000  48E5 1000                 18                   MOVEM.L D3,-(A5)
00004004                            19                   ;JMP    pa      ;should be data (not wokring)
00004004                            20                   
00004004                            21                   
00004004                            22                   ;ADD   D2,D3 
00004004                            23                   ;ADDX   -(A2),-(A3)    ;should be data (not working)
00004004                            24                   ;ADDA   D3,A3          ;should be data
00004004                            25                   
00004004                            26                   ;SUB    D2,D3 
00004004                            27                   ;SUBX   -(A2),-(A3)    ;should be data (not working)
00004004                            28                   ;SUBA   D3,A3          ;should be data
00004004                            29                   
00004004                            30                   
00004004                            31                   ;MULS  D2,D3 
00004004                            32                   ;MULU  D2,D3           ;should be data (not working)
00004004                            33                   
00004004                            34                   
00004004                            35                   ;DIVU  D2,D3 
00004004                            36                   ;DIVS  D2,D3           ;should be data
00004004                            37                   
00004004                            38                   ;LEA   $2000,A2  
00004004                            39                   
00004004                            40                   
00004004                            41                   ;AND   #3,D3 
00004004                            42                   ;EXG   D2,D3           ;should be data (not working)
00004004                            43                   
00004004                            44                   
00004004                            45                   ;NOT   D3
00004004                            46                   ;MOVE  D3,SR           ;should be data (not working)
00004004                            47  
00004004                            48                   
00004004                            49                   
00004004                            50                   ;LSL   #2,D3 
00004004                            51                   
00004004                            52                   
00004004                            53                   ;ASL   #2,D3 
00004004                            54                   
00004004                            55                   
00004004                            56                   ;LSL   (A0)+ 
00004004                            57                   
00004004                            58                   
00004004                            59                   ;ASL   (A0)+ 
00004004                            60                   
00004004                            61                   
00004004                            62                   ;BGT   pa
00004004                            63  pa
00004004                            64                  ;BLE   pi
00004004                            65  pi
00004004                            66                  ;BEQ   pu
00004004                            67  pu
00004004                            68  ;                BRA   pe            
00004004                            69  po
00004004                            70  ;                RTS
00004004                            71  pe
00004004                            72  ;                JSR   po   
00004004                            73  
00004004                            74                  
00004004                            75                  
00004004                            76  ****************************************************   
00001000                            77          ORG    $1000   
00001000                            78  START:                  ; first instruction of program   
00001000                            79  
00001000                            80  ;inputs for testing are  here:    
00001000  43F9 00001696             81                  LEA     WELMSG,A1   ;Display intro message
00001006  103C 000E                 82                  MOVE.B  #14,D0 
0000100A  4E4F                      83                  TRAP    #15
0000100C                            84                  
0000100C                            85  
0000100C                            86  INPUT1                                   
0000100C  43F9 00001877             87                  LEA     MSGINPUT ,A1     ;Ask for first input
00001012  103C 000E                 88                  MOVE.B  #14,D0          
00001016  4E4F                      89                  TRAP    #15       
00001018                            90                  
00001018  43F9 00009000             91                  LEA     $9000,A1
0000101E                            92                  
0000101E  303C 0002                 93                  MOVE.W  #2,D0           ;had to specify or it wont work properly
00001022  4E4F                      94                  TRAP    #15    
00001024  6000 001E                 95                  BRA     FOR_LOOP 
00001028                            96                  
00001028  43F9 0000189C             97  INPUT2          LEA     MSGINPUT2,A1    ;Ask for second input
0000102E  103C 000E                 98                  MOVE.B  #14,D0
00001032  4E4F                      99                  TRAP    #15
00001034                           100                  
00001034  43F9 00009000            101                  LEA     $9000,A1
0000103A                           102                  
0000103A  303C 0002                103                  MOVE.W  #2,D0
0000103E  4E4F                     104                  TRAP    #15
00001040  6000 0002                105                  BRA     FOR_LOOP
00001044                           106                                
00001044  B601                     107  FOR_LOOP        CMP.B   D1,D3
00001046  6700 0104                108                  BEQ     CHECKNEG
0000104A  4246                     109                  CLR.W   D6               
0000104C  DC19                     110                  ADD.B  (A1)+,D6
0000104E  BC3C 0030                111                  CMP.B   #$30,D6
00001052  6D00 00BC                112                  BLT     BADINPUT
00001056  BC3C 0039                113                  CMP.B   #$39,D6
0000105A  6E00 0024                114                  BGT     CHECKINPUTAGAIN 
0000105E                           115  CONTLOOP
0000105E  4EB9 0000113A            116                  JSR     AtoH
00001064  0C03 0000                117                  CMPI.B  #0,D3
00001068  6600 003E                118                  BNE     OTHERVAL
0000106C  0C07 0000                119                  CMPI.B  #0,D7   
00001070  6D00 000A                120                  BLT     SUBSTRACTVAL                 
00001074  D806                     121                  ADD.B   D6,D4 ;first value
00001076                           122  RETLOOP                
00001076  5243                     123                  ADD.W   #1,D3
00001078  60CA                     124                  BRA     FOR_LOOP
0000107A                           125                  
0000107A                           126  RETLOOPNEG                
0000107A                           127                  ;ADD.W   #1,D3
0000107A                           128                  ;ADD.W   #1,D7
0000107A  60C8                     129                  BRA     FOR_LOOP
0000107C                           130  
0000107C                           131  
0000107C                           132  SUBSTRACTVAL                 
0000107C  9846                     133                  SUB.W   D6,D4
0000107E  60F6                     134                  BRA     RETLOOP
00001080                           135                  
00001080                           136  CHECKINPUTAGAIN 
00001080  BC3C 0046                137                  CMP.B   #$46,D6
00001084  6E00 000C                138                  BGT     LOWERCASE
00001088  BC3C 0041                139                  CMP.B   #$41,D6
0000108C  6D00 0082                140                  BLT     BADINPUT
00001090  60CC                     141                  BRA     CONTLOOP
00001092                           142                  
00001092                           143  LOWERCASE
00001092  BC3C 0061                144                  CMP.B   #$61,D6
00001096  6D00 0078                145                  BLT     BADINPUT
0000109A  BC3C 0066                146                  CMP.B   #$66,D6
0000109E  6E00 0070                147                  BGT     BADINPUT
000010A2  0406 0020                148                  SUBI.B  #$20,D6
000010A6  60B6                     149                  BRA     CONTLOOP
000010A8                           150  
000010A8                           151                  
000010A8                           152  OTHERVAL
000010A8  E984                     153                  ASL.L   #4,D4 ;u r overflowing, this is the last digit u can add
000010AA  6900 0028                154                  BVS     OVERFLOWINPUTCHECK ;u r overflowing, this is the last digit u can add
000010AE  0C07 0000                155                  CMPI.B  #0,D7
000010B2  6600 0032                156                  BNE     OVERFLOWINPUT
000010B6  D846                     157                  ADD.W   D6,D4           
000010B8  5243                     158                  ADD.W   #1,D3
000010BA  6088                     159                  BRA     FOR_LOOP
000010BC                           160                  
000010BC                           161  SUBSTRACTVALOTHER
000010BC  9846                     162                  SUB.W   D6,D4
000010BE  6A00 0008                163                  BPL     OVERFLOWDETECT  
000010C2  5243                     164                  ADD.W   #1,D3
000010C4  6000 FF7E                165                  BRA     FOR_LOOP
000010C8                           166    
000010C8                           167  OVERFLOWDETECT
000010C8  2A7C 00000001            168                  MOVE.L  #1,A5    
000010CE  5243                     169                  ADD.W   #1,D3
000010D0  6000 FF72                170                  BRA     FOR_LOOP
000010D4                           171  
000010D4                           172  OVERFLOWINPUTCHECK
000010D4  0C07 0000                173                  CMPI.B  #0,D7
000010D8  6600 000C                174                  BNE     OVERFLOWINPUT
000010DC  5207                     175                  ADDI.B  #1,D7
000010DE  D846                     176                  ADD.W   D6,D4                
000010E0  5243                     177                  ADD.W   #1,D3
000010E2  6000 FF60                178                  BRA     FOR_LOOP
000010E6                           179  
000010E6                           180  OVERFLOWINPUT                
000010E6  43F9 000018C2            181                  LEA     BADVALUE,A1     
000010EC  303C 000D                182                  MOVE.W  #13,D0          
000010F0  4E4F                     183                  TRAP    #15 
000010F2  4287                     184                  CLR.L   D7
000010F4  4286                     185                  CLR.L   D6
000010F6  4285                     186                  CLR.L   D5
000010F8  4284                     187                  CLR.L   D4
000010FA  4283                     188                  CLR.L   D3
000010FC  4282                     189                  CLR.L   D2
000010FE  4281                     190                  CLR.L   D1
00001100  4280                     191                  CLR.L   D0
00001102  B5FC 00000000            192                  CMP.L   #$0,A2
00001108  6700 FF02                193                  BEQ     INPUT1 
0000110C  6000 FF1A                194                  BRA     INPUT2    
00001110                           195  
00001110                           196  BADINPUT                
00001110  43F9 000018F2            197                  LEA     BADCHARACTER,A1     
00001116  303C 000D                198                  MOVE.W  #13,D0          
0000111A  4E4F                     199                  TRAP    #15 
0000111C  4287                     200                  CLR.L   D7
0000111E  4286                     201                  CLR.L   D6
00001120  4285                     202                  CLR.L   D5
00001122  4284                     203                  CLR.L   D4
00001124  4283                     204                  CLR.L   D3
00001126  4282                     205                  CLR.L   D2
00001128  4281                     206                  CLR.L   D1
0000112A  4280                     207                  CLR.L   D0
0000112C  B5FC 00000000            208                  CMP.L   #$0,A2
00001132  6700 FED8                209                  BEQ     INPUT1 
00001136  6000 FEF0                210                  BRA     INPUT2                                 
0000113A                           211              
0000113A                           212  AtoH
0000113A  0C06 0030                213                  CMPI.B  #$30,D6
0000113E  6D60                     214                  BLT.B   ERR
00001140  BC3C 0039                215                  CMP.B   #$39,D6
00001144  6E68                     216                  BGT.B   ALPHA
00001146  0406 0030                217                  SUBI.B  #$30,D6
0000114A  4E75                     218                  RTS
0000114C                           219                  
0000114C                           220  CHECKNEG                
0000114C  0C05 0001                221                  CMPI.B  #1,D5
00001150  6D00 0002                222                  BLT     RESET
00001154                           223                          
00001154                           224  RESET
00001154  4246                     225                  CLR.W   D6
00001156  4245                     226                  CLR.W   D5
00001158  4243                     227                  CLR.W   D3
0000115A  4247                     228                  CLR.W   D7
0000115C                           229                  
0000115C  0C44 0000                230                  CMPI    #0,D4
00001160  6700 0014                231                  BEQ     INVALIDLOWVALUE 
00001164                           232                  
00001164  5242                     233                  ADD.W   #1,D2
00001166  0C02 0000                234                  CMPI.B  #0,D2
0000116A  0C02 0002                235                  CMPI.B  #2,D2
0000116E  6700 0050                236                  BEQ     SAVESECOND
00001172                           237                  ;MOVE.W  D4,(A4)+
00001172  6000 004C                238                  BRA     SAVESECOND
00001176                           239                  
00001176                           240  INVALIDLOWVALUE 
00001176  43F9 00001962            241                  LEA     VALUETOOLOW,A1     
0000117C  303C 000D                242                  MOVE.W  #13,D0          
00001180  4E4F                     243                  TRAP    #15 
00001182  4287                     244                  CLR.L   D7
00001184  4286                     245                  CLR.L   D6
00001186  4285                     246                  CLR.L   D5
00001188  4284                     247                  CLR.L   D4
0000118A  4283                     248                  CLR.L   D3
0000118C  4282                     249                  CLR.L   D2
0000118E  4281                     250                  CLR.L   D1
00001190  4280                     251                  CLR.L   D0
00001192  B5FC 00000000            252                  CMP.L   #$0,A2
00001198  6700 FE72                253                  BEQ     INPUT1 
0000119C  6000 FE8A                254                  BRA     INPUT2             
000011A0                           255                  
000011A0                           256                  
000011A0                           257  ERR             
000011A0  0C06 002D                258                  CMPI.B #$2D,D6
000011A4  6700 0004                259                  BEQ    NEGVALUE
000011A8  4E75                     260                  RTS
000011AA                           261                  
000011AA                           262  NEGVALUE
000011AA  5245                     263                  ADD.W   #1,D5
000011AC  4E75                     264                  RTS
000011AE                           265  
000011AE                           266  
000011AE                           267                  
000011AE                           268  ALPHA
000011AE  0C06 0041                269                  CMPI.B #$41,D6
000011B2  6DEC                     270                  BLT.B  ERR
000011B4  0C06 0046                271                  CMPI.B #$46,D6
000011B8  6EE6                     272                  BGT.B  ERR
000011BA  0406 0037                273                  SUBI.B #$37,D6
000011BE  4E75                     274                  RTS
000011C0                           275                  
000011C0                           276  SAVESECOND
000011C0  4241                     277                  CLR.W   D1
000011C2  4243                     278                  CLR.W   D3
000011C4  2404                     279                  MOVE.L  D4,D2
000011C6  4284                     280                  CLR.L   D4
000011C8  4240                     281                  CLR.W   D0
000011CA                           282                  ;CLR.W   D4
000011CA  4246                     283                  CLR.W   D6
000011CC                           284                  ;BRA     CHECKODD
000011CC  0802 0000                285                  BTST.L  #0,D2
000011D0  6700 002C                286                  BEQ     CHECKLOW ;even values will always have their first bit 0. 
000011D4                           287                  
000011D4                           288                  ;if not report error to higher ups. 
000011D4  43F9 00001A7D            289                  LEA     EVENINPUTMSG,A1     
000011DA  303C 000D                290                  MOVE.W  #13,D0          
000011DE  4E4F                     291                  TRAP    #15 
000011E0  4287                     292                  CLR.L   D7
000011E2  4286                     293                  CLR.L   D6
000011E4  4285                     294                  CLR.L   D5
000011E6  4284                     295                  CLR.L   D4
000011E8  4283                     296                  CLR.L   D3
000011EA  4282                     297                  CLR.L   D2
000011EC  4281                     298                  CLR.L   D1
000011EE  4280                     299                  CLR.L   D0
000011F0  B5FC 00000000            300                  CMP.L   #$0,A2
000011F6  6700 FE14                301                  BEQ     INPUT1 
000011FA  6000 FE2C                302                  BRA     INPUT2                
000011FE                           303                  
000011FE                           304  CHECKLOW
000011FE  B5FC 00000000            305                  CMP.L   #$0,A2
00001204  6600 0034                306                  BNE     FINISHSAVING
00001208  2442                     307                  MOVE.L  D2,A2
0000120A  6000 FE1C                308                  BRA     INPUT2 
0000120E                           309                  
0000120E                           310  BADADDRESSORDER
0000120E  43F9 0000191A            311                  LEA     BADADDRESS,A1     
00001214  303C 000D                312                  MOVE.W  #13,D0          
00001218  4E4F                     313                  TRAP    #15 
0000121A  4287                     314                  CLR.L   D7
0000121C  4286                     315                  CLR.L   D6
0000121E  4285                     316                  CLR.L   D5
00001220  4284                     317                  CLR.L   D4
00001222  4283                     318                  CLR.L   D3
00001224  4282                     319                  CLR.L   D2
00001226  4281                     320                  CLR.L   D1
00001228  4280                     321                  CLR.L   D0
0000122A  247C 00000000            322                  MOVE.L  #$0,A2
00001230  267C 00000000            323                  MOVE.L  #$0,A3
00001236  6700 FDD4                324                  BEQ     INPUT1            
0000123A                           325                  
0000123A                           326   
0000123A                           327  FINISHSAVING
0000123A  2642                     328                  MOVE.L  D2,A3
0000123C  4282                     329                  CLR.L   D2
0000123E  B5CB                     330                  CMP.L   A3, A2 ;A2 > A3, then an error should appear
00001240  6ECC                     331                  BGT     BADADDRESSORDER
00001242                           332  ;by this point we have A3 holding destinationa and A2 holding origin. all data registers should be cleared at this point. the following address registers
00001242                           333  ;are not clear: A1, A2 (src), A3 (dest), A7 (stack pointer)
00001242                           334  
00001242                           335  ;send assembly language to D2
00001242                           336  FEEDOPCODE
00001242  341A                     337                  MOVE.W      (A2)+,D2
00001244                           338                  ;movem everything except D2, bcs u need it. 
00001244  5241                     339                  ADDI.W      #1,D1
00001246  48E7 5F7E                340                  MOVEM.L     D1/D3-D7/A1-A6,-(sp) 
0000124A  6000 0002                341                  BRA         OPCODETIME
0000124E                           342  
0000124E                           343  ;OPCODE, with output shoved in A5
0000124E                           344  ******************************************************************************************************************
0000124E                           345  
0000124E  3602                     346  OPCODETIME      MOVE.W      D2,D3                 ;this wasnt here. had to add it other wise there will be nothing in D3
00001250                           347                  *^unclear what this does, it just clears D3 - Rio
00001250                           348                  
00001250  0C42 4E71                349                  CMPI.W      #$4E71,D2        ;SPECIAL CASE FOR NOOP
00001254  6700 0318                350                  BEQ         NOOPBRANCH
00001258  0C42 4E75                351                  CMPI.W      #$4E75,D2        ;SPECIAL CASE FOR RTS
0000125C  6700 0320                352                  BEQ         RTSBRANCH
00001260                           353                  
00001260                           354                  ;then we use D3 to get the first four hex values
00001260  E04B                     355                  LSR.W       #8,D3
00001262  E84B                     356                  LSR.W       #4,D3       ;AAAA xxxx xxxx xxxx
00001264                           357                  
00001264                           358                  ;OPCODE GENERAL GROUP
00001264  0C43 0004                359                  CMPI.W      #%0100,D3
00001268  6700 003E                360                  BEQ         OPCODEGROUP1
0000126C  0C43 0006                361                  CMPI.W      #%0110,D3
00001270  6700 00CE                362                  BEQ         OPCODEGROUP2
00001274  0C43 0008                363                  CMPI.W      #%1000,D3
00001278  6700 0138                364                  BEQ         OPCODEGROUP3
0000127C  0C43 0009                365                  CMPI.W      #%1001,D3
00001280  6700 0152                366                  BEQ         OPCODEGROUP4
00001284  0C43 000C                367                  CMPI.W      #%1100,D3
00001288  6700 0194                368                  BEQ         OPCODEGROUP5
0000128C  0C43 000D                369                  CMPI.W      #%1101,D3
00001290  6700 01F2                370                  BEQ         OPCODEGROUP6
00001294  0C43 000E                371                  CMPI.W      #%1110,D3
00001298  6700 0228                372                  BEQ         OPCODEGROUP7
0000129C  0C43 0003                373                  CMPI.W      #3,D3
000012A0  6700 02A6                374                  BEQ         OPCODEGROUP8
000012A4  6000 02E8                375                  BRA         INVALIDBRANCH
000012A8                           376                  
000012A8  4EB9 0000159E            377  OPCODEGROUP1    JSR         NEXTFOURHEX
000012AE  0C43 0008                378                  CMPI.W      #%1000,D3
000012B2  6700 0026                379                  BEQ         MOVEMBRANCH 
000012B6  0C43 000C                380                  CMPI.W      #%1100,D3
000012BA  6700 001E                381                  BEQ         MOVEMBRANCH 
000012BE  0C43 0006                382                  CMPI.W      #%0110,D3
000012C2  6700 0028                383                  BEQ         NOTBRANCH   
000012C6  0C43 000E                384                  CMPI.W      #%1110,D3
000012CA  6700 003E                385                  BEQ         JSRMBRANCH  ;got to double check for this branch. too much unncertainty
000012CE  0803 0000                386                  BTST.L      #0,D3 ;OOGABOOGA
000012D2  6600 0054                387                  BNE         LEABRANCH       ;z == 0 if bit is 1 AND got to double check for this branch. too much unncertainty
000012D6  6000 02B6                388                  BRA         INVALIDBRANCH
000012DA                           389                  
000012DA  4283                     390  MOVEMBRANCH     CLR.L   D3
000012DC  43F9 00001A08            391                  LEA     MOVEMMSG,A1
000012E2  103C 000E                392                  MOVE.B  #14,D0
000012E6  4E4F                     393                  TRAP    #15
000012E8                           394  *                
000012E8                           395  *                *MOVEM EA
000012E8                           396  *                CLR.L   D3
000012E8                           397  *                MOVE.W  D2,D3
000012E8                           398  *                AND.W   #%0011000000000000,D3 ;size
000012E8                           399  *                LSR.W   #8
000012E8                           400  *                LSR.W   #
000012E8                           401  *                CMPI.B  #1,D3
000012E8                           402  *                BEQ     OUTPUTLONG
000012E8                           403  *                BNE     OUTPUTWORD
000012E8                           404  *                                
000012E8                           405  *                CLR     D4
000012E8                           406  *                MOVE.W  D2,D5 
000012E8                           407  *                CLR.L   D3
000012E8                           408  *                AND.W   #%0000000000111000,D3   ;src mode  
000012E8                           409  *                
000012E8                           410  *                CLR.L   D3
000012E8                           411  *                MOVE.W  D2,D3 
000012E8                           412  *                AND.W   #%0000000000000111,D3   ;src reg 
000012E8                           413  *
000012E8                           414  *
000012E8                           415  *
000012E8                           416  *                
000012E8                           417  *                CLR.L   D4               
000012E8                           418  *                MOVE.W  D2,D4 
000012E8                           419  *                AND.W   #%0000000111000000,D3   ;dest mode
000012E8                           420  *                
000012E8                           421  *                CLR.L   D3
000012E8                           422  *                MOVE.W  D2,D3 
000012E8                           423  *                MOVE.W  D2,D3  
000012E8                           424  *                AND.W   #%0000111000000000,D3   ;destreg
000012E8                           425  *    
000012E8                           426  *                CLR.L   D4
000012E8                           427  *                CLR.L   D3
000012E8                           428                 
000012E8  6000 0302                429                  BRA     NEXTIO
000012EC                           430                                  
000012EC                           431  NOTBRANCH       ;check 7 and 8 and make sure they are  not 11 from 7 and 8
000012EC  4283                     432                  CLR.L   D3
000012EE  3602                     433                  MOVE.W  D2,D3
000012F0  ED4B                     434                  LSL     #6,D3
000012F2  0C43 011B                435                  CMPI.W  #%0100011011,D3
000012F6  6700 0296                436                  BEQ     INVALIDBRANCH
000012FA  43F9 00001A1F            437                  LEA     NOTMSG,A1
00001300  103C 000E                438                  MOVE.B  #14,D0
00001304  4E4F                     439                  TRAP    #15
00001306  6000 02E4                440                  BRA     NEXTIO
0000130A                           441                  
0000130A                           442  JSRMBRANCH      ;check 7 and 8 and make sure they are  not 11 from 7 and 8
0000130A  4283                     443                  CLR.L   D3
0000130C  3602                     444                  MOVE.W  D2,D3
0000130E  ED4B                     445                  LSL     #6,D3
00001310  0C43 013A                446                  CMPI.W  #%0100111010,D3
00001314  6700 0278                447                  BEQ     INVALIDBRANCH
00001318  43F9 00001A25            448                  LEA     JSRMSG,A1
0000131E  103C 000E                449                  MOVE.B  #14,D0
00001322  4E4F                     450                  TRAP    #15
00001324  6000 02C6                451                  BRA     NEXTIO
00001328                           452  
00001328                           453  LEABRANCH      ;check 7 and make sure its set to 1
00001328  0802 0007                454                  BTST.L  #7,D2
0000132C  6700 0260                455                  BEQ     INVALIDBRANCH   ;z == 1 if bit is 0
00001330  43F9 00001A19            456                  LEA     LEAMSG,A1
00001336  103C 000E                457                  MOVE.B  #14,D0
0000133A  4E4F                     458                  TRAP    #15
0000133C  6000 02AE                459                  BRA     NEXTIO
00001340                           460                  
00001340  4EB9 0000159E            461  OPCODEGROUP2    JSR         NEXTFOURHEX  
00001346  0C43 0000                462                  CMPI.W      #%0000,D3
0000134A  6700 001E                463                  BEQ         BRABRANCH   
0000134E  0C43 0007                464                  CMPI.W      #%0111,D3
00001352  6700 002E                465                  BEQ         BEQBRANCH   
00001356  0C43 000E                466                  CMPI.W      #%1110,D3
0000135A  6700 0036                467                  BEQ         BGTBRANCH
0000135E  0C43 000F                468                  CMPI.W      #%1111,D3
00001362  6700 003E                469                  BEQ         BLEBRANCH
00001366  6000 0226                470                  BRA         INVALIDBRANCH
0000136A                           471                  
0000136A                           472  BRABRANCH      ;check 9 and make sure its set to 0
0000136A  0802 0009                473                  BTST.L  #9,D2
0000136E  6600 021E                474                  BNE     INVALIDBRANCH   ;z == 0 if bit is 1
00001372  43F9 00001A3D            475                  LEA     BRAMSG,A1
00001378  103C 000E                476                  MOVE.B  #14,D0
0000137C  4E4F                     477                  TRAP    #15
0000137E  6000 026C                478                  BRA     NEXTIO
00001382                           479                  
00001382                           480  BEQBRANCH
00001382  43F9 00001A37            481                  LEA     BEQMSG,A1
00001388  103C 000E                482                  MOVE.B  #14,D0
0000138C  4E4F                     483                  TRAP    #15
0000138E  6000 025C                484                  BRA     NEXTIO
00001392                           485                  
00001392                           486  BGTBRANCH
00001392  43F9 00001A2B            487                  LEA     BGTMSG,A1
00001398  103C 000E                488                  MOVE.B  #14,D0
0000139C  4E4F                     489                  TRAP    #15
0000139E  6000 024C                490                  BRA     NEXTIO
000013A2                           491  BLEBRANCH
000013A2  43F9 00001A31            492                  LEA     BLEMSG,A1
000013A8  103C 000E                493                  MOVE.B  #14,D0
000013AC  4E4F                     494                  TRAP    #15
000013AE  6000 023C                495                  BRA     NEXTIO
000013B2                           496                  
000013B2                           497  OPCODEGROUP3    
000013B2  4283                     498                  CLR.L   D3
000013B4  3602                     499                  MOVE.W  D2,D3
000013B6  EC4B                     500                  LSR.W   #6,D3
000013B8  C67C 0007                501                  AND.W   #%0000000111,D3
000013BC  0C43 0007                502                  CMPI.W  #7,D3
000013C0  6700 01CC                503                  BEQ     INVALIDBRANCH   
000013C4  43F9 00001A43            504                  LEA     DIVUMSG,A1
000013CA  103C 000E                505                  MOVE.B  #14,D0
000013CE  4E4F                     506                  TRAP    #15
000013D0  6000 021A                507                  BRA     NEXTIO
000013D4                           508                  
000013D4                           509  OPCODEGROUP4    ;check 7 to 8 (size) cannot be 11 AND if direction is 1 (8th bit), then 4th and 5th bit cannot be 0
000013D4  4283                     510                  CLR.L   D3
000013D6  0802 0006                511                  BTST    #6,D2 ;if set to 1, not sub
000013DA  6600 000E                512                  BNE     TESTSUBBRANCH   ;z == 0 if bit is 1
000013DE  0802 0008                513                  BTST    #8,D2
000013E2  6600 0006                514                  BNE     TESTSUBBRANCH   
000013E6  6000 000E                515                  BRA     TESTSUBBRANCH2  
000013EA                           516     
000013EA                           517  TESTSUBBRANCH
000013EA  0802 0007                518                  BTST    #7,D2 ;if set to 1, not sub
000013EE  6600 019E                519                  BNE     INVALIDBRANCH   ;z == 0 if bit is 1
000013F2  6000 0002                520                  BRA     TESTSUBBRANCH2  
000013F6                           521  
000013F6                           522               
000013F6                           523  TESTSUBBRANCH2  ;check if 5th and 4th bit is equal to zero. if so, it is invalid
000013F6  0802 0005                524                  BTST    #5,D2 ;if set to 1, not sub
000013FA  6600 0006                525                  BNE     SUBBRANCH3 ;z == 0 if bit is 1
000013FE  6000 000E                526                  BRA     SUBBRANCH
00001402                           527                  
00001402                           528  SUBBRANCH3 
00001402  0802 0004                529                  BTST    #4,D2 ;if set to 1, not sub
00001406  6700 0186                530                  BEQ     INVALIDBRANCH   ;z == 1 if bit is 0 
0000140A  6000 0002                531                  BRA     SUBBRANCH
0000140E                           532  
0000140E                           533  SUBBRANCH
0000140E  43F9 00001A4B            534                  LEA     SUBMSG,A1
00001414  103C 000E                535                  MOVE.B  #14,D0
00001418  4E4F                     536                  TRAP    #15
0000141A  6000 01D0                537                  BRA     NEXTIO
0000141E                           538  
0000141E  4EB9 0000159E            539  OPCODEGROUP5    JSR     NEXTFOURHEX
00001424  4EB9 000015AA            540                  JSR     NEXTNEXTFOURHEX 
0000142A  0C43 000E                541                  CMPI.W  #14,D3          
0000142E  6F00 0006                542                  BLE     MULSTEST      ;got to double check for this branch. too much unncertainty. MAKE SURE ITS NOT ABCD AND EXG.6,7,8 must be 111
00001432  6000 002E                543                  BRA     ANDBRANCH       ;MUST CHECK (S cannot be 11) AND IF(D is one, must be Dn. MAKE SURE ITS NOT MULU
00001436                           544  
00001436                           545  MULSTEST      
00001436  4283                     546                  CLR.L   D3
00001438  3602                     547                  MOVE.W  D2,D3
0000143A  EC4B                     548                  LSR.W   #6,D3
0000143C                           549  MULSLOOP
0000143C  0C04 0003                550                  CMPI.B  #3,D4
00001440  6700 0010                551                  BEQ     MULSBRANCH
00001444  E34B                     552                  LSL     #1,D3
00001446  0803 0000                553                  BTST    #0,D3
0000144A  6600 0142                554                  BNE     INVALIDBRANCH   ;z == 1 if bit is 0. if bit is 0, then it cnnot be MULS. 
0000144E  5244                     555                  ADDI    #1,D4
00001450  60EA                     556                  BRA     MULSLOOP
00001452                           557                  
00001452  43F9 00001A52            558  MULSBRANCH      LEA     MULSMSG,A1
00001458  103C 000E                559                  MOVE.B  #14,D0
0000145C  4E4F                     560                  TRAP    #15
0000145E  6000 018C                561                  BRA     NEXTIO
00001462                           562  
00001462                           563  ANDBRANCH                 
00001462                           564                  ;8,7,6 cannot be 011
00001462  4283                     565                  CLR.L   D3
00001464  3602                     566                  MOVE.W  D2,D3
00001466  EC4B                     567                  LSR.W   #6,D3
00001468  C67C 0111                568                  AND.W   #$0000000111,D3
0000146C  B67C 0007                569                  CMP.W   #%111,D3
00001470  6700 011C                570                  BEQ     INVALIDBRANCH
00001474  43F9 00001A5A            571                  LEA     ANDMSG,A1
0000147A  103C 000E                572                  MOVE.B  #14,D0
0000147E  4E4F                     573                  TRAP    #15
00001480  6000 016A                574                  BRA     NEXTIO 
00001484                           575                  
00001484                           576  
00001484                           577  OPCODEGROUP6    ;first check size
00001484  4243                     578                  CLR.W   D3
00001486  3602                     579                  MOVE.W  D2,D3
00001488  EC4B                     580                  LSR.W   #6,D3
0000148A  C67C 0003                581                  AND.W   #%0000000011,D3
0000148E  B67C 0003                582                  CMP.W   #3,D3
00001492  6700 00FA                583                  BEQ     INVALIDBRANCH
00001496  4243                     584                  CLR.W   D3
00001498  3602                     585                  MOVE.W  D2,D3                ;then check direction. if 1, check 4th and 5th bit. if they are both 0, its invalid
0000149A  0803 0008                586                  BTST    #8,D3
0000149E                           587                  
0000149E                           588  PRINTADD
0000149E  6700 0012                589                  BEQ     TESTADD   ;z == 0 if bit is 1. if bit is 1, then may be invalid                
000014A2  43F9 00001A61            590                  LEA     ADDMSG,A1
000014A8  103C 000E                591                  MOVE.B  #14,D0
000014AC  4E4F                     592                  TRAP    #15
000014AE  6000 013C                593                  BRA     NEXTIO
000014B2                           594                  
000014B2  E94B                     595  TESTADD         LSL.W   #4,D3
000014B4  C67C 0030                596                  AND.W   #%00000000000110000,D3
000014B8  B67C 0000                597                  CMP.W   #0,D3
000014BC  6700 00D0                598                  BEQ     INVALIDBRANCH
000014C0  60DC                     599                  BRA     PRINTADD
000014C2                           600                  
000014C2                           601  
000014C2                           602  
000014C2  4EB9 0000159E            603  OPCODEGROUP7    JSR     NEXTFOURHEX
000014C8                           604                  ;by this point we cleared D3 and have have the next four hex value in D3 
000014C8  0C43 0001                605                  CMPI.W  #1,D3
000014CC  6F00 001E                606                  BLE     ASLREGBRANCH
000014D0  0C43 0003                607                  CMPI.W  #3,D3
000014D4  6F00 0026                608                  BLE     LSLREGBRANCH
000014D8  4283                     609                  CLR.L   D3
000014DA  3602                     610                  MOVE.W  D2,D3
000014DC  0803 0003                611                  BTST    #3,D3
000014E0  6700 002A                612                  BEQ     ASLMEMBRANCH            ;z == 1 if bit is 0
000014E4  6600 0044                613                  BNE     LSLMEMBRANCH            ;z == 0 if bit is 1 
000014E8  6000 00A4                614                  BRA     INVALIDBRANCH
000014EC                           615                  
000014EC  43F9 00001A6F            616  ASLREGBRANCH    LEA     ASLMSG,A1
000014F2  103C 000E                617                  MOVE.B  #14,D0
000014F6  4E4F                     618                  TRAP    #15
000014F8  6000 00F2                619                  BRA     NEXTIO                
000014FC                           620  
000014FC  43F9 00001A68            621  LSLREGBRANCH    LEA     LSLMSG,A1
00001502  103C 000E                622                  MOVE.B  #14,D0
00001506  4E4F                     623                  TRAP    #15
00001508  6000 00E2                624                  BRA     NEXTIO 
0000150C                           625  
0000150C                           626  ASLMEMBRANCH    ;have to check size
0000150C  ED4B                     627                  LSL.W   #6,D3
0000150E  C67C 0011                628                  AND.W   #$0000000011,D3
00001512  0C43 0003                629                  CMPI.W  #3,D3
00001516  6700 0076                630                  BEQ     INVALIDBRANCH
0000151A  43F9 00001A6F            631                  LEA     ASLMSG,A1
00001520  103C 000E                632                  MOVE.B  #14,D0
00001524  4E4F                     633                  TRAP    #15
00001526  6000 00C4                634                  BRA     NEXTIO 
0000152A                           635  
0000152A                           636  LSLMEMBRANCH    ;have to check size
0000152A  ED4B                     637                  LSL.W   #6,D3
0000152C  C67C 0011                638                  AND.W   #$0000000011,D3
00001530  0C43 0003                639                  CMPI.W  #3,D3
00001534  6700 0058                640                  BEQ     INVALIDBRANCH
00001538  43F9 00001A68            641                  LEA     LSLMSG,A1
0000153E  103C 000E                642                  MOVE.B  #14,D0
00001542  4E4F                     643                  TRAP    #15
00001544  6000 00A6                644                  BRA     NEXTIO      
00001548                           645  
00001548                           646  OPCODEGROUP8    ;check dest mode does not equal to 001
00001548  4283                     647                  CLR.L   D3
0000154A  3602                     648                  MOVE.W  D2,D3
0000154C  EC4B                     649                  LSR.W   #6,D3
0000154E  C67C 000F                650                  AND.W   #$00F,D3
00001552  C63C 0007                651                  AND.B   #%0111,D3
00001556  B67C 0001                652                  CMP.W   #%001,D3
0000155A  6700 0032                653                  BEQ     INVALIDBRANCH
0000155E  43F9 00001A11            654                  LEA     MOVEMSG,A1
00001564  103C 000E                655                  MOVE.B  #14,D0
00001568  4E4F                     656                  TRAP    #15
0000156A  6000 0080                657                  BRA     NEXTIO                
0000156E                           658  
0000156E  43F9 000019FB            659  NOOPBRANCH      LEA     NOOPMSG,A1      
00001574  103C 000E                660                  MOVE.B  #14,D0
00001578  4E4F                     661                  TRAP    #15
0000157A  6000 0070                662                  BRA     NEXTIO
0000157E                           663  
0000157E  43F9 00001A02            664  RTSBRANCH       LEA     RTSMSG,A1
00001584  103C 000E                665                  MOVE.B  #14,D0
00001588  4E4F                     666                  TRAP    #15
0000158A  6000 0060                667                  BRA     NEXTIO
0000158E                           668                  
0000158E  43F9 00001A76            669  INVALIDBRANCH   LEA     INVALIDMSG,A1
00001594  103C 000E                670                  MOVE.B  #14,D0
00001598  4E4F                     671                  TRAP    #15
0000159A  6000 0050                672                  BRA     NEXTIO
0000159E                           673                  
0000159E  4283                     674  NEXTFOURHEX     CLR.L   D3
000015A0  3602                     675                  MOVE.W  D2,D3
000015A2  E04B                     676                  LSR.W   #8,D3
000015A4  C67C 000F                677                  AND.W   #%00001111,D3 ;0000 AAAA [XXXX XXXX]
000015A8  4E75                     678                  RTS    
000015AA                           679  
000015AA  4283                     680  NEXTNEXTFOURHEX CLR.L   D3  
000015AC  3602                     681                  MOVE.W  D2,D3  
000015AE  C67C 00F0                682                  AND.W   #$00F0,D3  
000015B2  E84B                     683                  LSR.W   #4,D3   ;0000 0000 AAAA [XXXX]
000015B4  4E75                     684                  RTS      
000015B6                           685  
000015B6                           686  ;EA                
000015B6                           687  ******************************************************************************************************************
000015B6                           688  
000015B6                           689  *FORMAT1         
000015B6                           690  *FORMAT2
000015B6                           691  *FORMAT3
000015B6                           692  *FORMAT4
000015B6                           693  *FORMAT5
000015B6                           694  *FORMAT6
000015B6                           695  *FORMAT7
000015B6                           696  *FORMAT8
000015B6                           697  *FORMAT9
000015B6                           698  *FORMAT10
000015B6                           699  *FORMAT11
000015B6  3602                     700                  MOVE.W  D2,D3
000015B8  4EB9 000015E4            701                  JSR     GETSIZEBIT      *check size
000015BE  B63C 0000                702                  CMP.B   #%0,D3          *is it word?
000015C2  6700 0014                703                  BEQ     ISWORD          
000015C6  B63C 0001                704                  CMP.B   #%1,D3          *is it long?
000015CA  6700 0012                705                  BEQ     ISLONG          
000015CE  1E3C 0011                706                  MOVE.B  #$11,D7
000015D2  4E75                     707                  RTS
000015D4                           708  
000015D4  12FC 0020                709  FINDLIST        MOVE.B  #' ',(A1)+
000015D8                           710                  
000015D8  12FC 0057                711  ISWORD          MOVE.B  #'W',(A1)+
000015DC  60F6                     712                  BRA     FINDLIST
000015DE                           713  
000015DE  12FC 004C                714  ISLONG          MOVE.B  #'L',(A1)+
000015E2  60F0                     715                  BRA FINDLIST
000015E4                           716            
000015E4                           717  *GETSIZEBIT
000015E4  1803                     718  GETSIZEBIT      MOVE.B  D3,D4           *move instruction for shift
000015E6  E30C                     719                  LSL.B   #1,D4           *shift 1 to the left so the MSB is the size
000015E8  EE0C                     720                  LSR.B   #7,D4           *shift 7 to the right
000015EA  4E75                     721                  RTS
000015EC                           722  *FORMAT12
000015EC                           723  *FORMAT13
000015EC                           724  *FORMAT14
000015EC                           725  *FORMAT15
000015EC                           726  *EAGRP1
000015EC                           727  *EAGRP2
000015EC                           728  *EAGRP3
000015EC                           729  *EAGRP4
000015EC                           730  *EAGRP5
000015EC                           731  *EAGRP6
000015EC                           732  *EAGRP7          
000015EC                           733  
000015EC                           734  
000015EC                           735  
000015EC                           736  
000015EC                           737  
000015EC                           738  
000015EC                           739  *EAGRP8
000015EC                           740  *EAGRP9
000015EC                           741  *EAGRP10
000015EC                           742  
000015EC                           743  ;I/O         
000015EC                           744  ******************************************************************************************************************
000015EC  4283                     745  NEXTIO          CLR.L     D3
000015EE  4284                     746                  CLR.L     D4
000015F0  4CDF 7EFA                747                  MOVEM.L  (sp)+,D1/D3-D7/A1-A6 ;I/O gets his stuff back
000015F4  B5CB                     748                  CMP.L    A3,A2  ;we dont need more machine language once we have reached the the destination
000015F6  6E00 0088                749                  BGT      END ;so when equal, we are done
000015FA  0C05 0001                750                  CMPI.B   #1,D5 ;hard cded page limit for first page
000015FE  6700 0010                751                  BEQ      SECONDPAGE
00001602  B2BC 00000001            752                  CMP.L    #1,D1
00001608  6700 0010                753                  BEQ      NEWPAGELOOP
0000160C  6600 FC34                754                  BNE      FEEDOPCODE
00001610                           755  
00001610                           756                  
00001610                           757  SECONDPAGE
00001610  B2BC 00000001            758                  CMP.L    #1,D1       ;hardcoded limit for other pages page. can be and expected to change
00001616  6600 FC2A                759                  BNE      FEEDOPCODE
0000161A                           760                  ;check if user wants new page. if no exit. if yes continue to feedopcode.
0000161A                           761  NEWPAGELOOP
0000161A  1A3C 0001                762                  MOVE.B   #1,D5
0000161E  43F9 00009000            763                  LEA     $9000,A1          ;had to specify or it wont work properly                 
00001624  43F9 0000197E            764                  LEA     NEWPAGEMSG,A1     
0000162A  303C 000E                765                  MOVE.W  #14,D0          
0000162E  4E4F                     766                  TRAP    #15 
00001630                           767                  
00001630  43F9 00009000            768                  LEA     $9000,A1          ;had to specify or it wont work properly                 
00001636  303C 0002                769                  MOVE.W  #2,D0           ;had to specify or it wont work properly
0000163A  4E4F                     770                  TRAP    #15  
0000163C                           771                  
0000163C  1611                     772                  MOVE.B  (A1),D3
0000163E                           773                  
0000163E  43F9 00009000            774                  LEA     $9000,A1          ;had to specify or it wont work properly
00001644  B63C 0059                775                  CMP.B   #$59,D3
00001648  6700 FBF8                776                  BEQ     FEEDOPCODE
0000164C  B63C 0079                777                  CMP.B   #$79,D3
00001650  6700 FBF0                778                  BEQ     FEEDOPCODE
00001654  B63C 0000                779                  CMP.B   #$0,D3
00001658  6700 FBE8                780                  BEQ     FEEDOPCODE
0000165C  B63C 004E                781                  CMP.B   #$4E,D3
00001660  6700 001E                782                  BEQ     END
00001664  B63C 006E                783                  CMP.B   #$6E,D3
00001668  6700 0016                784                  BEQ     END
0000166C                           785                  
0000166C  43F9 00009000            786                  LEA     $9000,A1          ;had to specify or it wont work properly
00001672  43F9 000018F2            787                  LEA     BADCHARACTER,A1     
00001678  303C 000D                788                  MOVE.W  #13,D0          
0000167C  4E4F                     789                  TRAP    #15
0000167E                           790                  
0000167E  609A                     791                  BRA     NEWPAGELOOP  
00001680                           792                  ******************************************************************************************************************
00001680                           793  END 
00001680  43F9 000019A2            794                  LEA     ENDMSG,A1     
00001686  303C 000D                795                  MOVE.W  #13,D0          
0000168A  4E4F                     796                  TRAP    #15  
0000168C                           797   
0000168C  303C 0009                798                  MOVE.W  #9,D0          
00001690  4E4F                     799                  TRAP    #15                             
00001692  FFFF FFFF                800                  SIMHALT             ; halt simulator
00001696                           801      
00001696  =0000000A                802  CR                  EQU     $0A
00001696  =0000000D                803  LF                  EQU     $0D
00001696                           804  
00001696= 58 58 58 58 58 58 ...    805  WELMSG              DC.B    'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX',CR,LF
000016CB= 58 20 20 20 20 20 ...    806                      DC.B    'X                                                 X',CR,LF
00001700= 58 20 20 20 57 65 ...    807                      DC.B    'X   Welcome to the Disassembler of Motorola 68k   X',CR,LF
00001735= 58 20 20 20 20 20 ...    808                      DC.B    'X                                                 X',CR,LF
0000176A= 58 20 20 20 20 20 ...    809                      DC.B    'X           By:    Sesario Imanputra              X',CR,LF
0000179F= 58 20 20 20 20 20 ...    810                      DC.B    'X                  Zachary Liong                  X',CR,LF
000017D4= 58 20 20 20 20 20 ...    811                      DC.B    'X                  Micah Rice                     X',CR,LF
00001809= 58 20 20 20 20 20 ...    812                      DC.B    'X                                                 X',CR,LF
0000183E= 58 58 58 58 58 58 ...    813                      DC.B    'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX',CR,LF,CR,LF, 0
00001876                           814  LINE_COUNT          DS.B    1
00001877                           815  
00001877= 50 6C 65 61 73 65 ...    816  MSGINPUT            DC.B    'Please enter first memory address: $',0
0000189C= 50 6C 65 61 73 65 ...    817  MSGINPUT2           DC.B    'Please enter second memory address: $',0
000018C2= 494E5055 54205641 ...    818  BADVALUE            DC.L    'INPUT VALUE EXCEEDS 32 BIT RANGE!',CR,LF,0
000018F2= 494E5055 54204841 ...    819  BADCHARACTER        DC.L    'INPUT HAS ILLEGAL CHARACTER!',CR,LF,0
0000191A= 534F5552 43452041 ...    820  BADADDRESS          DC.L    'SOURCE ADDRESS CANNOT BE BIGGER THEN DESTINATION ADDRESS!',CR,LF,0
00001962= 56414C55 4520544F ...    821  VALUETOOLOW         DC.L    'VALUE TOO LOW!',CR,LF,0
0000197E= 454E5445 5220544F ...    822  NEWPAGEMSG          DC.L    'ENTER TO CONTINUE... ',CR,LF,0
000019A2= 58 58 58 58 58 58 ...    823  ENDMSG              DC.B    'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX    END    XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX',0
000019F4= 2B 00                    824  PLUSMSG             DC.B    '+',0
000019F6= 2D 00                    825  NEGMSG              DC.B    '-',0
000019F8= 0A 0D 00                 826  CLR                 DC.B    CR,LF,0
000019FB= 4E 4F 4F 50 0A 0D 00     827  NOOPMSG             DC.B    'NOOP',CR,LF,0
00001A02= 52 54 53 0A 0D 00        828  RTSMSG              DC.B    'RTS',CR,LF,0
00001A08                           829  
00001A08= 4D 4F 56 45 4D 2E ...    830  MOVEMMSG            DC.B    'MOVEM.',CR,LF,0
00001A11= 4D 4F 56 45 2E 0A ...    831  MOVEMSG             DC.B    'MOVE.',CR,LF,0
00001A19= 4C 45 41 0A 0D 00        832  LEAMSG              DC.B    'LEA',CR,LF,0
00001A1F= 4E 4F 54 0A 0D 00        833  NOTMSG              DC.B    'NOT',CR,LF,0
00001A25= 4A 53 52 0A 0D 00        834  JSRMSG              DC.B    'JSR',CR,LF,0
00001A2B= 42 47 54 0A 0D 00        835  BGTMSG              DC.B    'BGT',CR,LF,0
00001A31= 42 4C 45 0A 0D 00        836  BLEMSG              DC.B    'BLE',CR,LF,0
00001A37= 42 45 51 0A 0D 00        837  BEQMSG              DC.B    'BEQ',CR,LF,0
00001A3D= 42 52 41 0A 0D 00        838  BRAMSG              DC.B    'BRA',CR,LF,0
00001A43= 44 49 56 55 2E 0A ...    839  DIVUMSG             DC.B    'DIVU.',CR,LF,0
00001A4B= 53 55 42 2E 0A 0D 00     840  SUBMSG              DC.B    'SUB.',CR,LF,0
00001A52= 4D 55 4C 53 2E 0A ...    841  MULSMSG             DC.B    'MULS.',CR,LF,0
00001A5A= 41 4E 44 2E 0A 0D 00     842  ANDMSG              DC.B    'AND.',CR,LF,0
00001A61= 41 44 44 2E 0A 0D 00     843  ADDMSG              DC.B    'ADD.',CR,LF,0
00001A68= 4C 53 4C 2E 0A 0D 00     844  LSLMSG              DC.B    'LSL.',CR,LF,0
00001A6F= 41 53 4C 2E 0A 0D 00     845  ASLMSG              DC.B    'ASL.',CR,LF,0
00001A76= 44 41 54 41 0A 0D 00     846  INVALIDMSG          DC.B    'DATA',CR,LF,0
00001A7D= 49 4E 50 55 54 20 ...    847  EVENINPUTMSG        DC.B    'INPUT VALUE IS EVEN!',0
00001A92                           848  
00001A92                           849  * Put variables and constants here
00001A92                           850  
00001A92                           851      END    START        ; last line of source

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ADDMSG              1A61
ALPHA               11AE
ANDBRANCH           1462
ANDMSG              1A5A
ASLMEMBRANCH        150C
ASLMSG              1A6F
ASLREGBRANCH        14EC
ATOH                113A
BADADDRESS          191A
BADADDRESSORDER     120E
BADCHARACTER        18F2
BADINPUT            1110
BADVALUE            18C2
BEQBRANCH           1382
BEQMSG              1A37
BGTBRANCH           1392
BGTMSG              1A2B
BLEBRANCH           13A2
BLEMSG              1A31
BRABRANCH           136A
BRAMSG              1A3D
CHECKINPUTAGAIN     1080
CHECKLOW            11FE
CHECKNEG            114C
CLR                 19F8
CONTLOOP            105E
CR                  A
DIVUMSG             1A43
END                 1680
ENDMSG              19A2
ERR                 11A0
EVENINPUTMSG        1A7D
FEEDOPCODE          1242
FINDLIST            15D4
FINISHSAVING        123A
FOR_LOOP            1044
GETSIZEBIT          15E4
INPUT1              100C
INPUT2              1028
INVALIDBRANCH       158E
INVALIDLOWVALUE     1176
INVALIDMSG          1A76
ISLONG              15DE
ISWORD              15D8
JSRMBRANCH          130A
JSRMSG              1A25
LEABRANCH           1328
LEAMSG              1A19
LF                  D
LINE_COUNT          1876
LOWERCASE           1092
LSLMEMBRANCH        152A
LSLMSG              1A68
LSLREGBRANCH        14FC
MOVEMBRANCH         12DA
MOVEMMSG            1A08
MOVEMSG             1A11
MSGINPUT            1877
MSGINPUT2           189C
MULSBRANCH          1452
MULSLOOP            143C
MULSMSG             1A52
MULSTEST            1436
NEGMSG              19F6
NEGVALUE            11AA
NEWPAGELOOP         161A
NEWPAGEMSG          197E
NEXTFOURHEX         159E
NEXTIO              15EC
NEXTNEXTFOURHEX     15AA
NOOPBRANCH          156E
NOOPMSG             19FB
NOTBRANCH           12EC
NOTMSG              1A1F
OPCODEGROUP1        12A8
OPCODEGROUP2        1340
OPCODEGROUP3        13B2
OPCODEGROUP4        13D4
OPCODEGROUP5        141E
OPCODEGROUP6        1484
OPCODEGROUP7        14C2
OPCODEGROUP8        1548
OPCODETIME          124E
OTHERVAL            10A8
OVERFLOWDETECT      10C8
OVERFLOWINPUT       10E6
OVERFLOWINPUTCHECK  10D4
PA                  4004
PE                  4004
PI                  4004
PLUSMSG             19F4
PO                  4004
PRINTADD            149E
PU                  4004
RESET               1154
RETLOOP             1076
RETLOOPNEG          107A
RTSBRANCH           157E
RTSMSG              1A02
SAVESECOND          11C0
SECONDPAGE          1610
START               1000
SUBBRANCH           140E
SUBBRANCH3          1402
SUBMSG              1A4B
SUBSTRACTVAL        107C
SUBSTRACTVALOTHER   10BC
TESTADD             14B2
TESTSUBBRANCH       13EA
TESTSUBBRANCH2      13F6
VALUETOOLOW         1962
WELMSG              1696
