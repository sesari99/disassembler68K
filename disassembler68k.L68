00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 8/14/2020 2:54:58 PM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      :  I/O
00000000                             3  * Written by :  Sesario Imanputra, Zachary Liong, Micha Rice, Marci Ma
00000000                             4  * Date       :  
00000000                             5  * Description: Starts at 4000. For testing purposes, theres a bunch of ML codes to disassemble at 4000. Currently, the first ML code at 4000 is NOP.
00000000                             6  * afterwards, it will include ML of whatever we wrote after NOP.
00000000                             7  * current I/O should be able to detext values exceeding the 32 bit unsigned range (FFFFFFFF) and recognize invalid input.
00000000                             8  * if you input a lower case letter, it will automatically convert into uppercase. 
00000000                             9  *-----------------------------------------------------------    
00004000                            10          ORG    $4000   
00004000                            11  ****************************************************        
00004000                            12  pro              
00004000  4E71                      13                   NOP
00004002                            14                   
00004002                            15                   ;OPCODEGROUP8 TEST
00004002  1602                      16                   MOVE.B  D2,D3  
00004004  1082                      17                   MOVE.B  D2,(A0)
00004006  3901                      18                   MOVE.W  D1,-(A4)
00004008  2602                      19                   MOVE.L  D2,D3
0000400A  3C42                      20                   MOVE.W  D2,A6       ;should be data
0000400C  307C 0047                 21                   MOVEA #$00000047,A0 ;should be data
00004010                            22                   
00004010                            23                   ;OPCODEGROUP1.1 TEST 
00004010  48A5 8000                 24                   MOVEM.W D0,-(A5)
00004014  48A5 4000                 25                   MOVEM.W D1,-(A5)
00004018  48A5 2000                 26                   MOVEM.W D2,-(A5) 
0000401C  48A5 0100                 27                   MOVEM.W D7,-(A5)
00004020                            28                   
00004020  48A5 0080                 29                   MOVEM.W A0,-(A5) 
00004024  48A5 0040                 30                   MOVEM.W A1,-(A5) 
00004028  48A5 0020                 31                   MOVEM.W A2,-(A5) 
0000402C  48A5 0001                 32                   MOVEM.W A7,-(A5)
00004030  48A5 FFFF                 33                   MOVEM.W D0-D7/A0-A7,-(A5)    
00004034  48A5 783C                 34                   MOVEM.W D1-D4/A2-A5,-(A5) 
00004038                            35  
00004038  4C9D 0001                 36                   MOVEM.W (A5)+,D0
0000403C  4C9D 0002                 37                   MOVEM.W (A5)+,D1
00004040  4C9D 0004                 38                   MOVEM.W (A5)+,D2
00004044  4C9D 0080                 39                   MOVEM.W (A5)+,D7
00004048  4C9D 0100                 40                   MOVEM.W (A5)+,A0
0000404C  4C9D 0200                 41                   MOVEM.W (A5)+,A1 
00004050  4C9D 0400                 42                   MOVEM.W (A5)+,A2
00004054  4C9D 8000                 43                   MOVEM.W (A5)+,A7  
00004058  4C9D FFFF                 44                   MOVEM.W (A5)+,D0-D7/A0-A7 ;D7 not printing
0000405C  4C9D 3C1E                 45                   MOVEM.W (A5)+,D1-D4/A2-A5
00004060                            46  
00004060                            47                   
00004060                            48                   ;JMP    pa      ;should be data (not wokring)
00004060                            49                   
00004060                            50                   ;OPCODEGROUP6 TEST
00004060                            51                   ;ADD.B   D2,D3 
00004060                            52                   ;ADDX   -(A2),-(A3)    ;should be data (not working)
00004060                            53                   ;ADDA   D3,A3          ;should be data
00004060                            54                   
00004060                            55                   ;OPCODEGROUP4 TEST
00004060                            56                   ;SUB.B    D2,D3 
00004060                            57                   ;SUBX   -(A2),-(A3)    ;should be data (not working)
00004060                            58                   ;SUBA   D3,A3          ;should be data
00004060                            59                   
00004060                            60                   ;OPCODEGROUP5 TEST
00004060  C7C2                      61                   MULS  D2,D3 
00004062                            62                   ;MULU  D2,D3           ;should be data (not working)
00004062                            63                   
00004062                            64                   ;OPCODEGROUP3 TEST
00004062  86C2                      65                   DIVU  D2,D3 
00004064                            66                   ;DIVS  D2,D3           ;should be data
00004064                            67                   
00004064                            68                   ;OPCODEGROUP1.5 TEST
00004064  45F8 2000                 69                   LEA   $2000,A2  
00004068                            70                   
00004068                            71                   ;OPCODEGROUP5 TEST
00004068                            72                   ;AND   #3,D3            
00004068                            73                   ;EXG   D2,D3           ;should be data (not working)
00004068                            74                   
00004068                            75                   ;OPCODEGROUP1.3 TEST
00004068  4603                      76                   NOT.B   D3
0000406A  465B                      77                   NOT.W   (A3)+
0000406C  46A3                      78                   NOT.L   -(A3)
0000406E  4678 1234                 79                   NOT.W   $1234
00004072  46B9 12345678             80                   NOT.L   $12345678
00004078                            81                   ;MOVE  D3,SR           ;should be data (not working)
00004078                            82  
00004078                            83                   
00004078                            84                   ;OPCODEGROUP7.1.1 TEST  REG SHIFT
00004078                            85                   ;LSL.B   #2,D3 
00004078                            86                   
00004078                            87                   ;OPCODEGROUP7.1.2 TEST   REG SHIFT
00004078                            88                   ;ASL.B   #2,D3 
00004078                            89                   
00004078                            90                   ;OPCODEGROUP7.3.2 TEST     MEM SHIFT
00004078  E3D8                      91                   LSL   (A0)+ 
0000407A                            92                  
0000407A                            93                   ;OPCODEGROUP7.3.1 TEST       MEM SHIFT           
0000407A  E1D8                      94                   ASL   (A0)+ 
0000407C                            95                   
0000407C                            96                  ;OPCODEGROUP2.3 TEST
0000407C  6E00 0002                 97                   BGT   pa
00004080                            98                  
00004080                            99  pa              ;OPCODEGROUP2.4 TEST
00004080  6F00 0002                100                   BLE   pi
00004084                           101                  
00004084                           102  pi              ;OPCODEGROUP2.2 TEST
00004084  6700 0002                103                   BEQ   pu
00004088                           104                  
00004088                           105  pu              ;OPCODEGROUP2.1 TEST
00004088  6000 0002                106                   BRA.W    po 
0000408C                           107       
0000408C                           108  po
0000408C  4E75                     109                   RTS
0000408E                           110  
0000408E                           111  pe               ;OPCODEGROUP1.4 TEST
0000408E  4E91                     112                  JSR   (A1)
00004090                           113  
00004090                           114                  
00004090                           115                  
00004090                           116  ****************************************************   
00001000                           117          ORG    $1000   
00001000                           118  START:                  ; first instruction of program   
00001000                           119  
00001000                           120  ;inputs for testing are  here:    
00001000                           121  
00001000  43F9 00002136            122                  LEA     WELMSG,A1   ;Display intro message
00001006  103C 000E                123                  MOVE.B  #14,D0 
0000100A  4E4F                     124                  TRAP    #15
0000100C                           125                  
0000100C                           126  STARTMENU
0000100C  48E7 FF7E                127                  MOVEM.L     D0-D7/A1-A6,-(sp)   
00001010                           128  
00001010                           129  INPUT1                                   
00001010  43F9 0000234C            130                  LEA     MSGINPUT ,A1     ;Ask for first input
00001016  103C 000E                131                  MOVE.B  #14,D0          
0000101A  4E4F                     132                  TRAP    #15       
0000101C                           133                  
0000101C  43F9 0000273A            134                  LEA     IOVariable,A1
00001022                           135                  
00001022  303C 0002                136                  MOVE.W  #2,D0           ;had to specify or it wont work properly
00001026  4E4F                     137                  TRAP    #15
00001028  6000 001E                138                  BRA     FOR_LOOP 
0000102C                           139                  
0000102C  43F9 00002380            140  INPUT2          LEA     MSGINPUT2,A1    ;Ask for second input
00001032  103C 000E                141                  MOVE.B  #14,D0
00001036  4E4F                     142                  TRAP    #15
00001038  43F9 0000273A            143                  LEA     IOVariable,A1
0000103E                           144                  
0000103E  303C 0002                145                  MOVE.W  #2,D0
00001042  4E4F                     146                  TRAP    #15
00001044  6000 0002                147                  BRA     FOR_LOOP
00001048                           148                  
00001048                           149                                
00001048  B601                     150  FOR_LOOP        CMP.B   D1,D3
0000104A  6700 0116                151                  BEQ     CHECKNEG
0000104E  4246                     152                  CLR.W   D6               
00001050  DC19                     153                  ADD.B  (A1)+,D6
00001052  BC3C 0051                154                  CMP.B   #$51,D6
00001056  6700 10C8                155                  BEQ     ENDPROGRAM
0000105A  BC3C 0071                156                  CMP.B   #$71,D6
0000105E  6700 10C0                157                  BEQ     ENDPROGRAM
00001062  BC3C 0030                158                  CMP.B   #$30,D6
00001066  6D00 00BE                159                  BLT     BADINPUT
0000106A  BC3C 0039                160                  CMP.B   #$39,D6
0000106E  6E00 0024                161                  BGT     CHECKINPUTAGAIN 
00001072                           162  CONTLOOP
00001072  4EB9 00001150            163                  JSR     AtoH
00001078  0C03 0000                164                  CMPI.B  #0,D3
0000107C  6600 003E                165                  BNE     OTHERVAL
00001080  0C07 0000                166                  CMPI.B  #0,D7   
00001084  6D00 000A                167                  BLT     SUBSTRACTVAL                 
00001088  D806                     168                  ADD.B   D6,D4 ;first value
0000108A                           169  RETLOOP                
0000108A  5243                     170                  ADD.W   #1,D3
0000108C  60BA                     171                  BRA     FOR_LOOP
0000108E                           172                  
0000108E                           173  RETLOOPNEG                
0000108E                           174                  ;ADD.W   #1,D3
0000108E                           175                  ;ADD.W   #1,D7
0000108E  60B8                     176                  BRA     FOR_LOOP
00001090                           177  
00001090                           178  
00001090                           179  SUBSTRACTVAL                 
00001090  9846                     180                  SUB.W   D6,D4
00001092  60F6                     181                  BRA     RETLOOP
00001094                           182                  
00001094                           183  CHECKINPUTAGAIN 
00001094  BC3C 0046                184                  CMP.B   #$46,D6
00001098  6E00 000C                185                  BGT     LOWERCASE
0000109C  BC3C 0041                186                  CMP.B   #$41,D6
000010A0  6D00 0084                187                  BLT     BADINPUT
000010A4  60CC                     188                  BRA     CONTLOOP
000010A6                           189                  
000010A6                           190  LOWERCASE
000010A6  BC3C 0061                191                  CMP.B   #$61,D6
000010AA  6D00 007A                192                  BLT     BADINPUT
000010AE  BC3C 0066                193                  CMP.B   #$66,D6
000010B2  6E00 0072                194                  BGT     BADINPUT
000010B6  0406 0020                195                  SUBI.B  #$20,D6
000010BA  60B6                     196                  BRA     CONTLOOP
000010BC                           197  
000010BC                           198                  
000010BC                           199  OTHERVAL
000010BC  E984                     200                  ASL.L   #4,D4 ;u r overflowing, this is the last digit u can add
000010BE  6900 002A                201                  BVS     OVERFLOWINPUTCHECK ;u r overflowing, this is the last digit u can add
000010C2  0C07 0000                202                  CMPI.B  #0,D7
000010C6  6600 0034                203                  BNE     OVERFLOWINPUT
000010CA  D846                     204                  ADD.W   D6,D4           
000010CC  5243                     205                  ADD.W   #1,D3
000010CE  6000 FF78                206                  BRA     FOR_LOOP
000010D2                           207                  
000010D2                           208  SUBSTRACTVALOTHER
000010D2  9846                     209                  SUB.W   D6,D4
000010D4  6A00 0008                210                  BPL     OVERFLOWDETECT  
000010D8  5243                     211                  ADD.W   #1,D3
000010DA  6000 FF6C                212                  BRA     FOR_LOOP
000010DE                           213    
000010DE                           214  OVERFLOWDETECT
000010DE  2A7C 00000001            215                  MOVE.L  #1,A5    
000010E4  5243                     216                  ADD.W   #1,D3
000010E6  6000 FF60                217                  BRA     FOR_LOOP
000010EA                           218  
000010EA                           219  OVERFLOWINPUTCHECK
000010EA  0C07 0000                220                  CMPI.B  #0,D7
000010EE  6600 000C                221                  BNE     OVERFLOWINPUT
000010F2  5207                     222                  ADDI.B  #1,D7
000010F4  D846                     223                  ADD.W   D6,D4                
000010F6  5243                     224                  ADD.W   #1,D3
000010F8  6000 FF4E                225                  BRA     FOR_LOOP
000010FC                           226  
000010FC                           227  OVERFLOWINPUT                
000010FC  43F9 000023B4            228                  LEA     BADVALUE,A1     
00001102  303C 000D                229                  MOVE.W  #13,D0          
00001106  4E4F                     230                  TRAP    #15 
00001108  4287                     231                  CLR.L   D7
0000110A  4286                     232                  CLR.L   D6
0000110C  4285                     233                  CLR.L   D5
0000110E  4284                     234                  CLR.L   D4
00001110  4283                     235                  CLR.L   D3
00001112  4282                     236                  CLR.L   D2
00001114  4281                     237                  CLR.L   D1
00001116  4280                     238                  CLR.L   D0
00001118  B5FC 00000000            239                  CMP.L   #$0,A2
0000111E  6700 FEF0                240                  BEQ     INPUT1 
00001122  6000 FF08                241                  BRA     INPUT2    
00001126                           242  
00001126                           243  BADINPUT                
00001126  43F9 000023E4            244                  LEA     BADCHARACTER,A1     
0000112C  303C 000D                245                  MOVE.W  #13,D0          
00001130  4E4F                     246                  TRAP    #15 
00001132  4287                     247                  CLR.L   D7
00001134  4286                     248                  CLR.L   D6
00001136  4285                     249                  CLR.L   D5
00001138  4284                     250                  CLR.L   D4
0000113A  4283                     251                  CLR.L   D3
0000113C  4282                     252                  CLR.L   D2
0000113E  4281                     253                  CLR.L   D1
00001140  4280                     254                  CLR.L   D0
00001142  B5FC 00000000            255                  CMP.L   #$0,A2
00001148  6700 FEC6                256                  BEQ     INPUT1 
0000114C  6000 FEDE                257                  BRA     INPUT2                                 
00001150                           258              
00001150                           259  AtoH
00001150  0C06 0030                260                  CMPI.B  #$30,D6
00001154  6D60                     261                  BLT.B   ERR
00001156  BC3C 0039                262                  CMP.B   #$39,D6
0000115A  6E68                     263                  BGT.B   ALPHA
0000115C  0406 0030                264                  SUBI.B  #$30,D6
00001160  4E75                     265                  RTS
00001162                           266                  
00001162                           267  CHECKNEG                
00001162  0C05 0001                268                  CMPI.B  #1,D5
00001166  6D00 0002                269                  BLT     RESET
0000116A                           270                          
0000116A                           271  RESET
0000116A  4246                     272                  CLR.W   D6
0000116C  4245                     273                  CLR.W   D5
0000116E  4243                     274                  CLR.W   D3
00001170  4247                     275                  CLR.W   D7
00001172                           276                  
00001172  0C44 0000                277                  CMPI    #0,D4
00001176  6700 0014                278                  BEQ     INVALIDLOWVALUE 
0000117A                           279                  
0000117A  5242                     280                  ADD.W   #1,D2
0000117C  0C02 0000                281                  CMPI.B  #0,D2
00001180  0C02 0002                282                  CMPI.B  #2,D2
00001184  6700 0050                283                  BEQ     SAVESECOND
00001188                           284                  ;MOVE.W  D4,(A4)+
00001188  6000 004C                285                  BRA     SAVESECOND
0000118C                           286                  
0000118C                           287  INVALIDLOWVALUE 
0000118C  43F9 00002454            288                  LEA     VALUETOOLOW,A1     
00001192  303C 000D                289                  MOVE.W  #13,D0          
00001196  4E4F                     290                  TRAP    #15 
00001198  4287                     291                  CLR.L   D7
0000119A  4286                     292                  CLR.L   D6
0000119C  4285                     293                  CLR.L   D5
0000119E  4284                     294                  CLR.L   D4
000011A0  4283                     295                  CLR.L   D3
000011A2  4282                     296                  CLR.L   D2
000011A4  4281                     297                  CLR.L   D1
000011A6  4280                     298                  CLR.L   D0
000011A8  B5FC 00000000            299                  CMP.L   #$0,A2
000011AE  6700 FE60                300                  BEQ     INPUT1 
000011B2  6000 FE78                301                  BRA     INPUT2             
000011B6                           302                  
000011B6                           303                  
000011B6                           304  ERR             
000011B6  0C06 002D                305                  CMPI.B #$2D,D6
000011BA  6700 0004                306                  BEQ    NEGVALUE
000011BE  4E75                     307                  RTS
000011C0                           308                  
000011C0                           309  NEGVALUE
000011C0  5245                     310                  ADD.W   #1,D5
000011C2  4E75                     311                  RTS
000011C4                           312  
000011C4                           313  
000011C4                           314                  
000011C4                           315  ALPHA
000011C4  0C06 0041                316                  CMPI.B #$41,D6
000011C8  6DEC                     317                  BLT.B  ERR
000011CA  0C06 0046                318                  CMPI.B #$46,D6
000011CE  6EE6                     319                  BGT.B  ERR
000011D0  0406 0037                320                  SUBI.B #$37,D6
000011D4  4E75                     321                  RTS
000011D6                           322                  
000011D6                           323  SAVESECOND
000011D6  4241                     324                  CLR.W   D1
000011D8  4243                     325                  CLR.W   D3
000011DA  2404                     326                  MOVE.L  D4,D2
000011DC  4284                     327                  CLR.L   D4
000011DE  4240                     328                  CLR.W   D0
000011E0                           329                  ;CLR.W   D4
000011E0  4246                     330                  CLR.W   D6
000011E2                           331                  ;BRA     CHECKODD
000011E2  0802 0000                332                  BTST.L  #0,D2
000011E6  6700 002C                333                  BEQ     CHECKLOW ;even values will always have their first bit 0. 
000011EA                           334                  
000011EA                           335                  ;if not report error to higher ups. 
000011EA  43F9 00002584            336                  LEA     EVENINPUTMSG,A1     
000011F0  303C 000D                337                  MOVE.W  #13,D0          
000011F4  4E4F                     338                  TRAP    #15 
000011F6  4287                     339                  CLR.L   D7
000011F8  4286                     340                  CLR.L   D6
000011FA  4285                     341                  CLR.L   D5
000011FC  4284                     342                  CLR.L   D4
000011FE  4283                     343                  CLR.L   D3
00001200  4282                     344                  CLR.L   D2
00001202  4281                     345                  CLR.L   D1
00001204  4280                     346                  CLR.L   D0
00001206  B5FC 00000000            347                  CMP.L   #$0,A2
0000120C  6700 FE02                348                  BEQ     INPUT1 
00001210  6000 FE1A                349                  BRA     INPUT2                
00001214                           350                  
00001214                           351  CHECKLOW
00001214  B5FC 00000000            352                  CMP.L   #$0,A2
0000121A  6600 0034                353                  BNE     FINISHSAVING
0000121E  2442                     354                  MOVE.L  D2,A2
00001220  6000 FE0A                355                  BRA     INPUT2 
00001224                           356                  
00001224                           357  BADADDRESSORDER
00001224  43F9 0000240C            358                  LEA     BADADDRESS,A1     
0000122A  303C 000D                359                  MOVE.W  #13,D0          
0000122E  4E4F                     360                  TRAP    #15 
00001230  4287                     361                  CLR.L   D7
00001232  4286                     362                  CLR.L   D6
00001234  4285                     363                  CLR.L   D5
00001236  4284                     364                  CLR.L   D4
00001238  4283                     365                  CLR.L   D3
0000123A  4282                     366                  CLR.L   D2
0000123C  4281                     367                  CLR.L   D1
0000123E  4280                     368                  CLR.L   D0
00001240  247C 00000000            369                  MOVE.L  #$0,A2
00001246  267C 00000000            370                  MOVE.L  #$0,A3
0000124C  6700 FDC2                371                  BEQ     INPUT1            
00001250                           372                  
00001250                           373   
00001250                           374  FINISHSAVING
00001250  2642                     375                  MOVE.L  D2,A3
00001252  4282                     376                  CLR.L   D2
00001254  B5CB                     377                  CMP.L   A3, A2 ;A2 > A3, then an error should appear
00001256  6ECC                     378                  BGT     BADADDRESSORDER
00001258                           379  ;by this point we have A3 holding destinationa and A2 holding origin. all data registers should be cleared at this point. the following address registers
00001258                           380  ;are not clear: A1, A2 (src), A3 (dest), A7 (stack pointer), A5 && A4 (output stack), D5 && D4i(page counter), D1 && D3 && D6 address output, D2 original value,
00001258                           381  ;D1 (temp used),
00001258                           382  
00001258                           383  ;send assembly language to D2
00001258                           384  FEEDOPCODE                
00001258  49F9 000025AA            385                  LEA         tempresult, A4      ; load the address of variable "tempresult" into A1
0000125E  18FC 000A                386                  MOVE.B     #$A,(A4)+
00001262  4282                     387                  CLR.L       D2
00001264  341A                     388                  MOVE.W      (A2)+,D2                                
00001266                           389                  ;movem everything except D2, bcs u need it. 
00001266  5241                     390                  ADDI.W      #1,D1
00001268  48E7 5F7E                391                  MOVEM.L     D1/D3-D7/A1-A6,-(sp) 
0000126C  6000 00CA                392                  BRA         OPCODETIME
00001270                           393                  
00001270                           394  OUTPUTADDRESS               
00001270                           395                  ;now do the first half
00001270  2801                     396                  MOVE.L      D1,D4
00001272  220A                     397                  MOVE.L      A2,D1
00001274  5581                     398                  SUB.L       #$2,D1
00001276  C2BC 0000FFFF            399                  AND.L       #$0000FFFF,D1
0000127C  48E7 3F72                400                  MOVEM.L     D2-D7/A1-A3/A6,-(sp)   
00001280  7804                     401                  MOVE.L      #$4,D4 ;10
00001282  4EB9 000012AC            402                  JSR         HEXOUTPUT
00001288  4CDF 4EFC                403                  MOVEM.L    (sp)+,D2-D7/A1-A3/A6 ;I/O gets his stuff back
0000128C                           404                  
0000128C  4281                     405                  CLR.L       D1
0000128E  220A                     406                  MOVE.L      A2,D1
00001290  5581                     407                  SUB.L       #$2,D1
00001292  4241                     408                  CLR.W       D1
00001294  4841                     409                  SWAP        D1
00001296  48E7 3F72                410                  MOVEM.L     D2-D7/A1-A3/A6,-(sp)   
0000129A  7804                     411                  MOVE.L      #$4,D4 ;10
0000129C  4EB9 000012AC            412                  JSR         HEXOUTPUT
000012A2  4CDF 4EFC                413                  MOVEM.L    (sp)+,D2-D7/A1-A3/A6 ;I/O gets his stuff back
000012A6                           414  
000012A6  2204                     415                  MOVE.L      D4,D1
000012A8  4244                     416                  CLR.W       D4   
000012AA  4E75                     417                  RTS
000012AC                           418  
000012AC                           419                  
000012AC                           420  HEXOUTPUT      ;used D1(value being outpueed), D3 (D1 temp), D6 (char counter), A1(string buffer), A2 (string buffer), D4(0 size).
000012AC  4282                     421                  CLR.L   D2
000012AE  4283                     422                  CLR.L   D3
000012B0  4285                     423                  CLR.L   D5
000012B2  4286                     424                  CLR.L   D6
000012B4  4287                     425                  CLR.L   D7
000012B6  4286                     426                  CLR.L   D6                ; use D6 to count the total number of digits after conversion
000012B8                           427  
000012B8                           428                  
000012B8                           429                      
000012B8                           430  * your code should start here
000012B8                           431  
000012B8  B2BC 00000010            432  CHEAPLOOP       CMP.L      #16,D1
000012BE  6D00 0018                433                  BLT        DIRECTCONV
000012C2  83FC 0010                434                  DIVS.W     #16,D1           ;find remainder 17
000012C6  2601                     435                  MOVE.L     D1,D3            ;set up to isolate remainder
000012C8  E083                     436                  ASR.L      #8,D3            ;remainder isolated 
000012CA  E083                     437                  ASR.L      #8,D3            ;NOW
000012CC  E189                     438                  LSL.L      #8,D1
000012CE  E189                     439                  LSL.L      #8,D1
000012D0  E089                     440                  LSR.L      #8,D1
000012D2  E089                     441                  LSR.L      #8,D1            ;Clunkyway to clear left hand side
000012D4  6000 0012                442                  BRA        CONVERTIT                
000012D8                           443                     
000012D8  B27C 0000                444  DIRECTCONV      CMP        #0,D1            ;IF it is zero
000012DC  6700 0026                445                  BEQ        DONE             ;we are done
000012E0  1601                     446                  MOVE.B     D1,D3
000012E2  4241                     447                  CLR        D1
000012E4  6000 0002                448                  BRA        CONVERTIT
000012E8                           449    
000012E8  B67C 0009                450  CONVERTIT       CMP        #9,D3            ;If over 9
000012EC  6E00 000C                451                  BGT        SPECCASE         ;go to adding 55
000012F0  0603 0030                452                  ADD.B      #48,D3           ;otherwise add 48 for ascii 0-9
000012F4  5206                     453                  ADD.B      #1,D6            ;increment #of characters
000012F6  18C3                     454                  MOVE.B     D3,(A4)+         ;add ascii value
000012F8  60BE                     455                  BRA        CHEAPLOOP              
000012FA                           456  
000012FA  0603 0037                457  SPECCASE        ADD.B      #55,D3           ;for ascii A-G
000012FE  5206                     458                  ADD.B      #1,D6           ;increment #of characters
00001300  18C3                     459                  MOVE.B     D3,(A4)+        ;add ascii value
00001302  60B4                     460                  BRA        CHEAPLOOP
00001304                           461  DONE  
00001304  1A06                     462                  MOVE.B     D6,D5
00001306                           463  *                MOVE.W     #$8,D6
00001306  9A44                     464                  SUB.W      D4,D5
00001308  0C45 0000                465                  CMPI.W     #0,D5
0000130C  6700 000A                466                  BEQ        TOREVERSEIT
00001310  CBFC FFFF                467                  MULS.W     #-1,D5
00001314  CA7C 000F                468                  AND.W      #$000F,D5
00001318                           469                  
00001318                           470  *ZeroLoop           
00001318                           471  *                MOVE.B     #$0,(A5)+
00001318                           472  *                SUBI.W     #1,D5
00001318                           473  *                CMPI.B     #0,D5              
00001318                           474  *                BNE        ZeroLoop
00001318                           475  TOREVERSEIT  
00001318  0C44 0000                476                  CMPI.W      #0,D4           ;if its zero or less skip (D4 <= 0)
0000131C  6F00 0018                477                  BLE         SKIPZEROLOOP
00001320  0C05 0000                478                  CMPI.B      #0,D5 
00001324  6700 0010                479                  BEQ         SKIPZEROLOOP
00001328                           480                  
00001328  4281                     481  ZEROLOOP        CLR.L       D1
0000132A  18FC 0030                482                  MOVE.B     #$30,(A4)+
0000132E  5345                     483                  SUBI.W     #1,D5
00001330  0C05 0000                484                  CMPI.B     #0,D5 
00001334  66F2                     485                  BNE        ZEROLOOP    
00001336                           486                     
00001336                           487                  
00001336                           488  SKIPZEROLOOP
00001336  4E75                     489                  RTS             
00001338                           490   
00001338                           491  
00001338                           492  ;OPCODE, with output shoved in A5
00001338                           493  ******************************************************************************************************************
00001338                           494  
00001338  3602                     495  OPCODETIME      MOVE.W      D2,D3                 ;this wasnt here. had to add it other wise there will be nothing in D3
0000133A                           496                  *^unclear what this does, it just clears D3 - Rio
0000133A                           497                  
0000133A  0C42 4E71                498                  CMPI.W      #$4E71,D2        ;SPECIAL CASE FOR NOOP
0000133E  6700 0642                499                  BEQ         NOOPBRANCH
00001342  0C42 4E75                500                  CMPI.W      #$4E75,D2        ;SPECIAL CASE FOR RTS
00001346  6700 0664                501                  BEQ         RTSBRANCH
0000134A                           502                  
0000134A                           503                  ;then we use D3 to get the first four hex values
0000134A  E04B                     504                  LSR.W       #8,D3
0000134C  E84B                     505                  LSR.W       #4,D3       ;AAAA xxxx xxxx xxxx
0000134E                           506                  
0000134E                           507                  ;OPCODE GENERAL GROUP
0000134E  0C43 0004                508                  CMPI.W      #%0100,D3
00001352  6700 003E                509                  BEQ         OPCODEGROUP1
00001356  0C43 0006                510                  CMPI.W      #%0110,D3
0000135A  6700 0206                511                  BEQ         OPCODEGROUP2
0000135E  0C43 0008                512                  CMPI.W      #%1000,D3
00001362  6700 02F0                513                  BEQ         OPCODEGROUP3
00001366  0C43 0009                514                  CMPI.W      #%1001,D3
0000136A  6700 0336                515                  BEQ         OPCODEGROUP4
0000136E  0C43 000C                516                  CMPI.W      #%1100,D3
00001372  6700 039C                517                  BEQ         OPCODEGROUP5
00001376  0C43 000D                518                  CMPI.W      #%1101,D3
0000137A  6700 044E                519                  BEQ         OPCODEGROUP6
0000137E  0C43 000E                520                  CMPI.W      #%1110,D3
00001382  6700 04A8                521                  BEQ         OPCODEGROUP7
00001386  0C43 0003                522                  CMPI.W      #3,D3
0000138A  6F00 05A2                523                  BLE         OPCODEGROUP8
0000138E  6000 0646                524                  BRA         INVALIDBRANCH
00001392                           525                  
00001392  4EB9 00001A0A            526  OPCODEGROUP1    JSR         NEXTFOURHEX
00001398  0C43 0008                527                  CMPI.W      #%1000,D3
0000139C  6700 0026                528                  BEQ         MOVEMBRANCH 
000013A0  0C43 000C                529                  CMPI.W      #%1100,D3
000013A4  6700 001E                530                  BEQ         MOVEMBRANCH 
000013A8  0C43 0006                531                  CMPI.W      #%0110,D3
000013AC  6700 0060                532                  BEQ         NOTBRANCH   
000013B0  0C43 000E                533                  CMPI.W      #%1110,D3
000013B4  6700 012E                534                  BEQ         JSRMBRANCH  ;got to double check for this branch. too much unncertainty
000013B8  0803 0000                535                  BTST.L      #0,D3 ;OOGABOOGA
000013BC  6600 0164                536                  BNE         LEABRANCH       ;z == 0 if bit is 1 AND got to double check for this branch. too much unncertainty
000013C0  6000 0614                537                  BRA         INVALIDBRANCH
000013C4                           538                  
000013C4  4283                     539  MOVEMBRANCH     CLR.L   D3
000013C6  4EB9 00001CBC            540                  JSR     EAGROUP7
000013CC  18FC 0020                541                  MOVE.B  #' ',(A4)+
000013D0  4EB9 00001492            542                  JSR     getSizeFormat2
000013D6  18C3                     543                  MOVE.B  D3,(A4)+
000013D8  18FC 002E                544                  MOVE.B  #'.',(A4)+
000013DC  18FC 004D                545                  MOVE.B  #'M',(A4)+
000013E0  18FC 0045                546                  MOVE.B  #'E',(A4)+
000013E4  18FC 0056                547                  MOVE.B  #'V',(A4)+
000013E8  18FC 004F                548                  MOVE.B  #'O',(A4)+
000013EC  18FC 004D                549                  MOVE.B  #'M',(A4)+
000013F0  18FC 0020                550                  MOVE.B  #' ',(A4)+
000013F4  18FC 0020                551                  MOVE.B  #' ',(A4)+
000013F8  18FC 0020                552                  MOVE.B  #' ',(A4)+
000013FC  18FC 0020                553                  MOVE.B  #' ',(A4)+
00001400  4EB8 1270                554                  JSR     OUTPUTADDRESS
00001404  4EB9 00002036            555                  JSR     EAOUTPUT 
0000140A  6000 0C6C                556                  BRA     NEXTIO
0000140E                           557                                  
0000140E                           558  NOTBRANCH       ;check 7 and 8 and make sure they are  not 11 from 7 and 8
0000140E  4283                     559                  CLR.L   D3
00001410  3602                     560                  MOVE.W  D2,D3
00001412  ED4B                     561                  LSL     #6,D3
00001414  0C43 011B                562                  CMPI.W  #%0100011011,D3
00001418  6700 05BC                563                  BEQ     INVALIDBRANCH
0000141C  4283                     564                  CLR.L   D3 ;this is now going to hold size branch value
0000141E                           565                  ;should also check size bits
0000141E                           566  *                LEA     NOTMSG,A1
0000141E                           567  *                MOVE.B  #14,D0
0000141E                           568  *                TRAP    #15
0000141E  48E7 2000                569                  MOVEM.L D2,-(SP)
00001422  4EB9 00001CB2            570                  JSR     EAGROUP9
00001428  4CDF 0004                571                  MOVEM.L (SP)+,D2
0000142C                           572                  ;check if A4 is empty
0000142C                           573                  ;if so, then an invalid mustve occured. thus go directly to NEXTIO
0000142C  0C39 00FF 000025AA       574                  CMP.B   #$FF,(tempresult)
00001434  6700 0C42                575                  BEQ     NEXTIO
00001438  4EB9 0000146E            576                  JSR     getSizeFormat1
0000143E                           577                  ;compare size value here if needed
0000143E  18C3                     578                  MOVE.B  D3,(A4)+
00001440  18FC 002E                579                  MOVE.B  #'.',(A4)+
00001444  18FC 0054                580                  MOVE.B  #'T',(A4)+
00001448  18FC 004F                581                  MOVE.B  #'O',(A4)+
0000144C  18FC 004E                582                  MOVE.B  #'N',(A4)+
00001450  18FC 0020                583                  MOVE.B  #' ',(A4)+
00001454  18FC 0020                584                  MOVE.B  #' ',(A4)+
00001458  18FC 0020                585                  MOVE.B  #' ',(A4)+
0000145C  18FC 0020                586                  MOVE.B  #' ',(A4)+
00001460  4EB8 1270                587                  JSR     OUTPUTADDRESS
00001464                           588                  ;get size
00001464  4EB9 00002036            589                  JSR     EAOUTPUT
0000146A  6000 0C0C                590                  BRA     NEXTIO
0000146E                           591                  
0000146E                           592  getSizeFormat1
0000146E  4283                     593                  CLR.L   D3  
00001470  2602                     594                  MOVE.L  D2,D3
00001472  EC8B                     595                  LSR.L   #6,D3
00001474  C6BC 00000003            596                  AND.L   #%0000000011,D3 ;saves last two digits
0000147A  B63C 0002                597                  CMP.B   #2,D3
0000147E  6700 0054                598                  BEQ     PRINTLONGSIZE
00001482  B63C 0001                599                  CMP.B   #1,D3
00001486  6700 0054                600                  BEQ     PRINTWORDSIZE
0000148A                           601  *                LEA     BYTESIZE,A1
0000148A                           602  *                MOVE.B  #14,D0
0000148A                           603  *                TRAP    #15
0000148A  4283                     604                  CLR.L    D3
0000148C  163C 0042                605                  MOVE.B   #'B',D3
00001490                           606                  ;MOVE.B  #'B',(A4)+
00001490  4E75                     607                  RTS
00001492                           608                  
00001492                           609  getSizeFormat2  ;MOVEM
00001492  4283                     610                  CLR.L   D3  
00001494  2602                     611                  MOVE.L  D2,D3
00001496  EC8B                     612                  LSR.L   #6,D3
00001498  C6BC 00000001            613                  AND.L   #%0000000001,D3 ;saves last two digits
0000149E  B63C 0000                614                  CMP.B   #0,D3
000014A2  6700 0038                615                  BEQ     PRINTWORDSIZE
000014A6                           616  *                LEA     BYTESIZE,A1
000014A6                           617  *                MOVE.B  #14,D0
000014A6                           618  *                TRAP    #15
000014A6  4283                     619                  CLR.L    D3
000014A8  163C 004C                620                  MOVE.B   #'L',D3
000014AC                           621                  ;MOVE.B  #'W',(A4)+
000014AC  4E75                     622                  RTS   
000014AE                           623  
000014AE                           624  getSizeFormat3  ;MOVE
000014AE  4283                     625                  CLR.L   D3  
000014B0  2602                     626                  MOVE.L  D2,D3
000014B2  E08B                     627                  LSR.L   #8,D3
000014B4  E88B                     628                  LSR.L   #4,D3
000014B6  C6BC 00000003            629                  AND.L   #%0011,D3 ;saves last two digits
000014BC  B63C 0002                630                  CMP.B   #2,D3
000014C0  6700 0012                631                  BEQ     PRINTLONGSIZE
000014C4  B63C 0003                632                  CMP.B   #3,D3
000014C8  6700 0012                633                  BEQ     PRINTWORDSIZE
000014CC                           634  *                LEA     BYTESIZE,A1
000014CC                           635  *                MOVE.B  #14,D0
000014CC                           636  *                TRAP    #15
000014CC  4283                     637                  CLR.L    D3
000014CE  163C 0042                638                  MOVE.B   #'B',D3
000014D2                           639                  ;MOVE.B  #'B',(A4)+
000014D2  4E75                     640                  RTS             
000014D4                           641      
000014D4                           642  PRINTLONGSIZE
000014D4                           643  *                LEA     WORDSIZE,A1
000014D4                           644  *                MOVE.B  #14,D0
000014D4                           645  *                TRAP    #15
000014D4  4283                     646                  CLR.L    D3
000014D6  163C 004C                647                  MOVE.B   #'L',D3
000014DA                           648                  ;MOVE.B  #'L',(A4)+
000014DA  4E75                     649                  RTS  
000014DC                           650  
000014DC                           651  PRINTWORDSIZE
000014DC                           652  *                LEA     LONGSIZE,A1
000014DC                           653  *                MOVE.B  #14,D0
000014DC                           654  *                TRAP    #15
000014DC  4283                     655                  CLR.L    D3
000014DE  163C 0057                656                  MOVE.B   #'W',D3
000014E2                           657                  ;MOVE.B  #'W',(A4)+
000014E2  4E75                     658                  RTS
000014E4                           659                  
000014E4                           660  JSRMBRANCH      ;check 7 and 8 and make sure they are  not 11 from 7 and 8
000014E4  4283                     661                  CLR.L   D3
000014E6  3602                     662                  MOVE.W  D2,D3
000014E8  ED4B                     663                  LSL     #6,D3
000014EA  0C43 013A                664                  CMPI.W  #%0100111010,D3
000014EE  6700 04E6                665                  BEQ     INVALIDBRANCH
000014F2  4EB9 00001CB2            666                  JSR     EAGROUP9
000014F8  18FC 0052                667                  MOVE.B  #'R',(A4)+
000014FC  18FC 0053                668                  MOVE.B  #'S',(A4)+
00001500  18FC 004A                669                  MOVE.B  #'J',(A4)+
00001504  18FC 0020                670                  MOVE.B  #' ',(A4)+
00001508  18FC 0020                671                  MOVE.B  #' ',(A4)+
0000150C  18FC 0020                672                  MOVE.B  #' ',(A4)+
00001510  18FC 0020                673                  MOVE.B  #' ',(A4)+
00001514  4EB8 1270                674                  JSR     OUTPUTADDRESS
00001518  4EB9 00002036            675                  JSR     EAOUTPUT 
0000151E  6000 0B58                676                  BRA     NEXTIO
00001522                           677  
00001522                           678  LEABRANCH      ;check 7 and make sure its set to 1
00001522  0802 0007                679                  BTST.L  #7,D2
00001526  6700 04AE                680                  BEQ     INVALIDBRANCH   ;z == 1 if bit is 0
0000152A  4EB9 00001E02            681                  JSR     EAGROUP4LEA
00001530  18FC 0020                682                  MOVE.B  #' ',(A4)+
00001534  18FC 0020                683                  MOVE.B  #' ',(A4)+
00001538  18FC 0041                684                  MOVE.B  #'A',(A4)+
0000153C  18FC 0045                685                  MOVE.B  #'E',(A4)+
00001540  18FC 004C                686                  MOVE.B  #'L',(A4)+
00001544  18FC 0020                687                  MOVE.B  #' ',(A4)+
00001548  18FC 0020                688                  MOVE.B  #' ',(A4)+
0000154C  18FC 0020                689                  MOVE.B  #' ',(A4)+
00001550  18FC 0020                690                  MOVE.B  #' ',(A4)+
00001554  4EB8 1270                691                  JSR     OUTPUTADDRESS
00001558  4EB9 00002036            692                  JSR     EAOUTPUT 
0000155E  6000 0B18                693                  BRA     NEXTIO
00001562                           694                  
00001562  4EB9 00001A0A            695  OPCODEGROUP2    JSR         NEXTFOURHEX  
00001568  0C43 0000                696                  CMPI.W      #%0000,D3
0000156C  6700 001E                697                  BEQ         BRABRANCH   
00001570  0C43 0007                698                  CMPI.W      #%0111,D3
00001574  6700 004E                699                  BEQ         BEQBRANCH   
00001578  0C43 000E                700                  CMPI.W      #%1110,D3
0000157C  6700 0076                701                  BEQ         BGTBRANCH
00001580  0C43 000F                702                  CMPI.W      #%1111,D3
00001584  6700 009E                703                  BEQ         BLEBRANCH
00001588  6000 044C                704                  BRA         INVALIDBRANCH
0000158C                           705                  
0000158C                           706  BRABRANCH      ;check 9 and make sure its set to 0
0000158C  0802 0009                707                  BTST.L  #9,D2
00001590  6600 0444                708                  BNE     INVALIDBRANCH   ;z == 0 if bit is 1
00001594                           709  *                LEA     BRAMSG,A1
00001594                           710  *                MOVE.B  #14,D0
00001594                           711  *                TRAP    #15
00001594  4EB9 00001BCE            712                  JSR     EAGROUP5
0000159A  18FC 0041                713                  MOVE.B  #'A',(A4)+
0000159E  18FC 0052                714                  MOVE.B  #'R',(A4)+
000015A2  18FC 0042                715                  MOVE.B  #'B',(A4)+
000015A6  18FC 0020                716                  MOVE.B  #' ',(A4)+
000015AA  18FC 0020                717                  MOVE.B  #' ',(A4)+
000015AE  18FC 0020                718                  MOVE.B  #' ',(A4)+
000015B2  18FC 0020                719                  MOVE.B  #' ',(A4)+
000015B6  4EB8 1270                720                  JSR     OUTPUTADDRESS
000015BA  4EB9 00002036            721                  JSR     EAOUTPUT
000015C0  6000 0AB6                722                  BRA     NEXTIO
000015C4                           723                  
000015C4                           724  BEQBRANCH
000015C4                           725  *                LEA     BEQMSG,A1
000015C4                           726  *                MOVE.B  #14,D0
000015C4                           727  *                TRAP    #15
000015C4  4EB9 00001BCE            728                  JSR     EAGROUP5
000015CA  18FC 0051                729                  MOVE.B  #'Q',(A4)+
000015CE  18FC 0045                730                  MOVE.B  #'E',(A4)+
000015D2  18FC 0042                731                  MOVE.B  #'B',(A4)+
000015D6  18FC 0020                732                  MOVE.B  #' ',(A4)+
000015DA  18FC 0020                733                  MOVE.B  #' ',(A4)+
000015DE  18FC 0020                734                  MOVE.B  #' ',(A4)+
000015E2  18FC 0020                735                  MOVE.B  #' ',(A4)+
000015E6  4EB8 1270                736                  JSR     OUTPUTADDRESS
000015EA  4EB9 00002036            737                  JSR     EAOUTPUT
000015F0  6000 0A86                738                  BRA     NEXTIO
000015F4                           739                  
000015F4                           740  BGTBRANCH
000015F4                           741  *                LEA     BGTMSG,A1
000015F4                           742  *                MOVE.B  #14,D0
000015F4                           743  *                TRAP    #15
000015F4  4EB9 00001BCE            744                  JSR     EAGROUP5
000015FA  18FC 0054                745                  MOVE.B  #'T',(A4)+
000015FE  18FC 0047                746                  MOVE.B  #'G',(A4)+
00001602  18FC 0042                747                  MOVE.B  #'B',(A4)+
00001606  18FC 0020                748                  MOVE.B  #' ',(A4)+
0000160A  18FC 0020                749                  MOVE.B  #' ',(A4)+
0000160E  18FC 0020                750                  MOVE.B  #' ',(A4)+
00001612  18FC 0020                751                  MOVE.B  #' ',(A4)+
00001616  4EB8 1270                752                  JSR     OUTPUTADDRESS
0000161A  4EB9 00002036            753                  JSR     EAOUTPUT
00001620  6000 0A56                754                  BRA     NEXTIO
00001624                           755  BLEBRANCH
00001624                           756  *                LEA     BLEMSG,A1
00001624                           757  *                MOVE.B  #14,D0
00001624                           758  *                TRAP    #15
00001624  4EB9 00001BCE            759                  JSR     EAGROUP5
0000162A  18FC 0045                760                  MOVE.B  #'E',(A4)+
0000162E  18FC 004C                761                  MOVE.B  #'L',(A4)+
00001632  18FC 0042                762                  MOVE.B  #'B',(A4)+
00001636  18FC 0020                763                  MOVE.B  #' ',(A4)+
0000163A  18FC 0020                764                  MOVE.B  #' ',(A4)+
0000163E  18FC 0020                765                  MOVE.B  #' ',(A4)+
00001642  18FC 0020                766                  MOVE.B  #' ',(A4)+
00001646  4EB8 1270                767                  JSR     OUTPUTADDRESS
0000164A  4EB9 00002036            768                  JSR     EAOUTPUT
00001650  6000 0A26                769                  BRA     NEXTIO
00001654                           770                  
00001654                           771  OPCODEGROUP3    
00001654  4283                     772                  CLR.L   D3
00001656  3602                     773                  MOVE.W  D2,D3
00001658  EC4B                     774                  LSR.W   #6,D3
0000165A  C67C 0007                775                  AND.W   #%0000000111,D3
0000165E  0C43 0007                776                  CMPI.W  #7,D3
00001662  6700 0372                777                  BEQ     INVALIDBRANCH
00001666  4EB9 00001DEE            778                  JSR     EAGROUP4ALL
0000166C  18FC 0020                779                  MOVE.B  #' ',(A4)+
00001670  18FC 0020                780                  MOVE.B  #' ',(A4)+
00001674  18FC 0055                781                  MOVE.B  #'U',(A4)+
00001678  18FC 0056                782                  MOVE.B  #'V',(A4)+
0000167C  18FC 0049                783                  MOVE.B  #'I',(A4)+
00001680  18FC 0044                784                  MOVE.B  #'D',(A4)+
00001684  18FC 0020                785                  MOVE.B  #' ',(A4)+
00001688  18FC 0020                786                  MOVE.B  #' ',(A4)+
0000168C  18FC 0020                787                  MOVE.B  #' ',(A4)+
00001690  18FC 0020                788                  MOVE.B  #' ',(A4)+
00001694  4EB8 1270                789                  JSR     OUTPUTADDRESS
00001698  4EB9 00002036            790                  JSR     EAOUTPUT 
0000169E                           791                  
0000169E  6000 09D8                792                  BRA     NEXTIO
000016A2                           793                  
000016A2                           794  OPCODEGROUP4    ;check 7 to 8 (size) cannot be 11 AND if direction is 1 (8th bit), then 4th and 5th bit cannot be 0
000016A2  4283                     795                  CLR.L   D3
000016A4  0802 0006                796                  BTST    #6,D2 ;if set to 1, not sub
000016A8  6600 000E                797                  BNE     TESTSUBBRANCH   ;z == 0 if bit is 1
000016AC  0802 0008                798                  BTST    #8,D2
000016B0  6600 0006                799                  BNE     TESTSUBBRANCH   
000016B4  6000 000E                800                  BRA     TESTSUBBRANCH2  
000016B8                           801     
000016B8                           802  TESTSUBBRANCH
000016B8  0802 0007                803                  BTST    #7,D2 ;if set to 1, not sub
000016BC  6600 0318                804                  BNE     INVALIDBRANCH   ;z == 0 if bit is 1
000016C0  6000 0002                805                  BRA     TESTSUBBRANCH2  
000016C4                           806  
000016C4                           807               
000016C4                           808  TESTSUBBRANCH2  ;check if 5th and 4th bit is equal to zero. if so, it is invalid
000016C4  0802 0005                809                  BTST    #5,D2 ;if set to 1, not sub
000016C8  6600 0006                810                  BNE     SUBBRANCH3 ;z == 0 if bit is 1
000016CC  6000 000E                811                  BRA     SUBBRANCH
000016D0                           812                  
000016D0                           813  SUBBRANCH3 
000016D0  0802 0004                814                  BTST    #4,D2 ;if set to 1, not sub
000016D4  6700 0300                815                  BEQ     INVALIDBRANCH   ;z == 1 if bit is 0 
000016D8  6000 0002                816                  BRA     SUBBRANCH
000016DC                           817  
000016DC  4EB8 146E                818  SUBBRANCH       JSR     getSizeFormat1
000016E0  18C3                     819                  MOVE.B  D3,(A4)+
000016E2  18FC 002E                820                  MOVE.B  #'.',(A4)+
000016E6  18FC 0042                821                  MOVE.B  #'B',(A4)+
000016EA  18FC 0055                822                  MOVE.B  #'U',(A4)+
000016EE  18FC 0053                823                  MOVE.B  #'S',(A4)+
000016F2  18FC 0020                824                  MOVE.B  #' ',(A4)+
000016F6  18FC 0020                825                  MOVE.B  #' ',(A4)+
000016FA  18FC 0020                826                  MOVE.B  #' ',(A4)+
000016FE  18FC 0020                827                  MOVE.B  #' ',(A4)+
00001702  4EB8 1270                828                  JSR     OUTPUTADDRESS
00001706  4EB9 00002036            829                  JSR     EAOUTPUT 
0000170C  6000 096A                830                  BRA     NEXTIO
00001710                           831  
00001710  4EB9 00001A0A            832  OPCODEGROUP5    JSR     NEXTFOURHEX
00001716                           833                  ;JSR     NEXTNEXTFOURHEX 
00001716                           834                  
00001716  4283                     835                  CLR.L   D3  
00001718  3602                     836                  MOVE.W  D2,D3  
0000171A  C67C 01FF                837                  AND.W   #%0000000111111111,D3  
0000171E  EC4B                     838                  LSR.W   #6,D3  
00001720                           839                  
00001720  0C43 0007                840                  CMPI.W  #7,D3          
00001724  6700 0006                841                  BEQ     MULSTEST      ;got to double check for this branch. too much unncertainty. MAKE SURE ITS NOT ABCD AND EXG.6,7,8 must be 111
00001728  6000 005A                842                  BRA     ANDBRANCH       ;MUST CHECK (S cannot be 11) AND IF(D is one, must be Dn. MAKE SURE ITS NOT MULU
0000172C                           843  
0000172C                           844  MULSTEST      
0000172C  4283                     845                  CLR.L   D3
0000172E  3602                     846                  MOVE.W  D2,D3
00001730  EC4B                     847                  LSR.W   #6,D3
00001732                           848  MULSLOOP
00001732  0C04 0003                849                  CMPI.B  #3,D4
00001736  6700 0010                850                  BEQ     MULSBRANCH
0000173A  E34B                     851                  LSL     #1,D3
0000173C  0803 0000                852                  BTST    #0,D3
00001740  6600 0294                853                  BNE     INVALIDBRANCH   ;z == 1 if bit is 0. if bit is 0, then it cnnot be MULS. 
00001744  5244                     854                  ADDI    #1,D4
00001746  60EA                     855                  BRA     MULSLOOP
00001748                           856                  
00001748  4EB9 00001DEE            857  MULSBRANCH      JSR     EAGROUP4ALL
0000174E  18FC 0020                858                  MOVE.B  #' ',(A4)+
00001752  18FC 0020                859                  MOVE.B  #' ',(A4)+
00001756  18FC 0053                860                  MOVE.B  #'S',(A4)+
0000175A  18FC 004C                861                  MOVE.B  #'L',(A4)+
0000175E  18FC 0055                862                  MOVE.B  #'U',(A4)+
00001762  18FC 004D                863                  MOVE.B  #'M',(A4)+
00001766  18FC 0020                864                  MOVE.B  #' ',(A4)+
0000176A  18FC 0020                865                  MOVE.B  #' ',(A4)+
0000176E  18FC 0020                866                  MOVE.B  #' ',(A4)+
00001772  18FC 0020                867                  MOVE.B  #' ',(A4)+
00001776  4EB8 1270                868                  JSR     OUTPUTADDRESS
0000177A  4EB9 00002036            869                  JSR     EAOUTPUT 
00001780  6000 08F6                870                  BRA     NEXTIO
00001784                           871  
00001784                           872  ANDBRANCH                 
00001784                           873                  ;8,7,6 cannot be 011
00001784  4283                     874                  CLR.L   D3
00001786  3602                     875                  MOVE.W  D2,D3
00001788  EC4B                     876                  LSR.W   #6,D3
0000178A  C67C 0111                877                  AND.W   #$0000000111,D3
0000178E  B67C 0007                878                  CMP.W   #%111,D3
00001792  6700 0242                879                  BEQ     INVALIDBRANCH
00001796  4EB8 146E                880                  JSR     getSizeFormat1
0000179A  18C3                     881                  MOVE.B  D3,(A4)+
0000179C  18FC 002E                882                  MOVE.B  #'.',(A4)+
000017A0  18FC 0044                883                  MOVE.B  #'D',(A4)+
000017A4  18FC 004E                884                  MOVE.B  #'N',(A4)+
000017A8  18FC 0041                885                  MOVE.B  #'A',(A4)+
000017AC  18FC 0020                886                  MOVE.B  #' ',(A4)+
000017B0  18FC 0020                887                  MOVE.B  #' ',(A4)+
000017B4  18FC 0020                888                  MOVE.B  #' ',(A4)+
000017B8  18FC 0020                889                  MOVE.B  #' ',(A4)+
000017BC  4EB8 1270                890                  JSR     OUTPUTADDRESS
000017C0  4EB9 00002036            891                  JSR     EAOUTPUT 
000017C6  6000 08B0                892                  BRA     NEXTIO 
000017CA                           893                  
000017CA                           894  
000017CA                           895  OPCODEGROUP6    ;first check size
000017CA  4243                     896                  CLR.W   D3
000017CC  3602                     897                  MOVE.W  D2,D3
000017CE  EC4B                     898                  LSR.W   #6,D3
000017D0  C67C 0003                899                  AND.W   #%0000000011,D3
000017D4  B67C 0003                900                  CMP.W   #3,D3
000017D8  6700 01FC                901                  BEQ     INVALIDBRANCH
000017DC  4243                     902                  CLR.W   D3
000017DE  3602                     903                  MOVE.W  D2,D3                ;then check direction. if 1, check 4th and 5th bit. if they are both 0, its invalid
000017E0  0803 0008                904                  BTST    #8,D3
000017E4                           905                  
000017E4                           906  PRINTADD
000017E4  6700 0036                907                  BEQ     TESTADD   ;z == 0 if bit is 1. if bit is 1, then may be invalid    
000017E8  4EB8 146E                908                  JSR     getSizeFormat1 
000017EC  18C3                     909                  MOVE.B  D3,(A4)+           
000017EE  18FC 002E                910                  MOVE.B  #'.',(A4)+
000017F2  18FC 0044                911                  MOVE.B  #'D',(A4)+
000017F6  18FC 0044                912                  MOVE.B  #'D',(A4)+
000017FA  18FC 0041                913                  MOVE.B  #'A',(A4)+
000017FE  18FC 0020                914                  MOVE.B  #' ',(A4)+
00001802  18FC 0020                915                  MOVE.B  #' ',(A4)+
00001806  18FC 0020                916                  MOVE.B  #' ',(A4)+
0000180A  18FC 0020                917                  MOVE.B  #' ',(A4)+
0000180E  4EB8 1270                918                  JSR     OUTPUTADDRESS
00001812  4EB9 00002036            919                  JSR     EAOUTPUT 
00001818  6000 085E                920                  BRA     NEXTIO
0000181C                           921                  
0000181C  E94B                     922  TESTADD         LSL.W   #4,D3
0000181E  C67C 0030                923                  AND.W   #%00000000000110000,D3
00001822  B67C 0000                924                  CMP.W   #0,D3
00001826  6700 01AE                925                  BEQ     INVALIDBRANCH
0000182A  60B8                     926                  BRA     PRINTADD
0000182C                           927                  
0000182C                           928  
0000182C                           929  
0000182C  4EB9 00001A0A            930  OPCODEGROUP7    JSR     NEXTFOURHEX
00001832                           931                  ;by this point we cleared D3 and have have the next four hex value in D3 
00001832  0C43 0001                932                  CMPI.W  #1,D3
00001836  6F00 001E                933                  BLE     ASLMEMBRANCH
0000183A  0C43 0003                934                  CMPI.W  #3,D3
0000183E  6F00 0046                935                  BLE     LSLMEMBRANCH
00001842  4283                     936                  CLR.L   D3
00001844  3602                     937                  MOVE.W  D2,D3
00001846  0803 0003                938                  BTST    #3,D3
0000184A  6700 006A                939                  BEQ     ASLREGBRANCH            ;z == 1 if bit is 0
0000184E  6600 00A2                940                  BNE     LSLREGBRANCH            ;z == 0 if bit is 1 
00001852  6000 0182                941                  BRA     INVALIDBRANCH
00001856                           942                  
00001856                           943  ASLMEMBRANCH
00001856  4EB9 00001CB2            944                  JSR     EAGROUP9
0000185C  18FC 004C                945                  MOVE.B  #'L',(A4)+
00001860  18FC 0053                946                  MOVE.B  #'S',(A4)+
00001864  18FC 0041                947                  MOVE.B  #'A',(A4)+
00001868  18FC 0020                948                  MOVE.B  #' ',(A4)+
0000186C  18FC 0020                949                  MOVE.B  #' ',(A4)+
00001870  18FC 0020                950                  MOVE.B  #' ',(A4)+
00001874  18FC 0020                951                  MOVE.B  #' ',(A4)+
00001878  4EB8 1270                952                  JSR     OUTPUTADDRESS
0000187C  4EB9 00002036            953                  JSR     EAOUTPUT 
00001882  6000 07F4                954                  BRA     NEXTIO                
00001886                           955  
00001886                           956  LSLMEMBRANCH
00001886  4EB9 00001CB2            957                  JSR     EAGROUP9
0000188C  18FC 004C                958                  MOVE.B  #'L',(A4)+
00001890  18FC 0053                959                  MOVE.B  #'S',(A4)+
00001894  18FC 004C                960                  MOVE.B  #'L',(A4)+
00001898  18FC 0020                961                  MOVE.B  #' ',(A4)+
0000189C  18FC 0020                962                  MOVE.B  #' ',(A4)+
000018A0  18FC 0020                963                  MOVE.B  #' ',(A4)+
000018A4  18FC 0020                964                  MOVE.B  #' ',(A4)+
000018A8  4EB8 1270                965                  JSR     OUTPUTADDRESS
000018AC  4EB9 00002036            966                  JSR     EAOUTPUT 
000018B2  6000 07C4                967                  BRA     NEXTIO 
000018B6                           968  
000018B6                           969  ASLREGBRANCH    ;have to check size
000018B6  ED4B                     970                  LSL.W   #6,D3
000018B8  C67C 0011                971                  AND.W   #$0000000011,D3
000018BC  0C43 0003                972                  CMPI.W  #3,D3
000018C0  6700 0114                973                  BEQ     INVALIDBRANCH
000018C4  18FC 002E                974                  MOVE.B  #'.',(A4)+
000018C8  18FC 004C                975                  MOVE.B  #'L',(A4)+
000018CC  18FC 0053                976                  MOVE.B  #'S',(A4)+
000018D0  18FC 0041                977                  MOVE.B  #'A',(A4)+
000018D4  18FC 0020                978                  MOVE.B  #' ',(A4)+
000018D8  18FC 0020                979                  MOVE.B  #' ',(A4)+
000018DC  18FC 0020                980                  MOVE.B  #' ',(A4)+
000018E0  18FC 0020                981                  MOVE.B  #' ',(A4)+
000018E4  4EB8 1270                982                  JSR     OUTPUTADDRESS
000018E8  4EB9 00002036            983                  JSR     EAOUTPUT 
000018EE  6000 0788                984                  BRA     NEXTIO 
000018F2                           985  
000018F2                           986  LSLREGBRANCH    ;have to check size
000018F2  ED4B                     987                  LSL.W   #6,D3
000018F4  C67C 0011                988                  AND.W   #$0000000011,D3
000018F8  0C43 0003                989                  CMPI.W  #3,D3
000018FC  6700 00D8                990                  BEQ     INVALIDBRANCH
00001900  18FC 002E                991                  MOVE.B  #'.',(A4)+
00001904  18FC 004C                992                  MOVE.B  #'L',(A4)+
00001908  18FC 0053                993                  MOVE.B  #'S',(A4)+
0000190C  18FC 004C                994                  MOVE.B  #'L',(A4)+
00001910  18FC 0020                995                  MOVE.B  #' ',(A4)+
00001914  18FC 0020                996                  MOVE.B  #' ',(A4)+
00001918  18FC 0020                997                  MOVE.B  #' ',(A4)+
0000191C  18FC 0020                998                  MOVE.B  #' ',(A4)+
00001920  4EB8 1270                999                  JSR     OUTPUTADDRESS
00001924  4EB9 00002036           1000                  JSR     EAOUTPUT 
0000192A  6000 074C               1001                  BRA     NEXTIO      
0000192E                          1002  
0000192E                          1003  OPCODEGROUP8    ;check dest mode does not equal to 001
0000192E  4283                    1004                  CLR.L   D3
00001930  3602                    1005                  MOVE.W  D2,D3
00001932  EC4B                    1006                  LSR.W   #6,D3
00001934  C67C 000F               1007                  AND.W   #$00F,D3
00001938  C63C 0007               1008                  AND.B   #%0111,D3
0000193C  B67C 0001               1009                  CMP.W   #%001,D3
00001940  6700 0094               1010                  BEQ     INVALIDBRANCH
00001944  4EB8 14AE               1011                  JSR     getSizeFormat3
00001948  4EB9 00001BA8           1012                  JSR     EAGROUP8
0000194E  18C3                    1013                  MOVE.B  D3,(A4)+
00001950  18FC 002E               1014                  MOVE.B  #'.',(A4)+
00001954  18FC 0045               1015                  MOVE.B  #'E',(A4)+
00001958  18FC 0056               1016                  MOVE.B  #'V',(A4)+
0000195C  18FC 004F               1017                  MOVE.B  #'O',(A4)+
00001960  18FC 004D               1018                  MOVE.B  #'M',(A4)+
00001964  18FC 0020               1019                  MOVE.B  #' ',(A4)+
00001968  18FC 0020               1020                  MOVE.B  #' ',(A4)+                
0000196C  18FC 0020               1021                  MOVE.B  #' ',(A4)+
00001970  18FC 0020               1022                  MOVE.B  #' ',(A4)+ 
00001974  4EB8 1270               1023                  JSR     OUTPUTADDRESS
00001978  4EB9 00002036           1024                  JSR     EAOUTPUT 
0000197E  6000 06F8               1025                  BRA     NEXTIO                
00001982                          1026  
00001982                          1027  NOOPBRANCH
00001982  18FC 0050               1028                  MOVE.B  #'P',(A4)+
00001986  18FC 004F               1029                  MOVE.B  #'O',(A4)+
0000198A  18FC 004E               1030                  MOVE.B  #'N',(A4)+
0000198E  18FC 0020               1031                  MOVE.B  #' ',(A4)+ 
00001992  18FC 0020               1032                  MOVE.B  #' ',(A4)+
00001996  18FC 0020               1033                  MOVE.B  #' ',(A4)+
0000199A  18FC 0020               1034                  MOVE.B  #' ',(A4)+
0000199E  4EB8 1270               1035                  JSR     OUTPUTADDRESS
000019A2  4EB9 00002036           1036                  JSR     EAOUTPUT                
000019A8  6000 06CE               1037                  BRA     NEXTIO
000019AC                          1038  
000019AC                          1039  RTSBRANCH
000019AC  18FC 0053               1040                  MOVE.B  #'S',(A4)+
000019B0  18FC 0054               1041                  MOVE.B  #'T',(A4)+
000019B4  18FC 0052               1042                  MOVE.B  #'R',(A4)+
000019B8  18FC 0020               1043                  MOVE.B  #' ',(A4)+ 
000019BC  18FC 0020               1044                  MOVE.B  #' ',(A4)+
000019C0  18FC 0020               1045                  MOVE.B  #' ',(A4)+
000019C4  18FC 0020               1046                  MOVE.B  #' ',(A4)+
000019C8  4EB8 1270               1047                  JSR     OUTPUTADDRESS
000019CC  4EB9 00002036           1048                  JSR     EAOUTPUT                
000019D2  6000 06A4               1049                  BRA     NEXTIO
000019D6                          1050                  
000019D6                          1051  INVALIDBRANCH   *LEA     INVALIDMSG,A1
000019D6                          1052  *                MOVE.B  #14,D0
000019D6                          1053  *                TRAP    #15
000019D6  4EB9 00001A22           1054                  JSR     EAGROUPINVALID
000019DC  18FC 0041               1055                  MOVE.B  #'A',(A4)+
000019E0  18FC 0054               1056                  MOVE.B  #'T',(A4)+
000019E4  18FC 0041               1057                  MOVE.B  #'A',(A4)+
000019E8  18FC 0044               1058                  MOVE.B  #'D',(A4)+
000019EC  18FC 0020               1059                  MOVE.B  #' ',(A4)+
000019F0  18FC 0020               1060                  MOVE.B  #' ',(A4)+
000019F4  18FC 0020               1061                  MOVE.B  #' ',(A4)+
000019F8  18FC 0020               1062                  MOVE.B  #' ',(A4)+
000019FC  4EB8 1270               1063                  JSR     OUTPUTADDRESS
00001A00  4EB9 00002036           1064                  JSR     EAOUTPUT
00001A06  6000 0670               1065                  BRA     NEXTIO
00001A0A                          1066                  
00001A0A  4283                    1067  NEXTFOURHEX     CLR.L   D3
00001A0C  3602                    1068                  MOVE.W  D2,D3
00001A0E  E04B                    1069                  LSR.W   #8,D3
00001A10  C67C 000F               1070                  AND.W   #%00001111,D3 ;0000 AAAA [XXXX XXXX]
00001A14  4E75                    1071                  RTS    
00001A16                          1072  
00001A16  4283                    1073  NEXTNEXTFOURHEX CLR.L   D3  
00001A18  3602                    1074                  MOVE.W  D2,D3  
00001A1A  C67C 00F0               1075                  AND.W   #$00F0,D3  
00001A1E  E84B                    1076                  LSR.W   #4,D3   ;0000 0000 AAAA [XXXX]
00001A20  4E75                    1077                  RTS      
00001A22                          1078  
00001A22                          1079  ;EA                
00001A22                          1080  ******************************************************************************************************************
00001A22                          1081  EAGROUPINVALID
00001A22                          1082  *                MOVE.B      #$23,D1
00001A22                          1083  *                MOVE.L      #6,D0
00001A22                          1084  *                TRAP        #15
00001A22                          1085  *                MOVE.B      #$24,D1
00001A22                          1086  *                MOVE.L      #6,D0
00001A22                          1087  *                TRAP        #15
00001A22  2202                    1088                  MOVE.L      D2,D1
00001A24  78FF                    1089                  MOVE.L      #-1,D4
00001A26  48E7 3F72               1090                  MOVEM.L     D2-D7/A1-A3/A6,-(sp)   
00001A2A  7804                    1091                  MOVE.L      #$4,D4
00001A2C  4EB8 12AC               1092                  JSR         HEXOUTPUT
00001A30  4CDF 4EFC               1093                  MOVEM.L  (sp)+,D2-D7/A1-A3/A6
00001A34  18FC 0024               1094                  MOVE.B      #'$',(A4)+
00001A38  18FC 0023               1095                  MOVE.B      #'#',(A4)+
00001A3C  18FC 0020               1096                  MOVE.B      #' ',(A4)+
00001A40  18FC 0020               1097                  MOVE.B      #' ',(A4)+
00001A44  18FC 0020               1098                  MOVE.B      #' ',(A4)+
00001A48  18FC 0020               1099                  MOVE.B      #' ',(A4)+
00001A4C  4E75                    1100                  RTS
00001A4E                          1101  
00001A4E                          1102  ;EAGROUP8
00001A4E                          1103              
00001A4E                          1104  get0to2        *src register 
00001A4E  3E02                    1105                  MOVE.W  D2,D7     
00001A50  E747                    1106                  ASL.W   #3,D7                                            
00001A52  4E75                    1107                  RTS
00001A54                          1108  
00001A54                          1109  get3to5        *src addressing
00001A54  3E02                    1110                  MOVE.W D2,D7    
00001A56                          1111                                                             
00001A56  4E75                    1112                  RTS   
00001A58                          1113  
00001A58                          1114  get6to8        *dest addressing
00001A58  3E02                    1115                  MOVE.W D2,D7       
00001A5A                          1116                                                              
00001A5A  4E75                    1117                  RTS
00001A5C                          1118  
00001A5C                          1119  get9to11       *dest register    
00001A5C  3E02                    1120                  MOVE.W D2,D7
00001A5E                          1121                                                                           
00001A5E  4E75                    1122                  RTS             
00001A60                          1123  
00001A60                          1124  CONVERT_MODE_REG    *converts mode and register
00001A60                          1125                      *first find mode
00001A60                          1126                      *then output register
00001A60                          1127                  
00001A60  BA7C 0000               1128                  CMP.W   #$0000,D5    *Dn
00001A64  6700 002C               1129                  BEQ     DATA_REG
00001A68                          1130                  
00001A68  BA7C 0001               1131                  CMP.W   #$0001,D5    *An
00001A6C  6700 0036               1132                  BEQ     ADD_REG
00001A70                          1133                  
00001A70  BA7C 0010               1134                  CMP.W   #$0010,D5    *(An)
00001A74  6700 0040               1135                  BEQ     INDIRECT_REG
00001A78                          1136                  
00001A78  BA7C 0011               1137                  CMP.W   #$0011,D5    *(An)+
00001A7C  6700 0052               1138                  BEQ     INCREMENT_REG
00001A80                          1139                  
00001A80  BA7C 0100               1140                  CMP.W   #$0100,D5    *-(An)
00001A84  6700 0064               1141                  BEQ     DECREMENT_REG
00001A88                          1142                  
00001A88  BA7C 0111               1143                  CMP.W   #$0111,D5    *immediate
00001A8C  6700 007A               1144                  BEQ     IMMEDIATE_REG
00001A90  4E75                    1145                  RTS  
00001A92                          1146                  
00001A92                          1147  DATA_REG        *print D then the register
00001A92  6100 0086               1148                  BSR     CONVERT_REG
00001A96  18FC 0044               1149                  MOVE.B      #'D',(A4)+
00001A9A  18FC 0020               1150                  MOVE.B      #' ',(A4)+
00001A9E  18FC 0020               1151                  MOVE.B      #' ',(A4)+
00001AA2  4E75                    1152                  RTS      
00001AA4                          1153  
00001AA4                          1154  ADD_REG         *print A then the register
00001AA4  6100 0074               1155                  BSR         CONVERT_REG
00001AA8  18FC 0041               1156                  MOVE.B      #'A',(A4)+
00001AAC  18FC 0020               1157                  MOVE.B      #' ',(A4)+
00001AB0  18FC 0020               1158                  MOVE.B      #' ',(A4)+
00001AB4  4E75                    1159                  RTS      
00001AB6                          1160  
00001AB6                          1161  INDIRECT_REG    *print (A then register then )
00001AB6  18FC 0029               1162                  MOVE.B      #')',(A4)+
00001ABA  6100 005E               1163                  BSR         CONVERT_REG
00001ABE  18FC 0041               1164                  MOVE.B      #'A',(A4)+
00001AC2  18FC 0028               1165                  MOVE.B      #'(',(A4)+
00001AC6  18FC 0020               1166                  MOVE.B      #' ',(A4)+
00001ACA  18FC 0020               1167                  MOVE.B      #' ',(A4)+
00001ACE  4E75                    1168                  RTS 
00001AD0                          1169  
00001AD0                          1170  INCREMENT_REG   *print (A then reigster then )
00001AD0  18FC 0029               1171                  MOVE.B      #')',(A4)+
00001AD4  6100 0044               1172                  BSR         CONVERT_REG
00001AD8  18FC 0041               1173                  MOVE.B      #'A',(A4)+
00001ADC  18FC 0028               1174                  MOVE.B      #'(',(A4)+
00001AE0  18FC 0020               1175                  MOVE.B      #' ',(A4)+
00001AE4  18FC 0020               1176                  MOVE.B      #' ',(A4)+
00001AE8  4E75                    1177                  RTS 
00001AEA                          1178                  
00001AEA                          1179  DECREMENT_REG   *print -(A then register then )
00001AEA  18FC 0029               1180                  MOVE.B      #')',(A4)+
00001AEE  6100 002A               1181                  BSR         CONVERT_REG
00001AF2  18FC 0041               1182                  MOVE.B      #'A',(A4)+
00001AF6  18FC 0028               1183                  MOVE.B      #'(',(A4)+
00001AFA  18FC 002D               1184                  MOVE.B      #'-',(A4)+
00001AFE  18FC 0020               1185                  MOVE.B      #' ',(A4)+
00001B02  18FC 0020               1186                  MOVE.B      #' ',(A4)+
00001B06  4E75                    1187                  RTS
00001B08                          1188                  
00001B08                          1189  IMMEDIATE_REG   
00001B08  6100 007C               1190                  BSR         GET_IMMEDIATE
00001B0C  18FC 0023               1191                  MOVE.B      #'#',(A4)+
00001B10  18FC 0020               1192                  MOVE.B      #' ',(A4)+
00001B14  18FC 0020               1193                  MOVE.B      #' ',(A4)+
00001B18  4E75                    1194                  RTS
00001B1A                          1195  
00001B1A                          1196  CONVERT_REG     *compare and print the number
00001B1A  BC7C 0000               1197                  CMP.W       #$0000,D6
00001B1E  6600 0008               1198                  BNE         NUM1
00001B22  18FC 0030               1199                  MOVE.B      #'0',(A4)+
00001B26  4E75                    1200                  RTS
00001B28                          1201                  
00001B28  BC7C 0001               1202  NUM1            CMP.W       #$0001,D6
00001B2C  6600 0008               1203                  BNE         NUM2
00001B30  18FC 0031               1204                  MOVE.B      #'1',(A4)+
00001B34  4E75                    1205                  RTS
00001B36                          1206                 
00001B36  BC7C 0010               1207  NUM2            CMP.W       #$0010,D6
00001B3A  6600 0008               1208                  BNE         NUM3
00001B3E  18FC 0032               1209                  MOVE.B      #'2',(A4)+
00001B42  4E75                    1210                  RTS
00001B44                          1211                  
00001B44  BC7C 0011               1212  NUM3            CMP.W       #$0011,D6
00001B48  6600 0008               1213                  BNE         NUM4
00001B4C  18FC 0033               1214                  MOVE.B      #'3',(A4)+
00001B50  4E75                    1215                  RTS
00001B52                          1216                  
00001B52  BC7C 0100               1217  NUM4            CMP.W       #$0100,D6
00001B56  6600 0008               1218                  BNE         NUM5
00001B5A  18FC 0034               1219                  MOVE.B      #'4',(A4)+
00001B5E  4E75                    1220                  RTS
00001B60                          1221                  
00001B60  BC7C 0101               1222  NUM5            CMP.W       #$0101,D6
00001B64  6600 0008               1223                  BNE         NUM6
00001B68  18FC 0035               1224                  MOVE.B      #'5',(A4)+
00001B6C  4E75                    1225                  RTS
00001B6E                          1226                  
00001B6E  BC7C 0110               1227  NUM6            CMP.W       #$0110,D6
00001B72  6600 0008               1228                  BNE         NUM7
00001B76  18FC 0036               1229                  MOVE.B      #'6',(A4)+
00001B7A  4E75                    1230                  RTS
00001B7C                          1231                  
00001B7C  BC7C 0111               1232  NUM7            CMP.W       #$0111,D6
00001B80  18FC 0037               1233                  MOVE.B      #'7',(A4)+
00001B84  4E75                    1234                  RTS
00001B86                          1235                  
00001B86                          1236  GET_IMMEDIATE   *find out what immediate value is
00001B86                          1237                  *get size
00001B86  BC7C 0000               1238                  CMP.W       #$000,D6
00001B8A  6700 000C               1239                  BEQ         IMM_WORD
00001B8E  BC7C 0001               1240                  CMP.W       #$001,D6
00001B92  6700 000E               1241                  BEQ         IMM_LONG
00001B96                          1242                  
00001B96  4E75                    1243                  RTS
00001B98                          1244                  
00001B98  4241                    1245  IMM_WORD        CLR         D1
00001B9A  321E                    1246                  MOVE.W      (A6)+,D1         
00001B9C  4EB8 12AC               1247                  JSR         HEXOUTPUT
00001BA0  4E75                    1248                  RTS
00001BA2                          1249                  
00001BA2  61F4                    1250  IMM_LONG        BSR         IMM_WORD
00001BA4  61F2                    1251                  BSR         IMM_WORD
00001BA6  4E75                    1252                  RTS
00001BA8                          1253                  
00001BA8                          1254  
00001BA8                          1255  EAGROUP8     
00001BA8  6100 FEAE               1256                  BSR     get6to8            *get dest addressing
00001BAC  2A07                    1257                  MOVE.L  D7,D5
00001BAE                          1258                  
00001BAE  6100 FEAC               1259                  BSR     get9to11            *get dest register
00001BB2  2C07                    1260                  MOVE.L  D7,D6
00001BB4                          1261                  
00001BB4  6100 FEAA               1262                  BSR     CONVERT_MODE_REG    *convert the dest add/reg and output
00001BB8  18FC 002C               1263                  MOVE.B  #',',(A4)+
00001BBC                          1264  
00001BBC                          1265                  
00001BBC  6100 FE96               1266                  BSR     get3to5            *get src addressing
00001BC0  2207                    1267                  MOVE.L  D7,D1
00001BC2                          1268                  
00001BC2  6100 FE8A               1269                  BSR     get0to2           *get src register
00001BC6  2607                    1270                  MOVE.L  D7,D3
00001BC8                          1271                  
00001BC8  6100 FE96               1272                  BSR     CONVERT_MODE_REG    *convert src add/reg and output
00001BCC  4E75                    1273                  RTS
00001BCE                          1274  
00001BCE                          1275  
00001BCE                          1276  
00001BCE                          1277  EAGROUP5
00001BCE                          1278  ;d1 stores address and d2 holds displacement value. 
00001BCE                          1279                      
00001BCE                          1280  ;6000
00001BCE  B47C 6000               1281                      CMP.W       #$6000,D2 
00001BD2  6700 00A4               1282                      BEQ         EAGROUP5_SIZEW  
00001BD6  B47C 6E00               1283                      CMP.W       #$6E00,D2 
00001BDA  6700 009C               1284                      BEQ         EAGROUP5_SIZEW 
00001BDE  B47C 6F00               1285                      CMP.W       #$6F00,D2 
00001BE2  6700 0094               1286                      BEQ         EAGROUP5_SIZEW  
00001BE6  B47C 6700               1287                      CMP.W       #$6700,D2 
00001BEA  6700 008C               1288                      BEQ         EAGROUP5_SIZEW   
00001BEE                          1289                      
00001BEE                          1290                      ;byte size instruction
00001BEE  220A                    1291                      MOVE.L  A2,D1
00001BF0                          1292  *                    SUBI.L  #2,D1
00001BF0  C47C 00FF               1293                      AND.W   #$00FF,D2
00001BF4  0802 0007               1294                      BTST    #$7,D2
00001BF8  6700 0032               1295                      BEQ     EAGROUP5_ADD      ;z == 0 if bit is 1 AND got to double check for this branch. too much unncertainty   
00001BFC  C5FC FFFF               1296                      MULS.W  #-1,D2
00001C00  C47C 00FF               1297                      AND.W   #$00FF,D2
00001C04  9242                    1298                      SUB.W   D2,D1
00001C06  7808                    1299                      MOVE.L  #8,D4
00001C08  48E7 3F72               1300                      MOVEM.L D2-D7/A1-A3/A6,-(sp)
00001C0C  7808                    1301                      MOVE.L  #8,D4
00001C0E  4EB8 12AC               1302                      JSR     HEXOUTPUT
00001C12  4CDF 4EFC               1303                      MOVEM.L  (sp)+,D2-D7/A1-A3/A6
00001C16  18FC 0024               1304                      MOVE.B      #'$',(A4)+
00001C1A                          1305  *                    MOVE.L      #6,D0
00001C1A                          1306  *                    TRAP        #15
00001C1A                          1307  
00001C1A                          1308                  
00001C1A  18FC 0020               1309                      MOVE.B      #' ',(A4)+
00001C1E                          1310  *                    MOVE.L      #6,D0
00001C1E                          1311  *                    TRAP        #15
00001C1E                          1312                      
00001C1E  18FC 0020               1313                      MOVE.B      #' ',(A4)+
00001C22                          1314  *                    MOVE.L      #6,D0
00001C22                          1315  *                    TRAP        #15
00001C22                          1316  
00001C22  18FC 0042               1317                      MOVE.B      #'B',(A4)+
00001C26                          1318  *                    MOVE.L      #6,D0
00001C26                          1319  *                    TRAP        #15
00001C26                          1320                      
00001C26                          1321                                                              
00001C26  18FC 002E               1322                      MOVE.B      #'.',(A4)+
00001C2A                          1323  *                    MOVE.L      #6,D0
00001C2A                          1324  *                    TRAP        #15
00001C2A                          1325                      
00001C2A  4E75                    1326                      RTS
00001C2C                          1327  EAGROUP5_ADD
00001C2C  D242                    1328                      ADD.W   D2,D1
00001C2E  48E7 3F72               1329                      MOVEM.L D2-D7/A1-A3/A6,-(sp)
00001C32  7808                    1330                      MOVE.L  #8,D4
00001C34  4EB8 12AC               1331                      JSR     HEXOUTPUT
00001C38  4CDF 4EFC               1332                      MOVEM.L  (sp)+,D2-D7/A1-A3/A6
00001C3C  18FC 0024               1333                      MOVE.B      #'$',(A4)+
00001C40                          1334  *                    MOVE.L      #6,D0
00001C40                          1335  *                    TRAP        #15
00001C40                          1336  
00001C40                          1337                  
00001C40  18FC 0020               1338                      MOVE.B      #' ',(A4)+
00001C44                          1339  *                    MOVE.L      #6,D0
00001C44                          1340  *                    TRAP        #15
00001C44                          1341                      
00001C44  18FC 0020               1342                      MOVE.B      #' ',(A4)+
00001C48                          1343  *                    MOVE.L      #6,D0
00001C48                          1344  *                    TRAP        #15
00001C48                          1345  
00001C48  18FC 0042               1346                      MOVE.B      #'B',(A4)+
00001C4C                          1347  *                    MOVE.L      #6,D0
00001C4C                          1348  *                    TRAP        #15
00001C4C                          1349                      
00001C4C                          1350                                                              
00001C4C  18FC 002E               1351                      MOVE.B      #'.',(A4)+
00001C50                          1352  *                    MOVE.L      #6,D0
00001C50                          1353  *                    TRAP        #15
00001C50                          1354                      
00001C50  4E75                    1355                      RTS
00001C52                          1356  
00001C52                          1357  EAGROUP5_ADDWORD
00001C52  D242                    1358                      ADD.W   D2,D1
00001C54  48E7 3F72               1359                      MOVEM.L D2-D7/A1-A3/A6,-(sp)
00001C58  7808                    1360                      MOVE.L  #8,D4
00001C5A  4EB8 12AC               1361                      JSR     HEXOUTPUT
00001C5E  4CDF 4EFC               1362                      MOVEM.L  (sp)+,D2-D7/A1-A3/A6
00001C62  18FC 0024               1363                      MOVE.B      #'$',(A4)+
00001C66                          1364  *                    MOVE.L      #6,D0
00001C66                          1365  *                    TRAP        #15
00001C66                          1366  
00001C66                          1367                  
00001C66  18FC 0020               1368                      MOVE.B      #' ',(A4)+
00001C6A                          1369  *                    MOVE.L      #6,D0
00001C6A                          1370  *                    TRAP        #15
00001C6A                          1371                      
00001C6A  18FC 0020               1372                      MOVE.B      #' ',(A4)+
00001C6E                          1373  *                    MOVE.L      #6,D0
00001C6E                          1374  *                    TRAP        #15
00001C6E                          1375  
00001C6E  18FC 0057               1376                      MOVE.B      #'W',(A4)+
00001C72                          1377  *                    MOVE.L      #6,D0
00001C72                          1378  *                    TRAP        #15
00001C72                          1379                      
00001C72                          1380                                                              
00001C72  18FC 002E               1381                      MOVE.B      #'.',(A4)+
00001C76                          1382  *                    MOVE.L      #6,D0
00001C76                          1383  *                    TRAP        #15
00001C76                          1384                      
00001C76  4E75                    1385                      RTS
00001C78                          1386        
00001C78                          1387  EAGROUP5_SIZEW
00001C78                          1388                      
00001C78  4242                    1389                      CLR.W    D2
00001C7A  220A                    1390                      MOVE.L   A2,D1
00001C7C                          1391  *                   SUBI.L  #2,D1
00001C7C  341A                    1392                      MOVE.W  (A2)+,D2
00001C7E  0802 0015               1393                      BTST    #$15,D2
00001C82  0803 0000               1394                      BTST.L  #0,D3          ;z == 0 if bit is 1 AND got to double check for this branch. too much unncertainty  
00001C86  67CA                    1395                      BEQ     EAGROUP5_ADDWORD
00001C88  C5FC FFFF               1396                      MULS.W  #-1,D2
00001C8C  9242                    1397                      SUB.W   D2,D1
00001C8E  48E7 3F72               1398                      MOVEM.L D2-D7/A1-A3/A6,-(sp)
00001C92  7808                    1399                      MOVE.L  #8,D4
00001C94  4EB8 12AC               1400                      JSR     HEXOUTPUT
00001C98  4CDF 4EFC               1401                      MOVEM.L  (sp)+,D2-D7/A1-A3/A6
00001C9C  18FC 0024               1402                      MOVE.B      #'$',(A4)+
00001CA0                          1403  *                    MOVE.L      #6,D0
00001CA0                          1404  *                    TRAP        #15
00001CA0                          1405  
00001CA0                          1406                  
00001CA0  18FC 0020               1407                      MOVE.B      #' ',(A4)+
00001CA4                          1408  *                    MOVE.L      #6,D0
00001CA4                          1409  *                    TRAP        #15
00001CA4                          1410                      
00001CA4  18FC 0020               1411                      MOVE.B      #' ',(A4)+
00001CA8                          1412  *                    MOVE.L      #6,D0
00001CA8                          1413  *                    TRAP        #15
00001CA8                          1414  
00001CA8  18FC 0057               1415                      MOVE.B      #'W',(A4)+
00001CAC                          1416  *                    MOVE.L      #6,D0
00001CAC                          1417  *                    TRAP        #15
00001CAC                          1418                      
00001CAC                          1419                                                              
00001CAC  18FC 002E               1420                      MOVE.B      #'.',(A4)+
00001CB0                          1421  *                    MOVE.L      #6,D0
00001CB0                          1422  *                    TRAP        #15
00001CB0                          1423                      
00001CB0  4E75                    1424                      RTS
00001CB2                          1425                      
00001CB2                          1426  EAGROUP9
00001CB2  4281                    1427                      CLR.L   D1
00001CB4  4EB9 00001E2A           1428                      JSR     EALASTVALUE
00001CBA  4E75                    1429                      RTS
00001CBC                          1430                      
00001CBC                          1431  EAGROUP7
00001CBC  4281                    1432                      CLR.L   D1  ;byte holder               CLR.L   D1  ;byte holder
00001CBE  4286                    1433                      CLR.L   D6  ;loop counter
00001CC0  7C0F                    1434                      MOVE.L  #15,D6   ;max 15
00001CC2  0802 000A               1435                      BTST.L  #10,D2
00001CC6  6700 0078               1436                      BEQ     EAGROUP7POST ;z == 0 if bit is 1, which is memory to register (post increment). do reg scan last, which is done first
00001CCA  3212                    1437                      MOVE.W  (A2),D1
00001CCC                          1438                      ;else do src first
00001CCC                          1439  REVERSELOOP1
00001CCC  0D01                    1440                     BTST     D6,D1
00001CCE  6700 001C               1441                     BEQ      SKIPRVRSLOOP
00001CD2  5106                    1442                     SUBI.B   #8,D6
00001CD4  CC3C 000F               1443                     AND.B    #$0F,D6
00001CD8  0606 0030               1444                     ADDI.B   #$30,D6
00001CDC  18C6                    1445                     MOVE.B   D6,(A4)+
00001CDE  0406 0030               1446                     SUBI.B   #$30,D6
00001CE2  5046                    1447                     ADDI     #8,D6
00001CE4  18FC 0041               1448                     MOVE.B   #'A',(A4)+
00001CE8  18FC 002F               1449                     MOVE.B   #'/',(A4)+
00001CEC                          1450  SKIPRVRSLOOP
00001CEC  5306                    1451                     SUBI.B   #1,D6
00001CEE  CC3C 000F               1452                     AND.B    #$0F,D6
00001CF2  0C46 0008               1453                     CMPI     #8,D6
00001CF6  66D4                    1454                     BNE      REVERSELOOP1
00001CF8  6700 0002               1455                     BEQ      REVERSELOOPSPC
00001CFC                          1456                     
00001CFC  5306                    1457  REVERSELOOPSPC     SUBI.B   #1,D6
00001CFE  0801 0008               1458                     BTST     #8,D1
00001D02  6700 000E               1459                     BEQ      REVERSELOOP2
00001D06  18FC 0030               1460                     MOVE.B   #$30,(A4)+
00001D0A  18FC 0041               1461                     MOVE.B   #'A',(A4)+
00001D0E  18FC 002F               1462                     MOVE.B   #'/',(A4)+
00001D12                          1463                     ;SUBI.B   #1,D6
00001D12                          1464                     
00001D12                          1465  
00001D12                          1466  REVERSELOOP2       
00001D12  0D01                    1467                     BTST     D6,D1
00001D14  6700 0014               1468                     BEQ      SKIPFRVRSLOOP2
00001D18  0606 0030               1469                     ADDI.B   #$30,D6
00001D1C  18C6                    1470                     MOVE.B   D6,(A4)+
00001D1E  0406 0030               1471                     SUBI.B   #$30,D6
00001D22  18FC 0044               1472                     MOVE.B   #'D',(A4)+
00001D26  18FC 002F               1473                     MOVE.B   #'/',(A4)+
00001D2A                          1474  SKIPFRVRSLOOP2
00001D2A  5346                    1475                     SUBI     #1,D6
00001D2C  0C46 0000               1476                     CMPI     #0,D6
00001D30  6CE0                    1477                     BGE      REVERSELOOP2
00001D32  1C24                    1478                     MOVE.B   -(A4),D6
00001D34  4286                    1479                     CLR.L    D6
00001D36  18FC 002C               1480                     MOVE.B   #',',(A4)+
00001D3A  4EB8 1CB2               1481                     JSR     EAGROUP9
00001D3E  4E75                    1482                     RTS
00001D40                          1483  
00001D40                          1484                      
00001D40                          1485                      
00001D40                          1486  EAGROUP7POST                             
00001D40  4EB8 1CB2               1487                     JSR     EAGROUP9
00001D44  3212                    1488                     MOVE.W  (A2),D1
00001D46  18FC 002C               1489                     MOVE.B   #',',(A4)+
00001D4A  7C0F                    1490                     MOVE.L  #15,D6   ;max 15
00001D4C                          1491  
00001D4C                          1492  
00001D4C                          1493  
00001D4C                          1494  FRWRDLOOP1         
00001D4C  0C46 000F               1495                     CMPI     #15,D6
00001D50  6700 0038               1496                     BEQ      FORWARDLOOP2SPC
00001D54  0D01                    1497                     BTST     D6,D1
00001D56  6700 0026               1498                     BEQ      SKIPFRWRDSLOOP
00001D5A  2606                    1499                     MOVE.L   D6,D3
00001D5C  0406 000F               1500                     SUBI.B   #15,D6
00001D60  CDFC FFFF               1501                     MULS     #-1,D6
00001D64  CCBC 0000000F           1502                     AND.L    #$0000000F,D6
00001D6A  0606 0030               1503                     ADDI.B   #$30,D6
00001D6E  18C6                    1504                     MOVE.B   D6,(A4)+
00001D70  0406 0030               1505                     SUBI.B   #$30,D6
00001D74  18FC 0044               1506                     MOVE.B   #'D',(A4)+
00001D78  18FC 002F               1507                     MOVE.B   #'/',(A4)+
00001D7C  2C03                    1508                     MOVE.L   D3,D6
00001D7E                          1509  SKIPFRWRDSLOOP
00001D7E  5306                    1510                     SUB.B    #1,D6
00001D80  0C46 0007               1511                     CMPI     #7,D6
00001D84  66C6                    1512                     BNE      FRWRDLOOP1
00001D86  6700 0016               1513                     BEQ      FORWARDLOOP2SET
00001D8A                          1514                     
00001D8A                          1515  FORWARDLOOP2SPC
00001D8A  0801 000F               1516                     BTST     #15,D1
00001D8E  67EE                    1517                     BEQ      SKIPFRWRDSLOOP
00001D90  18FC 0030               1518                     MOVE.B   #$30,(A4)+
00001D94  18FC 0044               1519                     MOVE.B   #'D',(A4)+
00001D98  18FC 002F               1520                     MOVE.B   #'/',(A4)+  
00001D9C  60E0                    1521                     BRA      SKIPFRWRDSLOOP
00001D9E                          1522  
00001D9E                          1523  FORWARDLOOP2SET     
00001D9E  4283                    1524                     CLR.L    D3
00001DA0                          1525                     
00001DA0                          1526  FORWARDLOOP2
00001DA0  0D01                    1527                     BTST     D6,D1
00001DA2  6700 002E               1528                     BEQ      SKIPFRWRDSLOOP2
00001DA6  BCBC 00000000           1529                     CMP.L    #0,D6
00001DAC  6700 0032               1530                     BEQ      SKIPFRWRDSLOOP2SPC
00001DB0  2606                    1531                     MOVE.L   D6,D3
00001DB2                          1532                     
00001DB2  5F06                    1533                     SUBI.B   #7,D6
00001DB4  CDFC FFFF               1534                     MULS     #-1,D6
00001DB8  CCBC 0000000F           1535                     AND.L    #$0000000F,D6                
00001DBE                          1536  
00001DBE  0606 0030               1537                     ADDI.B   #$30,D6
00001DC2  18C6                    1538                     MOVE.B   D6,(A4)+
00001DC4  0406 0030               1539                     SUBI.B   #$30,D6
00001DC8  18FC 0041               1540                     MOVE.B   #'A',(A4)+
00001DCC  18FC 002F               1541                     MOVE.B   #'/',(A4)+
00001DD0  2C03                    1542                     MOVE.L   D3,D6
00001DD2                          1543  SKIPFRWRDSLOOP2
00001DD2  5306                    1544                     SUBI.B   #1,D6
00001DD4  0C46 00FF               1545                     CMPI     #$FF,D6
00001DD8  66C6                    1546                     BNE      FORWARDLOOP2
00001DDA  1C24                    1547                     MOVE.B   -(A4),D6
00001DDC  4286                    1548                     CLR.L    D6
00001DDE  4E75                    1549                     RTS
00001DE0                          1550  
00001DE0  18FC 0037               1551  SKIPFRWRDSLOOP2SPC  MOVE.B   #$37,(A4)+
00001DE4  18FC 0041               1552                      MOVE.B   #'A',(A4)+
00001DE8  18FC 002F               1553                      MOVE.B   #'/',(A4)+
00001DEC  60E4                    1554                      BRA     SKIPFRWRDSLOOP2
00001DEE                          1555  
00001DEE                          1556  
00001DEE                          1557  EAGROUP4ALL          ;everything except LEA
00001DEE  4281                    1558                      CLR.L   D1
00001DF0  4EB9 00001E16           1559                      JSR     CONSTANTREG
00001DF6  18FC 0044               1560                      MOVE.B  #'D',(A4)+
00001DFA  18FC 002C               1561                      MOVE.B  #',',(A4)+
00001DFE  6000 FEB2               1562                      BRA     EAGROUP9
00001E02                          1563                      
00001E02                          1564  EAGROUP4LEA          ;ONLY FOR LEA
00001E02  4281                    1565                      CLR.L   D1
00001E04  4EB9 00001E16           1566                      JSR     CONSTANTREG
00001E0A  18FC 0041               1567                      MOVE.B  #'A',(A4)+
00001E0E  18FC 002C               1568                      MOVE.B  #',',(A4)+
00001E12  6000 FE9E               1569                      BRA     EAGROUP9
00001E16                          1570                      
00001E16                          1571  CONSTANTREG
00001E16  2202                    1572                     MOVE.L   D2,D1
00001E18                          1573                     ;we just want the 11th - 9th bit
00001E18  C2BC 00000E00           1574                     AND.L    #%0000111000000000,D1
00001E1E  E089                    1575                     LSR.L    #8,D1
00001E20  E289                    1576                     LSR.L    #1,D1
00001E22  0601 0030               1577                     ADDI.B  #$30,D1
00001E26  18C1                    1578                     MOVE.B  D1,(A4)+
00001E28  4E75                    1579                     RTS
00001E2A                          1580                      
00001E2A                          1581  EALASTVALUE
00001E2A                          1582                      *check if mode respects register value
00001E2A                          1583                      *if not branch out to immediate data
00001E2A  2202                    1584                      MOVE.L  D2,D1
00001E2C  E689                    1585                      LSR.L   #3,D1
00001E2E  C2BC 00000007           1586                      AND.L   #%0000000000111,D1
00001E34  B2BC 00000007           1587                      CMP.L   #7,D1
00001E3A  6700 009A               1588                      BEQ     IMMEDIATEDATA
00001E3E  B2BC 00000004           1589                      CMP.L   #4,D1
00001E44  6700 018C               1590                      BEQ     ADDRESSDECREMENT
00001E48  6E00 01BC               1591                      BGT     INVALIDEAMODE
00001E4C  B2BC 00000003           1592                      CMP.L   #3,D1
00001E52  6700 014A               1593                      BEQ     ADDRESSINCREMENT
00001E56  B2BC 00000002           1594                      CMP.L   #2,D1
00001E5C  6700 002E               1595                      BEQ     INDIRECTADDRESS
00001E60  B2BC 00000001           1596                      CMP.L   #1,D1
00001E66  6700 004C               1597                      BEQ     DIRECTADDRESS
00001E6A                          1598                      ;data reg
00001E6A                          1599  
00001E6A                          1600                      
00001E6A  4281                    1601                      CLR.L   D1
00001E6C  2202                    1602                      MOVE.L  D2,D1
00001E6E  C2BC 00000007           1603                      AND.L   #%0000000000000111,D1
00001E74                          1604                      
00001E74  0601 0030               1605                      ADDI.B  #$30,D1
00001E78                          1606                      
00001E78  18C1                    1607                      MOVE.B  D1,(A4)+
00001E7A                          1608  *                    MOVE.L  #6,D0
00001E7A                          1609  *                    TRAP    #15
00001E7A                          1610  
00001E7A  18FC 0044               1611                      MOVE.B  #'D',(A4)+
00001E7E                          1612  *                    MOVE.L  #6,D0
00001E7E                          1613  *                    TRAP    #15
00001E7E  18FC 0020               1614                  MOVE.B  #' ',(A4)+
00001E82  18FC 0020               1615                  MOVE.B  #' ',(A4)+
00001E86  18FC 0020               1616                  MOVE.B  #' ',(A4)+
00001E8A  4E75                    1617                      RTS
00001E8C                          1618                      
00001E8C                          1619  INDIRECTADDRESS  
00001E8C                          1620  
00001E8C                          1621  *                    MOVE.L  #6,D0
00001E8C                          1622  *                    TRAP    #15
00001E8C                          1623                      
00001E8C  18FC 0029               1624                      MOVE.B  #')',(A4)+
00001E90                          1625  *                    MOVE.L  #6,D0
00001E90                          1626  *                    TRAP    #15
00001E90                          1627  
00001E90  2202                    1628                      MOVE.L  D2,D1
00001E92  C2BC 00000007           1629                      AND.L   #%0000000000000111,D1
00001E98  0601 0030               1630                      ADDI.B  #$30,D1
00001E9C  18C1                    1631                      MOVE.B  D1,(A4)+
00001E9E                          1632                      
00001E9E  18FC 0041               1633                      MOVE.B  #'A',(A4)+
00001EA2  18FC 0028               1634                      MOVE.B  #'(',(A4)+
00001EA6                          1635  *                    MOVE.L  #6,D0
00001EA6                          1636  *                    TRAP    #15
00001EA6                          1637                      
00001EA6  18FC 0020               1638                      MOVE.B  #' ',(A4)+
00001EAA  18FC 0020               1639                      MOVE.B  #' ',(A4)+
00001EAE  18FC 0020               1640                      MOVE.B  #' ',(A4)+                    
00001EB2  4E75                    1641                      RTS                  
00001EB4                          1642        
00001EB4                          1643  DIRECTADDRESS
00001EB4  4281                    1644                      CLR.L   D1
00001EB6  2202                    1645                      MOVE.L  D2,D1
00001EB8                          1646                      
00001EB8                          1647                      
00001EB8  C2BC 00000007           1648                      AND.L   #%0000000000000111,D1
00001EBE                          1649                      
00001EBE                          1650                      
00001EBE  0601 0030               1651                      ADDI.B  #$30,D1
00001EC2  18C1                    1652                      MOVE.B  D1,(A4)+
00001EC4                          1653  *                    MOVE.L  #6,D0
00001EC4                          1654  *                    TRAP    #15
00001EC4                          1655                      
00001EC4  18FC 0041               1656                      MOVE.B  #'A',(A4)+
00001EC8                          1657  *                    MOVE.L  #6,D0
00001EC8                          1658  *                    TRAP    #15
00001EC8                          1659  
00001EC8  18FC 0020               1660                      MOVE.B  #' ',(A4)+
00001ECC  18FC 0020               1661                      MOVE.B  #' ',(A4)+
00001ED0  18FC 0020               1662                      MOVE.B  #' ',(A4)+  
00001ED4  4E75                    1663                      RTS
00001ED6                          1664  
00001ED6                          1665                
00001ED6                          1666  IMMEDIATEDATA
00001ED6                          1667                      ;need to decide whether print long, word, or byte sized. 
00001ED6                          1668                      ;decide size of output, 0(word), 1(long), 4(immediate)
00001ED6                          1669  *                    MOVE.L      #$23,D1
00001ED6                          1670  *                    MOVE.L      #6,D0
00001ED6                          1671  *                    TRAP        #15
00001ED6                          1672                      
00001ED6  4281                    1673                      CLR.L   D1
00001ED8  2202                    1674                      MOVE.L  D2,D1
00001EDA  C4BC 00000007           1675                      AND.L   #%0000000000000111,D2
00001EE0                          1676                      ;let d1 have the next value
00001EE0  4281                    1677                      CLR.L   D1
00001EE2  0C82 00000000           1678                      CMPI.L  #0,D2
00001EE8  6700 001A               1679                      BEQ     PRINTWORDDATA
00001EEC  0C82 00000001           1680                      CMPI.L  #1,D2
00001EF2  6700 003A               1681                      BEQ     PRINTLONGDATA
00001EF6  0C82 00000004           1682                      CMPI.L  #4,D2
00001EFC  6700 0072               1683                      BEQ     PRINTIMMEDIATEDATA
00001F00  6000 0104               1684                      BRA     INVALIDEAMODE
00001F04                          1685                      ;RTS         ;it should never reach here
00001F04                          1686                      
00001F04                          1687                          
00001F04                          1688  PRINTWORDDATA
00001F04  321A                    1689                      MOVE.W  (A2)+,D1
00001F06  48E7 3F72               1690                      MOVEM.L D2-D7/A1-A3/A6,-(sp)
00001F0A  7804                    1691                      MOVE.L  #$4,D4
00001F0C  4EB8 12AC               1692                      JSR     HEXOUTPUT
00001F10  4CDF 4EFC               1693                      MOVEM.L  (sp)+,D2-D7/A1-A3/A6
00001F14  18FC 0024               1694                      MOVE.B  #'$',(A4)+
00001F18  18FC 0020               1695                      MOVE.B  #' ',(A4)+
00001F1C  18FC 0020               1696                      MOVE.B  #' ',(A4)+  
00001F20  18FC 0020               1697                      MOVE.B  #' ',(A4)+
00001F24  18FC 0020               1698                      MOVE.B  #' ',(A4)+
00001F28  18FC 0020               1699                      MOVE.B  #' ',(A4)+  
00001F2C  4E75                    1700                      RTS
00001F2E                          1701  
00001F2E                          1702  PRINTLONGDATA
00001F2E  321A                    1703                      MOVE.W  (A2)+,D1     
00001F30  4286                    1704                      CLR.L   D6
00001F32  3C01                    1705                      MOVE.W  D1,D6
00001F34  321A                    1706                      MOVE.W  (A2)+,D1     
00001F36                          1707                 
00001F36  48E7 3F72               1708                      MOVEM.L D2-D7/A1-A3/A6,-(sp)
00001F3A  7804                    1709                      MOVE.L   #$4,D4
00001F3C  4EB8 12AC               1710                      JSR      HEXOUTPUT
00001F40  4CDF 4EFC               1711                      MOVEM.L  (sp)+,D2-D7/A1-A3/A6
00001F44                          1712                      
00001F44                          1713                      
00001F44  3206                    1714                      MOVE.W  D6,D1
00001F46  4286                    1715                      CLR.L   D6
00001F48                          1716                      
00001F48  48E7 3F72               1717                      MOVEM.L D2-D7/A1-A3/A6,-(sp)
00001F4C  7804                    1718                      MOVE.L   #$4,D4
00001F4E  4EB8 12AC               1719                      JSR      HEXOUTPUT
00001F52  4CDF 4EFC               1720                      MOVEM.L  (sp)+,D2-D7/A1-A3/A6
00001F56                          1721                      
00001F56  18FC 0024               1722                      MOVE.B  #'$',(A4)+
00001F5A  18FC 0020               1723                      MOVE.B  #' ',(A4)+
00001F5E  18FC 0020               1724                      MOVE.B  #' ',(A4)+  
00001F62  18FC 0020               1725                      MOVE.B  #' ',(A4)+
00001F66  18FC 0020               1726                      MOVE.B  #' ',(A4)+
00001F6A  18FC 0020               1727                      MOVE.B  #' ',(A4)+  
00001F6E  4E75                    1728                      RTS
00001F70                          1729    
00001F70                          1730  PRINTIMMEDIATEDATA
00001F70  221A                    1731                      MOVE.L  (A2)+,D1
00001F72  48E7 3F72               1732                      MOVEM.L D2-D7/A1-A3/A6,-(sp)
00001F76  7804                    1733                      MOVE.L  #4,D4
00001F78  4EB8 12AC               1734                      JSR     HEXOUTPUT
00001F7C  4CDF 4EFC               1735                      MOVEM.L  (sp)+,D2-D7/A1-A3/A6
00001F80  18FC 0023               1736                      MOVE.B  #'#',(A4)+
00001F84  18FC 0024               1737                      MOVE.B  #'$',(A4)+
00001F88  18FC 0020               1738                      MOVE.B  #' ',(A4)+
00001F8C  18FC 0020               1739                      MOVE.B  #' ',(A4)+  
00001F90  18FC 0020               1740                      MOVE.B  #' ',(A4)+
00001F94  18FC 0020               1741                      MOVE.B  #' ',(A4)+
00001F98  18FC 0020               1742                      MOVE.B  #' ',(A4)+  
00001F9C  4E75                    1743                      RTS                  
00001F9E                          1744                          
00001F9E                          1745  ADDRESSINCREMENT    
00001F9E  18FC 002B               1746                      MOVE.B  #'+',(A4)+
00001FA2                          1747  *                    MOVE.L  #6,D0
00001FA2                          1748  *                    TRAP    #15
00001FA2                          1749  
00001FA2  18FC 0029               1750                      MOVE.B  #')',(A4)+
00001FA6                          1751  *                    MOVE.L  #6,D0
00001FA6                          1752  *                    TRAP    #15
00001FA6                          1753                      
00001FA6                          1754  
00001FA6                          1755     
00001FA6  2202                    1756                      MOVE.L  D2,D1
00001FA8  C2BC 00000007           1757                      AND.L   #%0000000000000111,D1
00001FAE  0601 0030               1758                      ADDI.B  #$30,D1
00001FB2  18C1                    1759                      MOVE.B  D1,(A4)+
00001FB4                          1760  *                    MOVE.L  #6,D0
00001FB4                          1761  *                    TRAP    #15
00001FB4                          1762  
00001FB4  18FC 0041               1763                      MOVE.B  #'A',(A4)+             
00001FB8                          1764  *                    MOVE.L  #6,D0
00001FB8                          1765  *                    TRAP    #15
00001FB8                          1766  
00001FB8  18FC 0028               1767                      MOVE.B  #'(',(A4)+
00001FBC                          1768  *                    MOVE.L  #6,D0
00001FBC                          1769  *                    TRAP    #15
00001FBC                          1770  
00001FBC                          1771  
00001FBC  18FC 0020               1772                      MOVE.B  #' ',(A4)+
00001FC0  18FC 0020               1773                      MOVE.B  #' ',(A4)+  
00001FC4  18FC 0020               1774                      MOVE.B  #' ',(A4)+
00001FC8  18FC 0020               1775                      MOVE.B  #' ',(A4)+
00001FCC  18FC 0020               1776                      MOVE.B  #' ',(A4)+                      
00001FD0  4E75                    1777                      RTS
00001FD2                          1778                      
00001FD2                          1779  
00001FD2                          1780  ADDRESSDECREMENT 
00001FD2  18FC 0029               1781                      MOVE.B  #')',(A4)+
00001FD6                          1782  *                    MOVE.L  #6,D0
00001FD6                          1783  *                    TRAP    #15
00001FD6                          1784                      
00001FD6  2202                    1785                      MOVE.L  D2,D1
00001FD8  C2BC 00000007           1786                      AND.L   #%0000000000000111,D1
00001FDE  0601 0030               1787                      ADDI.B  #$30,D1
00001FE2  18C1                    1788                      MOVE.B  D1,(A4)+
00001FE4                          1789  *                    MOVE.L  #6,D0
00001FE4                          1790  *                    TRAP    #15
00001FE4                          1791                      
00001FE4  18FC 0041               1792                      MOVE.B  #'A',(A4)+
00001FE8                          1793  *                    MOVE.L  #6,D0
00001FE8                          1794  *                    TRAP    #15
00001FE8                          1795                      
00001FE8  18FC 0028               1796                      MOVE.B  #'(',(A4)+
00001FEC                          1797  *                    MOVE.L  #6,D0
00001FEC                          1798  *                    TRAP    #15
00001FEC                          1799                      
00001FEC  18FC 002D               1800                      MOVE.B  #'-',(A4)+
00001FF0                          1801  *                    MOVE.L  #6,D0
00001FF0                          1802  *                    TRAP    #15
00001FF0                          1803  
00001FF0  18FC 0020               1804                      MOVE.B  #' ',(A4)+
00001FF4  18FC 0020               1805                      MOVE.B  #' ',(A4)+  
00001FF8  18FC 0020               1806                      MOVE.B  #' ',(A4)+
00001FFC  18FC 0020               1807                      MOVE.B  #' ',(A4)+
00002000  18FC 0020               1808                      MOVE.B  #' ',(A4)+                      
00002004  4E75                    1809                      RTS
00002006                          1810  
00002006                          1811  
00002006                          1812  INVALIDEAMODE
00002006  4EB8 1A22               1813                  JSR     EAGROUPINVALID
0000200A  18FC 0041               1814                  MOVE.B  #'A',(A4)+
0000200E  18FC 0054               1815                  MOVE.B  #'T',(A4)+
00002012  18FC 0041               1816                  MOVE.B  #'A',(A4)+
00002016  18FC 0044               1817                  MOVE.B  #'D',(A4)+
0000201A  18FC 0020               1818                  MOVE.B  #' ',(A4)+
0000201E  18FC 0020               1819                  MOVE.B  #' ',(A4)+
00002022  18FC 0020               1820                  MOVE.B  #' ',(A4)+
00002026  18FC 0020               1821                  MOVE.B  #' ',(A4)+
0000202A  4EB8 1270               1822                  JSR     OUTPUTADDRESS
0000202E  4EB9 00002036           1823                  JSR     EAOUTPUT
00002034  4E75                    1824                  RTS
00002036                          1825                  ;we need       one rts. this rts will return to its original branch
00002036                          1826                  ;so if we go to this branch and print data and hten rts, it will print that opcode as well
00002036                          1827                  ; need a mechanism which willl till original branch that an invalid has occured
00002036                          1828                  ; maybe use D4?     we can do this by checking if A4 is empty. in good case, A4 will be filled.
00002036                          1829                  ; in bad case it will be cleared. this works well since EA is being put into string stack initially.
00002036                          1830                  ; thus for every branch, we need to check if A4 is empty AFRTER being called 
00002036                          1831  *FORMAT1         
00002036                          1832  *FORMAT2
00002036                          1833  *FORMAT3
00002036                          1834  *FORMAT4
00002036                          1835  *FORMAT5
00002036                          1836  *FORMAT6
00002036                          1837  *FORMAT7
00002036                          1838  *FORMAT8
00002036                          1839  *FORMAT9
00002036                          1840  *FORMAT10
00002036                          1841  *FORMAT11
00002036                          1842  *FORMAT12
00002036                          1843  *FORMAT13
00002036                          1844  *FORMAT14
00002036                          1845  *FORMAT15
00002036                          1846  *EAGRP1
00002036                          1847  *EAGRP2
00002036                          1848  *EAGRP3
00002036                          1849  *EAGRP4
00002036                          1850  *EAGRP5
00002036                          1851  *EAGRP6
00002036                          1852  *EAGRP7
00002036                          1853  *EAGRP8
00002036                          1854  *EAGRP9
00002036                          1855  *EAGRP10
00002036                          1856  ;I/O         
00002036                          1857  ******************************************************************************************************************
00002036                          1858  EAOUTPUT
00002036                          1859                  ;LEA        $900,A5
00002036  4BF9 00002672           1860                  LEA        base16value,A5
0000203C  4281                    1861                  CLR.L      D1
0000203E  6000 0002               1862                  BRA        REVERSEIT
00002042                          1863  
00002042                          1864  
00002042                          1865                  
00002042                          1866  REVERSEIT
00002042  1224                    1867                  MOVE.B     -(A4),D1        ;code to reverse string
00002044  B27C 000A               1868                  CMP        #$A,D1        
00002048  6700 0008               1869                  BEQ        FINAL
0000204C  1AC1                    1870                  MOVE.B     D1,(A5)+
0000204E  5204                    1871                  ADD.B      #1,D4
00002050  60F0                    1872                  BRA        REVERSEIT   
00002052                          1873                  
00002052                          1874                  
00002052                          1875  FINAL           
00002052                          1876  
00002052  1AFC 0000               1877                  MOVE.B      #0,(A5)+        ;add NULL ASCII CHAR
00002056                          1878  
00002056                          1879  *                LEA $900, A1 ; display the string stored at "base16value"
00002056  43F9 00002672           1880                  LEA  base16value,A1
0000205C  700E                    1881                  MOVE.L #14,D0       ; task number #13
0000205E  4E4F                    1882                  TRAP #15            ; call TRAP #15 function        
00002060                          1883                  
00002060                          1884                  ;CLEARBUFFER
00002060                          1885  CLEANIT
00002060  1B3C 00FF               1886                  MOVE.B     #$FF,-(A5)
00002064  18FC 00FF               1887                  MOVE.B     #$FF,(A4)+
00002068  B87C 0000               1888                  CMP        #$0,D4        
0000206C  6700 0008               1889                  BEQ        FINALRTS               
00002070  0604 00FF               1890                  ADD.B      #-1,D4
00002074  60EA                    1891                  BRA        CLEANIT
00002076                          1892                  
00002076                          1893  FINALRTS               
00002076  4E75                    1894                  RTS
00002078                          1895              
00002078  4283                    1896  NEXTIO          CLR.L     D3
0000207A  4284                    1897                  CLR.L     D4 
0000207C                          1898                  
0000207C  43F9 0000250A           1899                  LEA     CLR,A1   ;Display intro message
00002082  103C 000E               1900                  MOVE.B  #14,D0 
00002086  4E4F                    1901                  TRAP    #15
00002088                          1902                                
00002088  4CDF 7EFA               1903                  MOVEM.L  (sp)+,D1/D3-D7/A1-A6 ;I/O gets his stuff back
0000208C  B5CB                    1904                  CMP.L    A3,A2  ;we dont need more machine language once we have reached the the destination
0000208E  6E00 0088               1905                  BGT      ENDPAGE ;so when equal, we are done
00002092  0C05 0001               1906                  CMPI.B   #1,D5 ;hard cded page limit for first page
00002096  6700 0010               1907                  BEQ      SECONDPAGE
0000209A  B2BC 00000001           1908                  CMP.L    #1,D1
000020A0  6700 0010               1909                  BEQ      NEWPAGELOOP
000020A4  6600 F1B2               1910                  BNE      FEEDOPCODE
000020A8                          1911  
000020A8                          1912                  
000020A8                          1913  SECONDPAGE
000020A8  B2BC 00000001           1914                  CMP.L    #1,D1       ;hardcoded limit for other pages page. can be and expected to change
000020AE  6600 F1A8               1915                  BNE      FEEDOPCODE
000020B2                          1916                  ;check if user wants new page. if no exit. if yes continue to feedopcode.
000020B2                          1917  NEWPAGELOOP
000020B2  1A3C 0001               1918                  MOVE.B   #1,D5
000020B6  43F9 0000273A           1919                  LEA     IOVariable,A1          ;had to specify or it wont work properly                 
000020BC  43F9 00002470           1920                  LEA     NEWPAGEMSG,A1     
000020C2  303C 000E               1921                  MOVE.W  #14,D0          
000020C6  4E4F                    1922                  TRAP    #15 
000020C8                          1923                  
000020C8  43F9 0000273A           1924                  LEA     IOVariable,A1          ;had to specify or it wont work properly                 
000020CE  303C 0002               1925                  MOVE.W  #2,D0           ;had to specify or it wont work properly
000020D2  4E4F                    1926                  TRAP    #15  
000020D4                          1927                  
000020D4  1611                    1928                  MOVE.B  (A1),D3
000020D6                          1929                  
000020D6  43F9 0000273A           1930                  LEA     IOVariable,A1          ;had to specify or it wont work properly
000020DC  B63C 0059               1931                  CMP.B   #$59,D3
000020E0  6700 F176               1932                  BEQ     FEEDOPCODE
000020E4  B63C 0079               1933                  CMP.B   #$79,D3
000020E8  6700 F16E               1934                  BEQ     FEEDOPCODE
000020EC  B63C 0000               1935                  CMP.B   #$0,D3
000020F0  6700 F166               1936                  BEQ     FEEDOPCODE
000020F4  B63C 004E               1937                  CMP.B   #$4E,D3
000020F8  6700 001E               1938                  BEQ     ENDPAGE 
000020FC  B63C 006E               1939                  CMP.B   #$6E,D3
00002100  6700 0016               1940                  BEQ     ENDPAGE 
00002104                          1941                  
00002104  43F9 0000273A           1942                  LEA     IOVariable,A1          ;had to specify or it wont work properly
0000210A  43F9 000023E4           1943                  LEA     BADCHARACTER,A1     
00002110  303C 000D               1944                  MOVE.W  #13,D0          
00002114  4E4F                    1945                  TRAP    #15
00002116                          1946                  
00002116  609A                    1947                  BRA     NEWPAGELOOP  
00002118                          1948                  ******************************************************************************************************************
00002118                          1949  ENDPAGE                 
00002118  4CDF 7EFF               1950                  MOVEM.L     (SP)+,D0-D7/A1-A6 ;start from scratch, all 0s
0000211C  6000 EEEE               1951                  BRA         STARTMENU
00002120                          1952   
00002120                          1953                  
00002120                          1954  ENDPROGRAM              
00002120  43F9 000024B4           1955                  LEA     ENDMSG,A1     
00002126  303C 000D               1956                  MOVE.W  #13,D0          
0000212A  4E4F                    1957                  TRAP    #15
0000212C                          1958                  
0000212C  303C 0009               1959                  MOVE.W  #9,D0          
00002130  4E4F                    1960                  TRAP    #15    
00002132                          1961                           
00002132  FFFF FFFF               1962                  SIMHALT             ; halt simulator
00002136                          1963      
00002136  =0000000A               1964  CR                  EQU     $0A
00002136  =0000000D               1965  LF                  EQU     $0D
00002136                          1966  
00002136= 58 58 58 58 58 58 ...   1967  WELMSG              DC.B    'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX',CR,LF
0000216B= 58 20 20 20 20 20 ...   1968                      DC.B    'X                                                 X',CR,LF
000021A0= 58 20 20 20 57 65 ...   1969                      DC.B    'X   Welcome to the Disassembler of Motorola 68k   X',CR,LF
000021D5= 58 20 20 20 20 20 ...   1970                      DC.B    'X                                                 X',CR,LF
0000220A= 58 20 20 20 20 20 ...   1971                      DC.B    'X           By:    Sesario Imanputra              X',CR,LF
0000223F= 58 20 20 20 20 20 ...   1972                      DC.B    'X                  Zachary Liong                  X',CR,LF
00002274= 58 20 20 20 20 20 ...   1973                      DC.B    'X                  Micah Rice                     X',CR,LF
000022A9= 58 20 20 20 20 20 ...   1974                      DC.B    'X                  Marci Ma                       X',CR,LF
000022DE= 58 20 20 20 20 20 ...   1975                      DC.B    'X                                                 X',CR,LF
00002313= 58 58 58 58 58 58 ...   1976                      DC.B    'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX',CR,LF,CR,LF, 0
0000234B                          1977  LINE_COUNT          DS.B    1
0000234C                          1978  
0000234C= 50 6C 65 61 73 65 ...   1979  MSGINPUT            DC.B    'Please enter first memory address  (''Q'' to quit): $',0
00002380= 50 6C 65 61 73 65 ...   1980  MSGINPUT2           DC.B    'Please enter second memory address (''Q'' to quit): $',0
000023B4= 494E5055 54205641 ...   1981  BADVALUE            DC.L    'INPUT VALUE EXCEEDS 32 BIT RANGE!',CR,LF,0
000023E4= 494E5055 54204841 ...   1982  BADCHARACTER        DC.L    'INPUT HAS ILLEGAL CHARACTER!',CR,LF,0
0000240C= 534F5552 43452041 ...   1983  BADADDRESS          DC.L    'SOURCE ADDRESS CANNOT BE BIGGER THEN DESTINATION ADDRESS!',CR,LF,0
00002454= 56414C55 4520544F ...   1984  VALUETOOLOW         DC.L    'VALUE TOO LOW!',CR,LF,0
00002470= 454E5445 5220544F ...   1985  NEWPAGEMSG          DC.L    'ENTER TO CONTINUE... ',CR,LF,0
00002494                          1986  
00002494= 53544152 544F5645 ...   1987  NEWPROGMSG          DC.L    'STARTOVER? [Y|N]: ',CR,LF,0
000024B4                          1988  
000024B4= 58 58 58 58 58 58 ...   1989  ENDMSG              DC.B    'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX    END    XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX',0
00002506                          1990  
00002506= 2B 00                   1991  PLUSMSG             DC.B    '+',0
00002508= 2D 00                   1992  NEGMSG              DC.B    '-',0
0000250A= 0A 0D 00                1993  CLR                 DC.B    CR,LF,0
0000250D= 20 4E 4F 50 00          1994  NOOPMSG             DC.B    ' NOP',0
00002512= 20 52 54 53 00          1995  RTSMSG              DC.B    ' RTS',0
00002517                          1996  
00002517= 20 4D 4F 56 45 4D ...   1997  MOVEMMSG            DC.B    ' MOVEM.',0
0000251F= 20 4D 4F 56 45 2E 00    1998  MOVEMSG             DC.B    ' MOVE.',0
00002526= 20 4C 45 41 2E 00       1999  LEAMSG              DC.B    ' LEA.',0
0000252C= 20 4E 4F 54 2E 00       2000  NOTMSG              DC.B    ' NOT.',0
00002532= 20 4A 53 52 2E 00       2001  JSRMSG              DC.B    ' JSR.',0
00002538= 20 42 47 54 2E 00       2002  BGTMSG              DC.B    ' BGT.',0
0000253E= 20 42 4C 45 2E 00       2003  BLEMSG              DC.B    ' BLE.',0
00002544= 20 42 45 51 2E 00       2004  BEQMSG              DC.B    ' BEQ.',0
0000254A= 20 42 52 41 2E 00       2005  BRAMSG              DC.B    ' BRA.',0
00002550= 20 44 49 56 55 2E 00    2006  DIVUMSG             DC.B    ' DIVU.',0
00002557= 20 53 55 42 2E 00       2007  SUBMSG              DC.B    ' SUB.',0
0000255D= 20 4D 55 4C 53 2E 00    2008  MULSMSG             DC.B    ' MULS.',0
00002564= 20 41 4E 44 2E 00       2009  ANDMSG              DC.B    ' AND.',0
0000256A= 20 41 44 44 2E 00       2010  ADDMSG              DC.B    ' ADD.',0
00002570= 20 4C 53 4C 2E 00       2011  LSLMSG              DC.B    ' LSL.',0
00002576= 20 41 53 4C 2E 00       2012  ASLMSG              DC.B    ' ASL.',0
0000257C= 20 44 41 54 41 20 ...   2013  INVALIDMSG          DC.B    ' DATA  ',0
00002584= 20 49 4E 50 55 54 ...   2014  EVENINPUTMSG        DC.B    ' INPUT VALUE IS EVEN!',0
0000259A= 20 20 20 00             2015  SPACEMSG            DC.B    '   ',0
0000259E= 57 20 20 00             2016  WORDSIZE            DC.B    'W  ',0
000025A2= 42 20 20 00             2017  BYTESIZE            DC.B    'B  ',0
000025A6= 4C 20 20 00             2018  LONGSIZE            DC.B    'L  ',0
000025AA                          2019  tempresult          DS.L    50      ; variable to save temporary result
00002672                          2020  base16value         DS.L    50     ; variable to save the final result
0000273A                          2021  IOVariable          DS.L    10     ; variable to save the final result
00002762                          2022  
00002762                          2023  * Put variables and constants here
00002762                          2024  
00002762                          2025      END    START        ; last line of source

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ADDMSG              256A
ADDRESSDECREMENT    1FD2
ADDRESSINCREMENT    1F9E
ADD_REG             1AA4
ALPHA               11C4
ANDBRANCH           1784
ANDMSG              2564
ASLMEMBRANCH        1856
ASLMSG              2576
ASLREGBRANCH        18B6
ATOH                1150
BADADDRESS          240C
BADADDRESSORDER     1224
BADCHARACTER        23E4
BADINPUT            1126
BADVALUE            23B4
BASE16VALUE         2672
BEQBRANCH           15C4
BEQMSG              2544
BGTBRANCH           15F4
BGTMSG              2538
BLEBRANCH           1624
BLEMSG              253E
BRABRANCH           158C
BRAMSG              254A
BYTESIZE            25A2
CHEAPLOOP           12B8
CHECKINPUTAGAIN     1094
CHECKLOW            1214
CHECKNEG            1162
CLEANIT             2060
CLR                 250A
CONSTANTREG         1E16
CONTLOOP            1072
CONVERTIT           12E8
CONVERT_MODE_REG    1A60
CONVERT_REG         1B1A
CR                  A
DATA_REG            1A92
DECREMENT_REG       1AEA
DIRECTADDRESS       1EB4
DIRECTCONV          12D8
DIVUMSG             2550
DONE                1304
EAGROUP4ALL         1DEE
EAGROUP4LEA         1E02
EAGROUP5            1BCE
EAGROUP5_ADD        1C2C
EAGROUP5_ADDWORD    1C52
EAGROUP5_SIZEW      1C78
EAGROUP7            1CBC
EAGROUP7POST        1D40
EAGROUP8            1BA8
EAGROUP9            1CB2
EAGROUPINVALID      1A22
EALASTVALUE         1E2A
EAOUTPUT            2036
ENDMSG              24B4
ENDPAGE             2118
ENDPROGRAM          2120
ERR                 11B6
EVENINPUTMSG        2584
FEEDOPCODE          1258
FINAL               2052
FINALRTS            2076
FINISHSAVING        1250
FORWARDLOOP2        1DA0
FORWARDLOOP2SET     1D9E
FORWARDLOOP2SPC     1D8A
FOR_LOOP            1048
FRWRDLOOP1          1D4C
GET0TO2             1A4E
GET3TO5             1A54
GET6TO8             1A58
GET9TO11            1A5C
GETSIZEFORMAT1      146E
GETSIZEFORMAT2      1492
GETSIZEFORMAT3      14AE
GET_IMMEDIATE       1B86
HEXOUTPUT           12AC
IMMEDIATEDATA       1ED6
IMMEDIATE_REG       1B08
IMM_LONG            1BA2
IMM_WORD            1B98
INCREMENT_REG       1AD0
INDIRECTADDRESS     1E8C
INDIRECT_REG        1AB6
INPUT1              1010
INPUT2              102C
INVALIDBRANCH       19D6
INVALIDEAMODE       2006
INVALIDLOWVALUE     118C
INVALIDMSG          257C
IOVARIABLE          273A
JSRMBRANCH          14E4
JSRMSG              2532
LEABRANCH           1522
LEAMSG              2526
LF                  D
LINE_COUNT          234B
LONGSIZE            25A6
LOWERCASE           10A6
LSLMEMBRANCH        1886
LSLMSG              2570
LSLREGBRANCH        18F2
MOVEMBRANCH         13C4
MOVEMMSG            2517
MOVEMSG             251F
MSGINPUT            234C
MSGINPUT2           2380
MULSBRANCH          1748
MULSLOOP            1732
MULSMSG             255D
MULSTEST            172C
NEGMSG              2508
NEGVALUE            11C0
NEWPAGELOOP         20B2
NEWPAGEMSG          2470
NEWPROGMSG          2494
NEXTFOURHEX         1A0A
NEXTIO              2078
NEXTNEXTFOURHEX     1A16
NOOPBRANCH          1982
NOOPMSG             250D
NOTBRANCH           140E
NOTMSG              252C
NUM1                1B28
NUM2                1B36
NUM3                1B44
NUM4                1B52
NUM5                1B60
NUM6                1B6E
NUM7                1B7C
OPCODEGROUP1        1392
OPCODEGROUP2        1562
OPCODEGROUP3        1654
OPCODEGROUP4        16A2
OPCODEGROUP5        1710
OPCODEGROUP6        17CA
OPCODEGROUP7        182C
OPCODEGROUP8        192E
OPCODETIME          1338
OTHERVAL            10BC
OUTPUTADDRESS       1270
OVERFLOWDETECT      10DE
OVERFLOWINPUT       10FC
OVERFLOWINPUTCHECK  10EA
PA                  4080
PE                  408E
PI                  4084
PLUSMSG             2506
PO                  408C
PRINTADD            17E4
PRINTIMMEDIATEDATA  1F70
PRINTLONGDATA       1F2E
PRINTLONGSIZE       14D4
PRINTWORDDATA       1F04
PRINTWORDSIZE       14DC
PRO                 4000
PU                  4088
RESET               116A
RETLOOP             108A
RETLOOPNEG          108E
REVERSEIT           2042
REVERSELOOP1        1CCC
REVERSELOOP2        1D12
REVERSELOOPSPC      1CFC
RTSBRANCH           19AC
RTSMSG              2512
SAVESECOND          11D6
SECONDPAGE          20A8
SKIPFRVRSLOOP2      1D2A
SKIPFRWRDSLOOP      1D7E
SKIPFRWRDSLOOP2     1DD2
SKIPFRWRDSLOOP2SPC  1DE0
SKIPRVRSLOOP        1CEC
SKIPZEROLOOP        1336
SPACEMSG            259A
SPECCASE            12FA
START               1000
STARTMENU           100C
SUBBRANCH           16DC
SUBBRANCH3          16D0
SUBMSG              2557
SUBSTRACTVAL        1090
SUBSTRACTVALOTHER   10D2
TEMPRESULT          25AA
TESTADD             181C
TESTSUBBRANCH       16B8
TESTSUBBRANCH2      16C4
TOREVERSEIT         1318
VALUETOOLOW         2454
WELMSG              2136
WORDSIZE            259E
ZEROLOOP            1328
